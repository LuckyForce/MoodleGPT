{"version":3,"file":"popup.js","sources":["../../src/popup/data.ts","../../node_modules/tslib/tslib.es6.js","../../node_modules/openai/internal/qs/formats.mjs","../../node_modules/openai/internal/qs/utils.mjs","../../node_modules/openai/internal/qs/stringify.mjs","../../node_modules/openai/version.mjs","../../node_modules/openai/_shims/registry.mjs","../../node_modules/openai/_shims/MultipartBody.mjs","../../node_modules/openai/_shims/index.mjs","../../node_modules/openai/_shims/web-runtime.mjs","../../node_modules/openai/error.mjs","../../node_modules/openai/internal/decoders/line.mjs","../../node_modules/openai/internal/stream-utils.mjs","../../node_modules/openai/streaming.mjs","../../node_modules/openai/uploads.mjs","../../node_modules/openai/core.mjs","../../node_modules/openai/pagination.mjs","../../node_modules/openai/resource.mjs","../../node_modules/openai/resources/chat/completions/messages.mjs","../../node_modules/openai/resources/chat/completions/completions.mjs","../../node_modules/openai/resources/chat/chat.mjs","../../node_modules/openai/resources/audio/speech.mjs","../../node_modules/openai/resources/audio/transcriptions.mjs","../../node_modules/openai/resources/audio/translations.mjs","../../node_modules/openai/resources/audio/audio.mjs","../../node_modules/openai/resources/batches.mjs","../../node_modules/openai/resources/beta/assistants.mjs","../../node_modules/openai/lib/RunnableFunction.mjs","../../node_modules/openai/lib/chatCompletionUtils.mjs","../../node_modules/openai/lib/EventStream.mjs","../../node_modules/openai/lib/parser.mjs","../../node_modules/openai/lib/AbstractChatCompletionRunner.mjs","../../node_modules/openai/lib/ChatCompletionRunner.mjs","../../node_modules/openai/_vendor/partial-json-parser/parser.mjs","../../node_modules/openai/lib/ChatCompletionStream.mjs","../../node_modules/openai/lib/ChatCompletionStreamingRunner.mjs","../../node_modules/openai/resources/beta/chat/completions.mjs","../../node_modules/openai/resources/beta/chat/chat.mjs","../../node_modules/openai/resources/beta/realtime/sessions.mjs","../../node_modules/openai/resources/beta/realtime/realtime.mjs","../../node_modules/openai/lib/AssistantStream.mjs","../../node_modules/openai/resources/beta/threads/messages.mjs","../../node_modules/openai/resources/beta/threads/runs/steps.mjs","../../node_modules/openai/resources/beta/threads/runs/runs.mjs","../../node_modules/openai/resources/beta/threads/threads.mjs","../../node_modules/openai/resources/beta/beta.mjs","../../node_modules/openai/resources/completions.mjs","../../node_modules/openai/resources/embeddings.mjs","../../node_modules/openai/resources/files.mjs","../../node_modules/openai/resources/fine-tuning/jobs/checkpoints.mjs","../../node_modules/openai/resources/fine-tuning/jobs/jobs.mjs","../../node_modules/openai/resources/fine-tuning/fine-tuning.mjs","../../node_modules/openai/resources/images.mjs","../../node_modules/openai/resources/models.mjs","../../node_modules/openai/resources/moderations.mjs","../../node_modules/openai/lib/ResponsesParser.mjs","../../node_modules/openai/resources/responses/input-items.mjs","../../node_modules/openai/lib/responses/ResponseStream.mjs","../../node_modules/openai/resources/responses/responses.mjs","../../node_modules/openai/resources/uploads/parts.mjs","../../node_modules/openai/resources/uploads/uploads.mjs","../../node_modules/openai/resources/vector-stores/files.mjs","../../node_modules/openai/resources/vector-stores/file-batches.mjs","../../node_modules/openai/lib/Util.mjs","../../node_modules/openai/resources/vector-stores/vector-stores.mjs","../../node_modules/openai/index.mjs","../../src/popup/utils.ts","../../src/popup/gpt-version.ts","../../src/popup/mode-handler.ts","../../src/popup/version.ts","../../src/popup/settings.ts","../../src/popup/index.ts"],"sourcesContent":[null,"/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n};\r\n\r\nexport function __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n};\r\n\r\nexport function __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n};\r\n\r\nexport function __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n};\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nexport function __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nexport function __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nexport function __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nexport function __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nexport default {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\r\n","export const default_format = 'RFC3986';\nexport const formatters = {\n    RFC1738: (v) => String(v).replace(/%20/g, '+'),\n    RFC3986: (v) => String(v),\n};\nexport const RFC1738 = 'RFC1738';\nexport const RFC3986 = 'RFC3986';\n//# sourceMappingURL=formats.mjs.map","import { RFC1738 } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst is_array = Array.isArray;\nconst hex_table = (() => {\n    const array = [];\n    for (let i = 0; i < 256; ++i) {\n        array.push('%' + ((i < 16 ? '0' : '') + i.toString(16)).toUpperCase());\n    }\n    return array;\n})();\nfunction compact_queue(queue) {\n    while (queue.length > 1) {\n        const item = queue.pop();\n        if (!item)\n            continue;\n        const obj = item.obj[item.prop];\n        if (is_array(obj)) {\n            const compacted = [];\n            for (let j = 0; j < obj.length; ++j) {\n                if (typeof obj[j] !== 'undefined') {\n                    compacted.push(obj[j]);\n                }\n            }\n            // @ts-ignore\n            item.obj[item.prop] = compacted;\n        }\n    }\n}\nfunction array_to_object(source, options) {\n    const obj = options && options.plainObjects ? Object.create(null) : {};\n    for (let i = 0; i < source.length; ++i) {\n        if (typeof source[i] !== 'undefined') {\n            obj[i] = source[i];\n        }\n    }\n    return obj;\n}\nexport function merge(target, source, options = {}) {\n    if (!source) {\n        return target;\n    }\n    if (typeof source !== 'object') {\n        if (is_array(target)) {\n            target.push(source);\n        }\n        else if (target && typeof target === 'object') {\n            if ((options && (options.plainObjects || options.allowPrototypes)) ||\n                !has.call(Object.prototype, source)) {\n                target[source] = true;\n            }\n        }\n        else {\n            return [target, source];\n        }\n        return target;\n    }\n    if (!target || typeof target !== 'object') {\n        return [target].concat(source);\n    }\n    let mergeTarget = target;\n    if (is_array(target) && !is_array(source)) {\n        // @ts-ignore\n        mergeTarget = array_to_object(target, options);\n    }\n    if (is_array(target) && is_array(source)) {\n        source.forEach(function (item, i) {\n            if (has.call(target, i)) {\n                const targetItem = target[i];\n                if (targetItem && typeof targetItem === 'object' && item && typeof item === 'object') {\n                    target[i] = merge(targetItem, item, options);\n                }\n                else {\n                    target.push(item);\n                }\n            }\n            else {\n                target[i] = item;\n            }\n        });\n        return target;\n    }\n    return Object.keys(source).reduce(function (acc, key) {\n        const value = source[key];\n        if (has.call(acc, key)) {\n            acc[key] = merge(acc[key], value, options);\n        }\n        else {\n            acc[key] = value;\n        }\n        return acc;\n    }, mergeTarget);\n}\nexport function assign_single_source(target, source) {\n    return Object.keys(source).reduce(function (acc, key) {\n        acc[key] = source[key];\n        return acc;\n    }, target);\n}\nexport function decode(str, _, charset) {\n    const strWithoutPlus = str.replace(/\\+/g, ' ');\n    if (charset === 'iso-8859-1') {\n        // unescape never throws, no try...catch needed:\n        return strWithoutPlus.replace(/%[0-9a-f]{2}/gi, unescape);\n    }\n    // utf-8\n    try {\n        return decodeURIComponent(strWithoutPlus);\n    }\n    catch (e) {\n        return strWithoutPlus;\n    }\n}\nconst limit = 1024;\nexport const encode = (str, _defaultEncoder, charset, _kind, format) => {\n    // This code was originally written by Brian White for the io.js core querystring library.\n    // It has been adapted here for stricter adherence to RFC 3986\n    if (str.length === 0) {\n        return str;\n    }\n    let string = str;\n    if (typeof str === 'symbol') {\n        string = Symbol.prototype.toString.call(str);\n    }\n    else if (typeof str !== 'string') {\n        string = String(str);\n    }\n    if (charset === 'iso-8859-1') {\n        return escape(string).replace(/%u[0-9a-f]{4}/gi, function ($0) {\n            return '%26%23' + parseInt($0.slice(2), 16) + '%3B';\n        });\n    }\n    let out = '';\n    for (let j = 0; j < string.length; j += limit) {\n        const segment = string.length >= limit ? string.slice(j, j + limit) : string;\n        const arr = [];\n        for (let i = 0; i < segment.length; ++i) {\n            let c = segment.charCodeAt(i);\n            if (c === 0x2d || // -\n                c === 0x2e || // .\n                c === 0x5f || // _\n                c === 0x7e || // ~\n                (c >= 0x30 && c <= 0x39) || // 0-9\n                (c >= 0x41 && c <= 0x5a) || // a-z\n                (c >= 0x61 && c <= 0x7a) || // A-Z\n                (format === RFC1738 && (c === 0x28 || c === 0x29)) // ( )\n            ) {\n                arr[arr.length] = segment.charAt(i);\n                continue;\n            }\n            if (c < 0x80) {\n                arr[arr.length] = hex_table[c];\n                continue;\n            }\n            if (c < 0x800) {\n                arr[arr.length] = hex_table[0xc0 | (c >> 6)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            if (c < 0xd800 || c >= 0xe000) {\n                arr[arr.length] =\n                    hex_table[0xe0 | (c >> 12)] + hex_table[0x80 | ((c >> 6) & 0x3f)] + hex_table[0x80 | (c & 0x3f)];\n                continue;\n            }\n            i += 1;\n            c = 0x10000 + (((c & 0x3ff) << 10) | (segment.charCodeAt(i) & 0x3ff));\n            arr[arr.length] =\n                hex_table[0xf0 | (c >> 18)] +\n                    hex_table[0x80 | ((c >> 12) & 0x3f)] +\n                    hex_table[0x80 | ((c >> 6) & 0x3f)] +\n                    hex_table[0x80 | (c & 0x3f)];\n        }\n        out += arr.join('');\n    }\n    return out;\n};\nexport function compact(value) {\n    const queue = [{ obj: { o: value }, prop: 'o' }];\n    const refs = [];\n    for (let i = 0; i < queue.length; ++i) {\n        const item = queue[i];\n        // @ts-ignore\n        const obj = item.obj[item.prop];\n        const keys = Object.keys(obj);\n        for (let j = 0; j < keys.length; ++j) {\n            const key = keys[j];\n            const val = obj[key];\n            if (typeof val === 'object' && val !== null && refs.indexOf(val) === -1) {\n                queue.push({ obj: obj, prop: key });\n                refs.push(val);\n            }\n        }\n    }\n    compact_queue(queue);\n    return value;\n}\nexport function is_regexp(obj) {\n    return Object.prototype.toString.call(obj) === '[object RegExp]';\n}\nexport function is_buffer(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return false;\n    }\n    return !!(obj.constructor && obj.constructor.isBuffer && obj.constructor.isBuffer(obj));\n}\nexport function combine(a, b) {\n    return [].concat(a, b);\n}\nexport function maybe_map(val, fn) {\n    if (is_array(val)) {\n        const mapped = [];\n        for (let i = 0; i < val.length; i += 1) {\n            mapped.push(fn(val[i]));\n        }\n        return mapped;\n    }\n    return fn(val);\n}\n//# sourceMappingURL=utils.mjs.map","import { encode, is_buffer, maybe_map } from \"./utils.mjs\";\nimport { default_format, formatters } from \"./formats.mjs\";\nconst has = Object.prototype.hasOwnProperty;\nconst array_prefix_generators = {\n    brackets(prefix) {\n        return String(prefix) + '[]';\n    },\n    comma: 'comma',\n    indices(prefix, key) {\n        return String(prefix) + '[' + key + ']';\n    },\n    repeat(prefix) {\n        return String(prefix);\n    },\n};\nconst is_array = Array.isArray;\nconst push = Array.prototype.push;\nconst push_to_array = function (arr, value_or_array) {\n    push.apply(arr, is_array(value_or_array) ? value_or_array : [value_or_array]);\n};\nconst to_ISO = Date.prototype.toISOString;\nconst defaults = {\n    addQueryPrefix: false,\n    allowDots: false,\n    allowEmptyArrays: false,\n    arrayFormat: 'indices',\n    charset: 'utf-8',\n    charsetSentinel: false,\n    delimiter: '&',\n    encode: true,\n    encodeDotInKeys: false,\n    encoder: encode,\n    encodeValuesOnly: false,\n    format: default_format,\n    formatter: formatters[default_format],\n    /** @deprecated */\n    indices: false,\n    serializeDate(date) {\n        return to_ISO.call(date);\n    },\n    skipNulls: false,\n    strictNullHandling: false,\n};\nfunction is_non_nullish_primitive(v) {\n    return (typeof v === 'string' ||\n        typeof v === 'number' ||\n        typeof v === 'boolean' ||\n        typeof v === 'symbol' ||\n        typeof v === 'bigint');\n}\nconst sentinel = {};\nfunction inner_stringify(object, prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, sideChannel) {\n    let obj = object;\n    let tmp_sc = sideChannel;\n    let step = 0;\n    let find_flag = false;\n    while ((tmp_sc = tmp_sc.get(sentinel)) !== void undefined && !find_flag) {\n        // Where object last appeared in the ref tree\n        const pos = tmp_sc.get(object);\n        step += 1;\n        if (typeof pos !== 'undefined') {\n            if (pos === step) {\n                throw new RangeError('Cyclic object value');\n            }\n            else {\n                find_flag = true; // Break while\n            }\n        }\n        if (typeof tmp_sc.get(sentinel) === 'undefined') {\n            step = 0;\n        }\n    }\n    if (typeof filter === 'function') {\n        obj = filter(prefix, obj);\n    }\n    else if (obj instanceof Date) {\n        obj = serializeDate?.(obj);\n    }\n    else if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        obj = maybe_map(obj, function (value) {\n            if (value instanceof Date) {\n                return serializeDate?.(value);\n            }\n            return value;\n        });\n    }\n    if (obj === null) {\n        if (strictNullHandling) {\n            return encoder && !encodeValuesOnly ?\n                // @ts-expect-error\n                encoder(prefix, defaults.encoder, charset, 'key', format)\n                : prefix;\n        }\n        obj = '';\n    }\n    if (is_non_nullish_primitive(obj) || is_buffer(obj)) {\n        if (encoder) {\n            const key_value = encodeValuesOnly ? prefix\n                // @ts-expect-error\n                : encoder(prefix, defaults.encoder, charset, 'key', format);\n            return [\n                formatter?.(key_value) +\n                    '=' +\n                    // @ts-expect-error\n                    formatter?.(encoder(obj, defaults.encoder, charset, 'value', format)),\n            ];\n        }\n        return [formatter?.(prefix) + '=' + formatter?.(String(obj))];\n    }\n    const values = [];\n    if (typeof obj === 'undefined') {\n        return values;\n    }\n    let obj_keys;\n    if (generateArrayPrefix === 'comma' && is_array(obj)) {\n        // we need to join elements in\n        if (encodeValuesOnly && encoder) {\n            // @ts-expect-error values only\n            obj = maybe_map(obj, encoder);\n        }\n        obj_keys = [{ value: obj.length > 0 ? obj.join(',') || null : void undefined }];\n    }\n    else if (is_array(filter)) {\n        obj_keys = filter;\n    }\n    else {\n        const keys = Object.keys(obj);\n        obj_keys = sort ? keys.sort(sort) : keys;\n    }\n    const encoded_prefix = encodeDotInKeys ? String(prefix).replace(/\\./g, '%2E') : String(prefix);\n    const adjusted_prefix = commaRoundTrip && is_array(obj) && obj.length === 1 ? encoded_prefix + '[]' : encoded_prefix;\n    if (allowEmptyArrays && is_array(obj) && obj.length === 0) {\n        return adjusted_prefix + '[]';\n    }\n    for (let j = 0; j < obj_keys.length; ++j) {\n        const key = obj_keys[j];\n        const value = \n        // @ts-ignore\n        typeof key === 'object' && typeof key.value !== 'undefined' ? key.value : obj[key];\n        if (skipNulls && value === null) {\n            continue;\n        }\n        // @ts-ignore\n        const encoded_key = allowDots && encodeDotInKeys ? key.replace(/\\./g, '%2E') : key;\n        const key_prefix = is_array(obj) ?\n            typeof generateArrayPrefix === 'function' ?\n                generateArrayPrefix(adjusted_prefix, encoded_key)\n                : adjusted_prefix\n            : adjusted_prefix + (allowDots ? '.' + encoded_key : '[' + encoded_key + ']');\n        sideChannel.set(object, step);\n        const valueSideChannel = new WeakMap();\n        valueSideChannel.set(sentinel, sideChannel);\n        push_to_array(values, inner_stringify(value, key_prefix, generateArrayPrefix, commaRoundTrip, allowEmptyArrays, strictNullHandling, skipNulls, encodeDotInKeys, \n        // @ts-ignore\n        generateArrayPrefix === 'comma' && encodeValuesOnly && is_array(obj) ? null : encoder, filter, sort, allowDots, serializeDate, format, formatter, encodeValuesOnly, charset, valueSideChannel));\n    }\n    return values;\n}\nfunction normalize_stringify_options(opts = defaults) {\n    if (typeof opts.allowEmptyArrays !== 'undefined' && typeof opts.allowEmptyArrays !== 'boolean') {\n        throw new TypeError('`allowEmptyArrays` option can only be `true` or `false`, when provided');\n    }\n    if (typeof opts.encodeDotInKeys !== 'undefined' && typeof opts.encodeDotInKeys !== 'boolean') {\n        throw new TypeError('`encodeDotInKeys` option can only be `true` or `false`, when provided');\n    }\n    if (opts.encoder !== null && typeof opts.encoder !== 'undefined' && typeof opts.encoder !== 'function') {\n        throw new TypeError('Encoder has to be a function.');\n    }\n    const charset = opts.charset || defaults.charset;\n    if (typeof opts.charset !== 'undefined' && opts.charset !== 'utf-8' && opts.charset !== 'iso-8859-1') {\n        throw new TypeError('The charset option must be either utf-8, iso-8859-1, or undefined');\n    }\n    let format = default_format;\n    if (typeof opts.format !== 'undefined') {\n        if (!has.call(formatters, opts.format)) {\n            throw new TypeError('Unknown format option provided.');\n        }\n        format = opts.format;\n    }\n    const formatter = formatters[format];\n    let filter = defaults.filter;\n    if (typeof opts.filter === 'function' || is_array(opts.filter)) {\n        filter = opts.filter;\n    }\n    let arrayFormat;\n    if (opts.arrayFormat && opts.arrayFormat in array_prefix_generators) {\n        arrayFormat = opts.arrayFormat;\n    }\n    else if ('indices' in opts) {\n        arrayFormat = opts.indices ? 'indices' : 'repeat';\n    }\n    else {\n        arrayFormat = defaults.arrayFormat;\n    }\n    if ('commaRoundTrip' in opts && typeof opts.commaRoundTrip !== 'boolean') {\n        throw new TypeError('`commaRoundTrip` must be a boolean, or absent');\n    }\n    const allowDots = typeof opts.allowDots === 'undefined' ?\n        !!opts.encodeDotInKeys === true ?\n            true\n            : defaults.allowDots\n        : !!opts.allowDots;\n    return {\n        addQueryPrefix: typeof opts.addQueryPrefix === 'boolean' ? opts.addQueryPrefix : defaults.addQueryPrefix,\n        // @ts-ignore\n        allowDots: allowDots,\n        allowEmptyArrays: typeof opts.allowEmptyArrays === 'boolean' ? !!opts.allowEmptyArrays : defaults.allowEmptyArrays,\n        arrayFormat: arrayFormat,\n        charset: charset,\n        charsetSentinel: typeof opts.charsetSentinel === 'boolean' ? opts.charsetSentinel : defaults.charsetSentinel,\n        commaRoundTrip: !!opts.commaRoundTrip,\n        delimiter: typeof opts.delimiter === 'undefined' ? defaults.delimiter : opts.delimiter,\n        encode: typeof opts.encode === 'boolean' ? opts.encode : defaults.encode,\n        encodeDotInKeys: typeof opts.encodeDotInKeys === 'boolean' ? opts.encodeDotInKeys : defaults.encodeDotInKeys,\n        encoder: typeof opts.encoder === 'function' ? opts.encoder : defaults.encoder,\n        encodeValuesOnly: typeof opts.encodeValuesOnly === 'boolean' ? opts.encodeValuesOnly : defaults.encodeValuesOnly,\n        filter: filter,\n        format: format,\n        formatter: formatter,\n        serializeDate: typeof opts.serializeDate === 'function' ? opts.serializeDate : defaults.serializeDate,\n        skipNulls: typeof opts.skipNulls === 'boolean' ? opts.skipNulls : defaults.skipNulls,\n        // @ts-ignore\n        sort: typeof opts.sort === 'function' ? opts.sort : null,\n        strictNullHandling: typeof opts.strictNullHandling === 'boolean' ? opts.strictNullHandling : defaults.strictNullHandling,\n    };\n}\nexport function stringify(object, opts = {}) {\n    let obj = object;\n    const options = normalize_stringify_options(opts);\n    let obj_keys;\n    let filter;\n    if (typeof options.filter === 'function') {\n        filter = options.filter;\n        obj = filter('', obj);\n    }\n    else if (is_array(options.filter)) {\n        filter = options.filter;\n        obj_keys = filter;\n    }\n    const keys = [];\n    if (typeof obj !== 'object' || obj === null) {\n        return '';\n    }\n    const generateArrayPrefix = array_prefix_generators[options.arrayFormat];\n    const commaRoundTrip = generateArrayPrefix === 'comma' && options.commaRoundTrip;\n    if (!obj_keys) {\n        obj_keys = Object.keys(obj);\n    }\n    if (options.sort) {\n        obj_keys.sort(options.sort);\n    }\n    const sideChannel = new WeakMap();\n    for (let i = 0; i < obj_keys.length; ++i) {\n        const key = obj_keys[i];\n        if (options.skipNulls && obj[key] === null) {\n            continue;\n        }\n        push_to_array(keys, inner_stringify(obj[key], key, \n        // @ts-expect-error\n        generateArrayPrefix, commaRoundTrip, options.allowEmptyArrays, options.strictNullHandling, options.skipNulls, options.encodeDotInKeys, options.encode ? options.encoder : null, options.filter, options.sort, options.allowDots, options.serializeDate, options.format, options.formatter, options.encodeValuesOnly, options.charset, sideChannel));\n    }\n    const joined = keys.join(options.delimiter);\n    let prefix = options.addQueryPrefix === true ? '?' : '';\n    if (options.charsetSentinel) {\n        if (options.charset === 'iso-8859-1') {\n            // encodeURIComponent('&#10003;'), the \"numeric entity\" representation of a checkmark\n            prefix += 'utf8=%26%2310003%3B&';\n        }\n        else {\n            // encodeURIComponent('✓')\n            prefix += 'utf8=%E2%9C%93&';\n        }\n    }\n    return joined.length > 0 ? prefix + joined : '';\n}\n//# sourceMappingURL=stringify.mjs.map","export const VERSION = '4.87.4'; // x-release-please-version\n//# sourceMappingURL=version.mjs.map","export let auto = false;\nexport let kind = undefined;\nexport let fetch = undefined;\nexport let Request = undefined;\nexport let Response = undefined;\nexport let Headers = undefined;\nexport let FormData = undefined;\nexport let Blob = undefined;\nexport let File = undefined;\nexport let ReadableStream = undefined;\nexport let getMultipartRequestOptions = undefined;\nexport let getDefaultAgent = undefined;\nexport let fileFromPath = undefined;\nexport let isFsReadStream = undefined;\nexport function setShims(shims, options = { auto: false }) {\n    if (auto) {\n        throw new Error(`you must \\`import 'openai/shims/${shims.kind}'\\` before importing anything else from openai`);\n    }\n    if (kind) {\n        throw new Error(`can't \\`import 'openai/shims/${shims.kind}'\\` after \\`import 'openai/shims/${kind}'\\``);\n    }\n    auto = options.auto;\n    kind = shims.kind;\n    fetch = shims.fetch;\n    Request = shims.Request;\n    Response = shims.Response;\n    Headers = shims.Headers;\n    FormData = shims.FormData;\n    Blob = shims.Blob;\n    File = shims.File;\n    ReadableStream = shims.ReadableStream;\n    getMultipartRequestOptions = shims.getMultipartRequestOptions;\n    getDefaultAgent = shims.getDefaultAgent;\n    fileFromPath = shims.fileFromPath;\n    isFsReadStream = shims.isFsReadStream;\n}\n//# sourceMappingURL=registry.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nexport class MultipartBody {\n    constructor(body) {\n        this.body = body;\n    }\n    get [Symbol.toStringTag]() {\n        return 'MultipartBody';\n    }\n}\n//# sourceMappingURL=MultipartBody.mjs.map","/**\n * Disclaimer: modules in _shims aren't intended to be imported by SDK users.\n */\nimport * as shims from './registry.mjs';\nimport * as auto from 'openai/_shims/auto/runtime';\nif (!shims.kind) shims.setShims(auto.getRuntime(), { auto: true });\nexport * from './registry.mjs';\n","import { MultipartBody } from \"./MultipartBody.mjs\";\nexport function getRuntime({ manuallyImported } = {}) {\n    const recommendation = manuallyImported ?\n        `You may need to use polyfills`\n        : `Add one of these imports before your first \\`import … from 'openai'\\`:\n- \\`import 'openai/shims/node'\\` (if you're running on Node)\n- \\`import 'openai/shims/web'\\` (otherwise)\n`;\n    let _fetch, _Request, _Response, _Headers;\n    try {\n        // @ts-ignore\n        _fetch = fetch;\n        // @ts-ignore\n        _Request = Request;\n        // @ts-ignore\n        _Response = Response;\n        // @ts-ignore\n        _Headers = Headers;\n    }\n    catch (error) {\n        throw new Error(`this environment is missing the following Web Fetch API type: ${error.message}. ${recommendation}`);\n    }\n    return {\n        kind: 'web',\n        fetch: _fetch,\n        Request: _Request,\n        Response: _Response,\n        Headers: _Headers,\n        FormData: \n        // @ts-ignore\n        typeof FormData !== 'undefined' ? FormData : (class FormData {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'FormData' is undefined. ${recommendation}`);\n            }\n        }),\n        Blob: typeof Blob !== 'undefined' ? Blob : (class Blob {\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'Blob' is undefined. ${recommendation}`);\n            }\n        }),\n        File: \n        // @ts-ignore\n        typeof File !== 'undefined' ? File : (class File {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`file uploads aren't supported in this environment yet as 'File' is undefined. ${recommendation}`);\n            }\n        }),\n        ReadableStream: \n        // @ts-ignore\n        typeof ReadableStream !== 'undefined' ? ReadableStream : (class ReadableStream {\n            // @ts-ignore\n            constructor() {\n                throw new Error(`streaming isn't supported in this environment yet as 'ReadableStream' is undefined. ${recommendation}`);\n            }\n        }),\n        getMultipartRequestOptions: async (\n        // @ts-ignore\n        form, opts) => ({\n            ...opts,\n            body: new MultipartBody(form),\n        }),\n        getDefaultAgent: (url) => undefined,\n        fileFromPath: () => {\n            throw new Error('The `fileFromPath` function is only supported in Node. See the README for more details: https://www.github.com/openai/openai-node#file-uploads');\n        },\n        isFsReadStream: (value) => false,\n    };\n}\n//# sourceMappingURL=web-runtime.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { castToError } from \"./core.mjs\";\nexport class OpenAIError extends Error {\n}\nexport class APIError extends OpenAIError {\n    constructor(status, error, message, headers) {\n        super(`${APIError.makeMessage(status, error, message)}`);\n        this.status = status;\n        this.headers = headers;\n        this.request_id = headers?.['x-request-id'];\n        this.error = error;\n        const data = error;\n        this.code = data?.['code'];\n        this.param = data?.['param'];\n        this.type = data?.['type'];\n    }\n    static makeMessage(status, error, message) {\n        const msg = error?.message ?\n            typeof error.message === 'string' ?\n                error.message\n                : JSON.stringify(error.message)\n            : error ? JSON.stringify(error)\n                : message;\n        if (status && msg) {\n            return `${status} ${msg}`;\n        }\n        if (status) {\n            return `${status} status code (no body)`;\n        }\n        if (msg) {\n            return msg;\n        }\n        return '(no status code or body)';\n    }\n    static generate(status, errorResponse, message, headers) {\n        if (!status || !headers) {\n            return new APIConnectionError({ message, cause: castToError(errorResponse) });\n        }\n        const error = errorResponse?.['error'];\n        if (status === 400) {\n            return new BadRequestError(status, error, message, headers);\n        }\n        if (status === 401) {\n            return new AuthenticationError(status, error, message, headers);\n        }\n        if (status === 403) {\n            return new PermissionDeniedError(status, error, message, headers);\n        }\n        if (status === 404) {\n            return new NotFoundError(status, error, message, headers);\n        }\n        if (status === 409) {\n            return new ConflictError(status, error, message, headers);\n        }\n        if (status === 422) {\n            return new UnprocessableEntityError(status, error, message, headers);\n        }\n        if (status === 429) {\n            return new RateLimitError(status, error, message, headers);\n        }\n        if (status >= 500) {\n            return new InternalServerError(status, error, message, headers);\n        }\n        return new APIError(status, error, message, headers);\n    }\n}\nexport class APIUserAbortError extends APIError {\n    constructor({ message } = {}) {\n        super(undefined, undefined, message || 'Request was aborted.', undefined);\n    }\n}\nexport class APIConnectionError extends APIError {\n    constructor({ message, cause }) {\n        super(undefined, undefined, message || 'Connection error.', undefined);\n        // in some environments the 'cause' property is already declared\n        // @ts-ignore\n        if (cause)\n            this.cause = cause;\n    }\n}\nexport class APIConnectionTimeoutError extends APIConnectionError {\n    constructor({ message } = {}) {\n        super({ message: message ?? 'Request timed out.' });\n    }\n}\nexport class BadRequestError extends APIError {\n}\nexport class AuthenticationError extends APIError {\n}\nexport class PermissionDeniedError extends APIError {\n}\nexport class NotFoundError extends APIError {\n}\nexport class ConflictError extends APIError {\n}\nexport class UnprocessableEntityError extends APIError {\n}\nexport class RateLimitError extends APIError {\n}\nexport class InternalServerError extends APIError {\n}\nexport class LengthFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the length limit was reached`);\n    }\n}\nexport class ContentFilterFinishReasonError extends OpenAIError {\n    constructor() {\n        super(`Could not parse response content as the request was rejected by the content filter`);\n    }\n}\n//# sourceMappingURL=error.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _LineDecoder_carriageReturnIndex;\nimport { OpenAIError } from \"../../error.mjs\";\n/**\n * A re-implementation of httpx's `LineDecoder` in Python that handles incrementally\n * reading lines from text.\n *\n * https://github.com/encode/httpx/blob/920333ea98118e9cf617f246905d7b202510941c/httpx/_decoders.py#L258\n */\nexport class LineDecoder {\n    constructor() {\n        _LineDecoder_carriageReturnIndex.set(this, void 0);\n        this.buffer = new Uint8Array();\n        __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n    }\n    decode(chunk) {\n        if (chunk == null) {\n            return [];\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(this.buffer.length + binaryChunk.length);\n        newData.set(this.buffer);\n        newData.set(binaryChunk, this.buffer.length);\n        this.buffer = newData;\n        const lines = [];\n        let patternIndex;\n        while ((patternIndex = findNewlineIndex(this.buffer, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"))) != null) {\n            if (patternIndex.carriage && __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") == null) {\n                // skip until we either get a corresponding `\\n`, a new `\\r` or nothing\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, patternIndex.index, \"f\");\n                continue;\n            }\n            // we got double \\r or \\rtext\\n\n            if (__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") != null &&\n                (patternIndex.index !== __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") + 1 || patternIndex.carriage)) {\n                lines.push(this.decodeText(this.buffer.slice(0, __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") - 1)));\n                this.buffer = this.buffer.slice(__classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\"));\n                __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n                continue;\n            }\n            const endIndex = __classPrivateFieldGet(this, _LineDecoder_carriageReturnIndex, \"f\") !== null ? patternIndex.preceding - 1 : patternIndex.preceding;\n            const line = this.decodeText(this.buffer.slice(0, endIndex));\n            lines.push(line);\n            this.buffer = this.buffer.slice(patternIndex.index);\n            __classPrivateFieldSet(this, _LineDecoder_carriageReturnIndex, null, \"f\");\n        }\n        return lines;\n    }\n    decodeText(bytes) {\n        if (bytes == null)\n            return '';\n        if (typeof bytes === 'string')\n            return bytes;\n        // Node:\n        if (typeof Buffer !== 'undefined') {\n            if (bytes instanceof Buffer) {\n                return bytes.toString();\n            }\n            if (bytes instanceof Uint8Array) {\n                return Buffer.from(bytes).toString();\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array (${bytes.constructor.name}) stream chunk in an environment with a global \"Buffer\" defined, which this library assumes to be Node. Please report this error.`);\n        }\n        // Browser\n        if (typeof TextDecoder !== 'undefined') {\n            if (bytes instanceof Uint8Array || bytes instanceof ArrayBuffer) {\n                this.textDecoder ?? (this.textDecoder = new TextDecoder('utf8'));\n                return this.textDecoder.decode(bytes);\n            }\n            throw new OpenAIError(`Unexpected: received non-Uint8Array/ArrayBuffer (${bytes.constructor.name}) in a web platform. Please report this error.`);\n        }\n        throw new OpenAIError(`Unexpected: neither Buffer nor TextDecoder are available as globals. Please report this error.`);\n    }\n    flush() {\n        if (!this.buffer.length) {\n            return [];\n        }\n        return this.decode('\\n');\n    }\n}\n_LineDecoder_carriageReturnIndex = new WeakMap();\n// prettier-ignore\nLineDecoder.NEWLINE_CHARS = new Set(['\\n', '\\r']);\nLineDecoder.NEWLINE_REGEXP = /\\r\\n|[\\n\\r]/g;\n/**\n * This function searches the buffer for the end patterns, (\\r or \\n)\n * and returns an object with the index preceding the matched newline and the\n * index after the newline char. `null` is returned if no new line is found.\n *\n * ```ts\n * findNewLineIndex('abc\\ndef') -> { preceding: 2, index: 3 }\n * ```\n */\nfunction findNewlineIndex(buffer, startIndex) {\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = startIndex ?? 0; i < buffer.length; i++) {\n        if (buffer[i] === newline) {\n            return { preceding: i, index: i + 1, carriage: false };\n        }\n        if (buffer[i] === carriage) {\n            return { preceding: i, index: i + 1, carriage: true };\n        }\n    }\n    return null;\n}\nexport function findDoubleNewlineIndex(buffer) {\n    // This function searches the buffer for the end patterns (\\r\\r, \\n\\n, \\r\\n\\r\\n)\n    // and returns the index right after the first occurrence of any pattern,\n    // or -1 if none of the patterns are found.\n    const newline = 0x0a; // \\n\n    const carriage = 0x0d; // \\r\n    for (let i = 0; i < buffer.length - 1; i++) {\n        if (buffer[i] === newline && buffer[i + 1] === newline) {\n            // \\n\\n\n            return i + 2;\n        }\n        if (buffer[i] === carriage && buffer[i + 1] === carriage) {\n            // \\r\\r\n            return i + 2;\n        }\n        if (buffer[i] === carriage &&\n            buffer[i + 1] === newline &&\n            i + 3 < buffer.length &&\n            buffer[i + 2] === carriage &&\n            buffer[i + 3] === newline) {\n            // \\r\\n\\r\\n\n            return i + 4;\n        }\n    }\n    return -1;\n}\n//# sourceMappingURL=line.mjs.map","/**\n * Most browsers don't yet have async iterable support for ReadableStream,\n * and Node has a very different way of reading bytes from its \"ReadableStream\".\n *\n * This polyfill was pulled from https://github.com/MattiasBuelens/web-streams-polyfill/pull/122#issuecomment-1627354490\n */\nexport function ReadableStreamToAsyncIterable(stream) {\n    if (stream[Symbol.asyncIterator])\n        return stream;\n    const reader = stream.getReader();\n    return {\n        async next() {\n            try {\n                const result = await reader.read();\n                if (result?.done)\n                    reader.releaseLock(); // release lock when stream becomes closed\n                return result;\n            }\n            catch (e) {\n                reader.releaseLock(); // release lock when stream becomes errored\n                throw e;\n            }\n        },\n        async return() {\n            const cancelPromise = reader.cancel();\n            reader.releaseLock();\n            await cancelPromise;\n            return { done: true, value: undefined };\n        },\n        [Symbol.asyncIterator]() {\n            return this;\n        },\n    };\n}\n//# sourceMappingURL=stream-utils.mjs.map","import { ReadableStream } from \"./_shims/index.mjs\";\nimport { OpenAIError } from \"./error.mjs\";\nimport { findDoubleNewlineIndex, LineDecoder } from \"./internal/decoders/line.mjs\";\nimport { ReadableStreamToAsyncIterable } from \"./internal/stream-utils.mjs\";\nimport { APIError } from \"./error.mjs\";\nexport class Stream {\n    constructor(iterator, controller) {\n        this.iterator = iterator;\n        this.controller = controller;\n    }\n    static fromSSEResponse(response, controller) {\n        let consumed = false;\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const sse of _iterSSEMessages(response, controller)) {\n                    if (done)\n                        continue;\n                    if (sse.data.startsWith('[DONE]')) {\n                        done = true;\n                        continue;\n                    }\n                    if (sse.event === null || sse.event.startsWith('response.')) {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        if (data && data.error) {\n                            throw new APIError(undefined, data.error, undefined, undefined);\n                        }\n                        yield data;\n                    }\n                    else {\n                        let data;\n                        try {\n                            data = JSON.parse(sse.data);\n                        }\n                        catch (e) {\n                            console.error(`Could not parse message into JSON:`, sse.data);\n                            console.error(`From chunk:`, sse.raw);\n                            throw e;\n                        }\n                        // TODO: Is this where the error should be thrown?\n                        if (sse.event == 'error') {\n                            throw new APIError(undefined, data.error, data.message, undefined);\n                        }\n                        yield { event: sse.event, data: data };\n                    }\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    /**\n     * Generates a Stream from a newline-separated ReadableStream\n     * where each item is a JSON value.\n     */\n    static fromReadableStream(readableStream, controller) {\n        let consumed = false;\n        async function* iterLines() {\n            const lineDecoder = new LineDecoder();\n            const iter = ReadableStreamToAsyncIterable(readableStream);\n            for await (const chunk of iter) {\n                for (const line of lineDecoder.decode(chunk)) {\n                    yield line;\n                }\n            }\n            for (const line of lineDecoder.flush()) {\n                yield line;\n            }\n        }\n        async function* iterator() {\n            if (consumed) {\n                throw new Error('Cannot iterate over a consumed stream, use `.tee()` to split the stream.');\n            }\n            consumed = true;\n            let done = false;\n            try {\n                for await (const line of iterLines()) {\n                    if (done)\n                        continue;\n                    if (line)\n                        yield JSON.parse(line);\n                }\n                done = true;\n            }\n            catch (e) {\n                // If the user calls `stream.controller.abort()`, we should exit without throwing.\n                if (e instanceof Error && e.name === 'AbortError')\n                    return;\n                throw e;\n            }\n            finally {\n                // If the user `break`s, abort the ongoing request.\n                if (!done)\n                    controller.abort();\n            }\n        }\n        return new Stream(iterator, controller);\n    }\n    [Symbol.asyncIterator]() {\n        return this.iterator();\n    }\n    /**\n     * Splits the stream into two streams which can be\n     * independently read from at different speeds.\n     */\n    tee() {\n        const left = [];\n        const right = [];\n        const iterator = this.iterator();\n        const teeIterator = (queue) => {\n            return {\n                next: () => {\n                    if (queue.length === 0) {\n                        const result = iterator.next();\n                        left.push(result);\n                        right.push(result);\n                    }\n                    return queue.shift();\n                },\n            };\n        };\n        return [\n            new Stream(() => teeIterator(left), this.controller),\n            new Stream(() => teeIterator(right), this.controller),\n        ];\n    }\n    /**\n     * Converts this stream to a newline-separated ReadableStream of\n     * JSON stringified values in the stream\n     * which can be turned back into a Stream with `Stream.fromReadableStream()`.\n     */\n    toReadableStream() {\n        const self = this;\n        let iter;\n        const encoder = new TextEncoder();\n        return new ReadableStream({\n            async start() {\n                iter = self[Symbol.asyncIterator]();\n            },\n            async pull(ctrl) {\n                try {\n                    const { value, done } = await iter.next();\n                    if (done)\n                        return ctrl.close();\n                    const bytes = encoder.encode(JSON.stringify(value) + '\\n');\n                    ctrl.enqueue(bytes);\n                }\n                catch (err) {\n                    ctrl.error(err);\n                }\n            },\n            async cancel() {\n                await iter.return?.();\n            },\n        });\n    }\n}\nexport async function* _iterSSEMessages(response, controller) {\n    if (!response.body) {\n        controller.abort();\n        throw new OpenAIError(`Attempted to iterate over a response with no body`);\n    }\n    const sseDecoder = new SSEDecoder();\n    const lineDecoder = new LineDecoder();\n    const iter = ReadableStreamToAsyncIterable(response.body);\n    for await (const sseChunk of iterSSEChunks(iter)) {\n        for (const line of lineDecoder.decode(sseChunk)) {\n            const sse = sseDecoder.decode(line);\n            if (sse)\n                yield sse;\n        }\n    }\n    for (const line of lineDecoder.flush()) {\n        const sse = sseDecoder.decode(line);\n        if (sse)\n            yield sse;\n    }\n}\n/**\n * Given an async iterable iterator, iterates over it and yields full\n * SSE chunks, i.e. yields when a double new-line is encountered.\n */\nasync function* iterSSEChunks(iterator) {\n    let data = new Uint8Array();\n    for await (const chunk of iterator) {\n        if (chunk == null) {\n            continue;\n        }\n        const binaryChunk = chunk instanceof ArrayBuffer ? new Uint8Array(chunk)\n            : typeof chunk === 'string' ? new TextEncoder().encode(chunk)\n                : chunk;\n        let newData = new Uint8Array(data.length + binaryChunk.length);\n        newData.set(data);\n        newData.set(binaryChunk, data.length);\n        data = newData;\n        let patternIndex;\n        while ((patternIndex = findDoubleNewlineIndex(data)) !== -1) {\n            yield data.slice(0, patternIndex);\n            data = data.slice(patternIndex);\n        }\n    }\n    if (data.length > 0) {\n        yield data;\n    }\n}\nclass SSEDecoder {\n    constructor() {\n        this.event = null;\n        this.data = [];\n        this.chunks = [];\n    }\n    decode(line) {\n        if (line.endsWith('\\r')) {\n            line = line.substring(0, line.length - 1);\n        }\n        if (!line) {\n            // empty line and we didn't previously encounter any messages\n            if (!this.event && !this.data.length)\n                return null;\n            const sse = {\n                event: this.event,\n                data: this.data.join('\\n'),\n                raw: this.chunks,\n            };\n            this.event = null;\n            this.data = [];\n            this.chunks = [];\n            return sse;\n        }\n        this.chunks.push(line);\n        if (line.startsWith(':')) {\n            return null;\n        }\n        let [fieldname, _, value] = partition(line, ':');\n        if (value.startsWith(' ')) {\n            value = value.substring(1);\n        }\n        if (fieldname === 'event') {\n            this.event = value;\n        }\n        else if (fieldname === 'data') {\n            this.data.push(value);\n        }\n        return null;\n    }\n}\nfunction partition(str, delimiter) {\n    const index = str.indexOf(delimiter);\n    if (index !== -1) {\n        return [str.substring(0, index), delimiter, str.substring(index + delimiter.length)];\n    }\n    return [str, '', ''];\n}\n//# sourceMappingURL=streaming.mjs.map","import { FormData, File, getMultipartRequestOptions, isFsReadStream, } from \"./_shims/index.mjs\";\nexport { fileFromPath } from \"./_shims/index.mjs\";\nexport const isResponseLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.url === 'string' &&\n    typeof value.blob === 'function';\nexport const isFileLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.name === 'string' &&\n    typeof value.lastModified === 'number' &&\n    isBlobLike(value);\n/**\n * The BlobLike type omits arrayBuffer() because @types/node-fetch@^2.6.4 lacks it; but this check\n * adds the arrayBuffer() method type because it is available and used at runtime\n */\nexport const isBlobLike = (value) => value != null &&\n    typeof value === 'object' &&\n    typeof value.size === 'number' &&\n    typeof value.type === 'string' &&\n    typeof value.text === 'function' &&\n    typeof value.slice === 'function' &&\n    typeof value.arrayBuffer === 'function';\nexport const isUploadable = (value) => {\n    return isFileLike(value) || isResponseLike(value) || isFsReadStream(value);\n};\n/**\n * Helper for creating a {@link File} to pass to an SDK upload method from a variety of different data formats\n * @param value the raw content of the file.  Can be an {@link Uploadable}, {@link BlobLikePart}, or {@link AsyncIterable} of {@link BlobLikePart}s\n * @param {string=} name the name of the file. If omitted, toFile will try to determine a file name from bits if possible\n * @param {Object=} options additional properties\n * @param {string=} options.type the MIME type of the content\n * @param {number=} options.lastModified the last modified timestamp\n * @returns a {@link File} with the given properties\n */\nexport async function toFile(value, name, options) {\n    // If it's a promise, resolve it.\n    value = await value;\n    // If we've been given a `File` we don't need to do anything\n    if (isFileLike(value)) {\n        return value;\n    }\n    if (isResponseLike(value)) {\n        const blob = await value.blob();\n        name || (name = new URL(value.url).pathname.split(/[\\\\/]/).pop() ?? 'unknown_file');\n        // we need to convert the `Blob` into an array buffer because the `Blob` class\n        // that `node-fetch` defines is incompatible with the web standard which results\n        // in `new File` interpreting it as a string instead of binary data.\n        const data = isBlobLike(blob) ? [(await blob.arrayBuffer())] : [blob];\n        return new File(data, name, options);\n    }\n    const bits = await getBytes(value);\n    name || (name = getName(value) ?? 'unknown_file');\n    if (!options?.type) {\n        const type = bits[0]?.type;\n        if (typeof type === 'string') {\n            options = { ...options, type };\n        }\n    }\n    return new File(bits, name, options);\n}\nasync function getBytes(value) {\n    let parts = [];\n    if (typeof value === 'string' ||\n        ArrayBuffer.isView(value) || // includes Uint8Array, Buffer, etc.\n        value instanceof ArrayBuffer) {\n        parts.push(value);\n    }\n    else if (isBlobLike(value)) {\n        parts.push(await value.arrayBuffer());\n    }\n    else if (isAsyncIterableIterator(value) // includes Readable, ReadableStream, etc.\n    ) {\n        for await (const chunk of value) {\n            parts.push(chunk); // TODO, consider validating?\n        }\n    }\n    else {\n        throw new Error(`Unexpected data type: ${typeof value}; constructor: ${value?.constructor\n            ?.name}; props: ${propsForError(value)}`);\n    }\n    return parts;\n}\nfunction propsForError(value) {\n    const props = Object.getOwnPropertyNames(value);\n    return `[${props.map((p) => `\"${p}\"`).join(', ')}]`;\n}\nfunction getName(value) {\n    return (getStringFromMaybeBuffer(value.name) ||\n        getStringFromMaybeBuffer(value.filename) ||\n        // For fs.ReadStream\n        getStringFromMaybeBuffer(value.path)?.split(/[\\\\/]/).pop());\n}\nconst getStringFromMaybeBuffer = (x) => {\n    if (typeof x === 'string')\n        return x;\n    if (typeof Buffer !== 'undefined' && x instanceof Buffer)\n        return String(x);\n    return undefined;\n};\nconst isAsyncIterableIterator = (value) => value != null && typeof value === 'object' && typeof value[Symbol.asyncIterator] === 'function';\nexport const isMultipartBody = (body) => body && typeof body === 'object' && body.body && body[Symbol.toStringTag] === 'MultipartBody';\n/**\n * Returns a multipart/form-data request if any part of the given request body contains a File / Blob value.\n * Otherwise returns the request as is.\n */\nexport const maybeMultipartFormRequestOptions = async (opts) => {\n    if (!hasUploadableValue(opts.body))\n        return opts;\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const multipartFormRequestOptions = async (opts) => {\n    const form = await createForm(opts.body);\n    return getMultipartRequestOptions(form, opts);\n};\nexport const createForm = async (body) => {\n    const form = new FormData();\n    await Promise.all(Object.entries(body || {}).map(([key, value]) => addFormValue(form, key, value)));\n    return form;\n};\nconst hasUploadableValue = (value) => {\n    if (isUploadable(value))\n        return true;\n    if (Array.isArray(value))\n        return value.some(hasUploadableValue);\n    if (value && typeof value === 'object') {\n        for (const k in value) {\n            if (hasUploadableValue(value[k]))\n                return true;\n        }\n    }\n    return false;\n};\nconst addFormValue = async (form, key, value) => {\n    if (value === undefined)\n        return;\n    if (value == null) {\n        throw new TypeError(`Received null for \"${key}\"; to pass null in FormData, you must use the string 'null'`);\n    }\n    // TODO: make nested formats configurable\n    if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n        form.append(key, String(value));\n    }\n    else if (isUploadable(value)) {\n        const file = await toFile(value);\n        form.append(key, file);\n    }\n    else if (Array.isArray(value)) {\n        await Promise.all(value.map((entry) => addFormValue(form, key + '[]', entry)));\n    }\n    else if (typeof value === 'object') {\n        await Promise.all(Object.entries(value).map(([name, prop]) => addFormValue(form, `${key}[${name}]`, prop)));\n    }\n    else {\n        throw new TypeError(`Invalid value given to form, expected a string, number, boolean, object, Array, File or Blob but got ${value} instead`);\n    }\n};\n//# sourceMappingURL=uploads.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractPage_client;\nimport { VERSION } from \"./version.mjs\";\nimport { Stream } from \"./streaming.mjs\";\nimport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, } from \"./error.mjs\";\nimport { kind as shimsKind, getDefaultAgent, fetch, } from \"./_shims/index.mjs\";\nimport { isBlobLike, isMultipartBody } from \"./uploads.mjs\";\nexport { maybeMultipartFormRequestOptions, multipartFormRequestOptions, createForm, } from \"./uploads.mjs\";\nasync function defaultParseResponse(props) {\n    const { response } = props;\n    if (props.options.stream) {\n        debug('response', response.status, response.url, response.headers, response.body);\n        // Note: there is an invariant here that isn't represented in the type system\n        // that if you set `stream: true` the response type must also be `Stream<T>`\n        if (props.options.__streamClass) {\n            return props.options.__streamClass.fromSSEResponse(response, props.controller);\n        }\n        return Stream.fromSSEResponse(response, props.controller);\n    }\n    // fetch refuses to read the body when the status code is 204.\n    if (response.status === 204) {\n        return null;\n    }\n    if (props.options.__binaryResponse) {\n        return response;\n    }\n    const contentType = response.headers.get('content-type');\n    const mediaType = contentType?.split(';')[0]?.trim();\n    const isJSON = mediaType?.includes('application/json') || mediaType?.endsWith('+json');\n    if (isJSON) {\n        const json = await response.json();\n        debug('response', response.status, response.url, response.headers, json);\n        return _addRequestID(json, response);\n    }\n    const text = await response.text();\n    debug('response', response.status, response.url, response.headers, text);\n    // TODO handle blob, arraybuffer, other content types, etc.\n    return text;\n}\nfunction _addRequestID(value, response) {\n    if (!value || typeof value !== 'object' || Array.isArray(value)) {\n        return value;\n    }\n    return Object.defineProperty(value, '_request_id', {\n        value: response.headers.get('x-request-id'),\n        enumerable: false,\n    });\n}\n/**\n * A subclass of `Promise` providing additional helper methods\n * for interacting with the SDK.\n */\nexport class APIPromise extends Promise {\n    constructor(responsePromise, parseResponse = defaultParseResponse) {\n        super((resolve) => {\n            // this is maybe a bit weird but this has to be a no-op to not implicitly\n            // parse the response body; instead .then, .catch, .finally are overridden\n            // to parse the response\n            resolve(null);\n        });\n        this.responsePromise = responsePromise;\n        this.parseResponse = parseResponse;\n    }\n    _thenUnwrap(transform) {\n        return new APIPromise(this.responsePromise, async (props) => _addRequestID(transform(await this.parseResponse(props), props), props.response));\n    }\n    /**\n     * Gets the raw `Response` instance instead of parsing the response\n     * data.\n     *\n     * If you want to parse the response body but still get the `Response`\n     * instance, you can use {@link withResponse()}.\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    asResponse() {\n        return this.responsePromise.then((p) => p.response);\n    }\n    /**\n     * Gets the parsed response data, the raw `Response` instance and the ID of the request,\n     * returned via the X-Request-ID header which is useful for debugging requests and reporting\n     * issues to OpenAI.\n     *\n     * If you just want to get the raw `Response` instance without parsing it,\n     * you can use {@link asResponse()}.\n     *\n     *\n     * 👋 Getting the wrong TypeScript type for `Response`?\n     * Try setting `\"moduleResolution\": \"NodeNext\"` if you can,\n     * or add one of these imports before your first `import … from 'openai'`:\n     * - `import 'openai/shims/node'` (if you're running on Node)\n     * - `import 'openai/shims/web'` (otherwise)\n     */\n    async withResponse() {\n        const [data, response] = await Promise.all([this.parse(), this.asResponse()]);\n        return { data, response, request_id: response.headers.get('x-request-id') };\n    }\n    parse() {\n        if (!this.parsedPromise) {\n            this.parsedPromise = this.responsePromise.then(this.parseResponse);\n        }\n        return this.parsedPromise;\n    }\n    then(onfulfilled, onrejected) {\n        return this.parse().then(onfulfilled, onrejected);\n    }\n    catch(onrejected) {\n        return this.parse().catch(onrejected);\n    }\n    finally(onfinally) {\n        return this.parse().finally(onfinally);\n    }\n}\nexport class APIClient {\n    constructor({ baseURL, maxRetries = 2, timeout = 600000, // 10 minutes\n    httpAgent, fetch: overriddenFetch, }) {\n        this.baseURL = baseURL;\n        this.maxRetries = validatePositiveInteger('maxRetries', maxRetries);\n        this.timeout = validatePositiveInteger('timeout', timeout);\n        this.httpAgent = httpAgent;\n        this.fetch = overriddenFetch ?? fetch;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    /**\n     * Override this to add your own default headers, for example:\n     *\n     *  {\n     *    ...super.defaultHeaders(),\n     *    Authorization: 'Bearer 123',\n     *  }\n     */\n    defaultHeaders(opts) {\n        return {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            'User-Agent': this.getUserAgent(),\n            ...getPlatformHeaders(),\n            ...this.authHeaders(opts),\n        };\n    }\n    /**\n     * Override this to add your own headers validation:\n     */\n    validateHeaders(headers, customHeaders) { }\n    defaultIdempotencyKey() {\n        return `stainless-node-retry-${uuid4()}`;\n    }\n    get(path, opts) {\n        return this.methodRequest('get', path, opts);\n    }\n    post(path, opts) {\n        return this.methodRequest('post', path, opts);\n    }\n    patch(path, opts) {\n        return this.methodRequest('patch', path, opts);\n    }\n    put(path, opts) {\n        return this.methodRequest('put', path, opts);\n    }\n    delete(path, opts) {\n        return this.methodRequest('delete', path, opts);\n    }\n    methodRequest(method, path, opts) {\n        return this.request(Promise.resolve(opts).then(async (opts) => {\n            const body = opts && isBlobLike(opts?.body) ? new DataView(await opts.body.arrayBuffer())\n                : opts?.body instanceof DataView ? opts.body\n                    : opts?.body instanceof ArrayBuffer ? new DataView(opts.body)\n                        : opts && ArrayBuffer.isView(opts?.body) ? new DataView(opts.body.buffer)\n                            : opts?.body;\n            return { method, path, ...opts, body };\n        }));\n    }\n    getAPIList(path, Page, opts) {\n        return this.requestAPIList(Page, { method: 'get', path, ...opts });\n    }\n    calculateContentLength(body) {\n        if (typeof body === 'string') {\n            if (typeof Buffer !== 'undefined') {\n                return Buffer.byteLength(body, 'utf8').toString();\n            }\n            if (typeof TextEncoder !== 'undefined') {\n                const encoder = new TextEncoder();\n                const encoded = encoder.encode(body);\n                return encoded.length.toString();\n            }\n        }\n        else if (ArrayBuffer.isView(body)) {\n            return body.byteLength.toString();\n        }\n        return null;\n    }\n    buildRequest(options, { retryCount = 0 } = {}) {\n        options = { ...options };\n        const { method, path, query, headers: headers = {} } = options;\n        const body = ArrayBuffer.isView(options.body) || (options.__binaryRequest && typeof options.body === 'string') ?\n            options.body\n            : isMultipartBody(options.body) ? options.body.body\n                : options.body ? JSON.stringify(options.body, null, 2)\n                    : null;\n        const contentLength = this.calculateContentLength(body);\n        const url = this.buildURL(path, query);\n        if ('timeout' in options)\n            validatePositiveInteger('timeout', options.timeout);\n        options.timeout = options.timeout ?? this.timeout;\n        const httpAgent = options.httpAgent ?? this.httpAgent ?? getDefaultAgent(url);\n        const minAgentTimeout = options.timeout + 1000;\n        if (typeof httpAgent?.options?.timeout === 'number' &&\n            minAgentTimeout > (httpAgent.options.timeout ?? 0)) {\n            // Allow any given request to bump our agent active socket timeout.\n            // This may seem strange, but leaking active sockets should be rare and not particularly problematic,\n            // and without mutating agent we would need to create more of them.\n            // This tradeoff optimizes for performance.\n            httpAgent.options.timeout = minAgentTimeout;\n        }\n        if (this.idempotencyHeader && method !== 'get') {\n            if (!options.idempotencyKey)\n                options.idempotencyKey = this.defaultIdempotencyKey();\n            headers[this.idempotencyHeader] = options.idempotencyKey;\n        }\n        const reqHeaders = this.buildHeaders({ options, headers, contentLength, retryCount });\n        const req = {\n            method,\n            ...(body && { body: body }),\n            headers: reqHeaders,\n            ...(httpAgent && { agent: httpAgent }),\n            // @ts-ignore node-fetch uses a custom AbortSignal type that is\n            // not compatible with standard web types\n            signal: options.signal ?? null,\n        };\n        return { req, url, timeout: options.timeout };\n    }\n    buildHeaders({ options, headers, contentLength, retryCount, }) {\n        const reqHeaders = {};\n        if (contentLength) {\n            reqHeaders['content-length'] = contentLength;\n        }\n        const defaultHeaders = this.defaultHeaders(options);\n        applyHeadersMut(reqHeaders, defaultHeaders);\n        applyHeadersMut(reqHeaders, headers);\n        // let builtin fetch set the Content-Type for multipart bodies\n        if (isMultipartBody(options.body) && shimsKind !== 'node') {\n            delete reqHeaders['content-type'];\n        }\n        // Don't set theses headers if they were already set or removed through default headers or by the caller.\n        // We check `defaultHeaders` and `headers`, which can contain nulls, instead of `reqHeaders` to account\n        // for the removal case.\n        if (getHeader(defaultHeaders, 'x-stainless-retry-count') === undefined &&\n            getHeader(headers, 'x-stainless-retry-count') === undefined) {\n            reqHeaders['x-stainless-retry-count'] = String(retryCount);\n        }\n        if (getHeader(defaultHeaders, 'x-stainless-timeout') === undefined &&\n            getHeader(headers, 'x-stainless-timeout') === undefined &&\n            options.timeout) {\n            reqHeaders['x-stainless-timeout'] = String(options.timeout);\n        }\n        this.validateHeaders(reqHeaders, headers);\n        return reqHeaders;\n    }\n    /**\n     * Used as a callback for mutating the given `FinalRequestOptions` object.\n     */\n    async prepareOptions(options) { }\n    /**\n     * Used as a callback for mutating the given `RequestInit` object.\n     *\n     * This is useful for cases where you want to add certain headers based off of\n     * the request properties, e.g. `method` or `url`.\n     */\n    async prepareRequest(request, { url, options }) { }\n    parseHeaders(headers) {\n        return (!headers ? {}\n            : Symbol.iterator in headers ?\n                Object.fromEntries(Array.from(headers).map((header) => [...header]))\n                : { ...headers });\n    }\n    makeStatusError(status, error, message, headers) {\n        return APIError.generate(status, error, message, headers);\n    }\n    request(options, remainingRetries = null) {\n        return new APIPromise(this.makeRequest(options, remainingRetries));\n    }\n    async makeRequest(optionsInput, retriesRemaining) {\n        const options = await optionsInput;\n        const maxRetries = options.maxRetries ?? this.maxRetries;\n        if (retriesRemaining == null) {\n            retriesRemaining = maxRetries;\n        }\n        await this.prepareOptions(options);\n        const { req, url, timeout } = this.buildRequest(options, { retryCount: maxRetries - retriesRemaining });\n        await this.prepareRequest(req, { url, options });\n        debug('request', url, options, req.headers);\n        if (options.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        const controller = new AbortController();\n        const response = await this.fetchWithTimeout(url, req, timeout, controller).catch(castToError);\n        if (response instanceof Error) {\n            if (options.signal?.aborted) {\n                throw new APIUserAbortError();\n            }\n            if (retriesRemaining) {\n                return this.retryRequest(options, retriesRemaining);\n            }\n            if (response.name === 'AbortError') {\n                throw new APIConnectionTimeoutError();\n            }\n            throw new APIConnectionError({ cause: response });\n        }\n        const responseHeaders = createResponseHeaders(response.headers);\n        if (!response.ok) {\n            if (retriesRemaining && this.shouldRetry(response)) {\n                const retryMessage = `retrying, ${retriesRemaining} attempts remaining`;\n                debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders);\n                return this.retryRequest(options, retriesRemaining, responseHeaders);\n            }\n            const errText = await response.text().catch((e) => castToError(e).message);\n            const errJSON = safeJSON(errText);\n            const errMessage = errJSON ? undefined : errText;\n            const retryMessage = retriesRemaining ? `(error; no more retries left)` : `(error; not retryable)`;\n            debug(`response (error; ${retryMessage})`, response.status, url, responseHeaders, errMessage);\n            const err = this.makeStatusError(response.status, errJSON, errMessage, responseHeaders);\n            throw err;\n        }\n        return { response, options, controller };\n    }\n    requestAPIList(Page, options) {\n        const request = this.makeRequest(options, null);\n        return new PagePromise(this, request, Page);\n    }\n    buildURL(path, query) {\n        const url = isAbsoluteURL(path) ?\n            new URL(path)\n            : new URL(this.baseURL + (this.baseURL.endsWith('/') && path.startsWith('/') ? path.slice(1) : path));\n        const defaultQuery = this.defaultQuery();\n        if (!isEmptyObj(defaultQuery)) {\n            query = { ...defaultQuery, ...query };\n        }\n        if (typeof query === 'object' && query && !Array.isArray(query)) {\n            url.search = this.stringifyQuery(query);\n        }\n        return url.toString();\n    }\n    stringifyQuery(query) {\n        return Object.entries(query)\n            .filter(([_, value]) => typeof value !== 'undefined')\n            .map(([key, value]) => {\n            if (typeof value === 'string' || typeof value === 'number' || typeof value === 'boolean') {\n                return `${encodeURIComponent(key)}=${encodeURIComponent(value)}`;\n            }\n            if (value === null) {\n                return `${encodeURIComponent(key)}=`;\n            }\n            throw new OpenAIError(`Cannot stringify type ${typeof value}; Expected string, number, boolean, or null. If you need to pass nested query parameters, you can manually encode them, e.g. { query: { 'foo[key1]': value1, 'foo[key2]': value2 } }, and please open a GitHub issue requesting better support for your use case.`);\n        })\n            .join('&');\n    }\n    async fetchWithTimeout(url, init, ms, controller) {\n        const { signal, ...options } = init || {};\n        if (signal)\n            signal.addEventListener('abort', () => controller.abort());\n        const timeout = setTimeout(() => controller.abort(), ms);\n        const fetchOptions = {\n            signal: controller.signal,\n            ...options,\n        };\n        if (fetchOptions.method) {\n            // Custom methods like 'patch' need to be uppercased\n            // See https://github.com/nodejs/undici/issues/2294\n            fetchOptions.method = fetchOptions.method.toUpperCase();\n        }\n        return (\n        // use undefined this binding; fetch errors if bound to something else in browser/cloudflare\n        this.fetch.call(undefined, url, fetchOptions).finally(() => {\n            clearTimeout(timeout);\n        }));\n    }\n    shouldRetry(response) {\n        // Note this is not a standard header.\n        const shouldRetryHeader = response.headers.get('x-should-retry');\n        // If the server explicitly says whether or not to retry, obey.\n        if (shouldRetryHeader === 'true')\n            return true;\n        if (shouldRetryHeader === 'false')\n            return false;\n        // Retry on request timeouts.\n        if (response.status === 408)\n            return true;\n        // Retry on lock timeouts.\n        if (response.status === 409)\n            return true;\n        // Retry on rate limits.\n        if (response.status === 429)\n            return true;\n        // Retry internal errors.\n        if (response.status >= 500)\n            return true;\n        return false;\n    }\n    async retryRequest(options, retriesRemaining, responseHeaders) {\n        let timeoutMillis;\n        // Note the `retry-after-ms` header may not be standard, but is a good idea and we'd like proactive support for it.\n        const retryAfterMillisHeader = responseHeaders?.['retry-after-ms'];\n        if (retryAfterMillisHeader) {\n            const timeoutMs = parseFloat(retryAfterMillisHeader);\n            if (!Number.isNaN(timeoutMs)) {\n                timeoutMillis = timeoutMs;\n            }\n        }\n        // About the Retry-After header: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Retry-After\n        const retryAfterHeader = responseHeaders?.['retry-after'];\n        if (retryAfterHeader && !timeoutMillis) {\n            const timeoutSeconds = parseFloat(retryAfterHeader);\n            if (!Number.isNaN(timeoutSeconds)) {\n                timeoutMillis = timeoutSeconds * 1000;\n            }\n            else {\n                timeoutMillis = Date.parse(retryAfterHeader) - Date.now();\n            }\n        }\n        // If the API asks us to wait a certain amount of time (and it's a reasonable amount),\n        // just do what it says, but otherwise calculate a default\n        if (!(timeoutMillis && 0 <= timeoutMillis && timeoutMillis < 60 * 1000)) {\n            const maxRetries = options.maxRetries ?? this.maxRetries;\n            timeoutMillis = this.calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries);\n        }\n        await sleep(timeoutMillis);\n        return this.makeRequest(options, retriesRemaining - 1);\n    }\n    calculateDefaultRetryTimeoutMillis(retriesRemaining, maxRetries) {\n        const initialRetryDelay = 0.5;\n        const maxRetryDelay = 8.0;\n        const numRetries = maxRetries - retriesRemaining;\n        // Apply exponential backoff, but not more than the max.\n        const sleepSeconds = Math.min(initialRetryDelay * Math.pow(2, numRetries), maxRetryDelay);\n        // Apply some jitter, take up to at most 25 percent of the retry time.\n        const jitter = 1 - Math.random() * 0.25;\n        return sleepSeconds * jitter * 1000;\n    }\n    getUserAgent() {\n        return `${this.constructor.name}/JS ${VERSION}`;\n    }\n}\nexport class AbstractPage {\n    constructor(client, response, body, options) {\n        _AbstractPage_client.set(this, void 0);\n        __classPrivateFieldSet(this, _AbstractPage_client, client, \"f\");\n        this.options = options;\n        this.response = response;\n        this.body = body;\n    }\n    hasNextPage() {\n        const items = this.getPaginatedItems();\n        if (!items.length)\n            return false;\n        return this.nextPageInfo() != null;\n    }\n    async getNextPage() {\n        const nextInfo = this.nextPageInfo();\n        if (!nextInfo) {\n            throw new OpenAIError('No next page expected; please check `.hasNextPage()` before calling `.getNextPage()`.');\n        }\n        const nextOptions = { ...this.options };\n        if ('params' in nextInfo && typeof nextOptions.query === 'object') {\n            nextOptions.query = { ...nextOptions.query, ...nextInfo.params };\n        }\n        else if ('url' in nextInfo) {\n            const params = [...Object.entries(nextOptions.query || {}), ...nextInfo.url.searchParams.entries()];\n            for (const [key, value] of params) {\n                nextInfo.url.searchParams.set(key, value);\n            }\n            nextOptions.query = undefined;\n            nextOptions.path = nextInfo.url.toString();\n        }\n        return await __classPrivateFieldGet(this, _AbstractPage_client, \"f\").requestAPIList(this.constructor, nextOptions);\n    }\n    async *iterPages() {\n        // eslint-disable-next-line @typescript-eslint/no-this-alias\n        let page = this;\n        yield page;\n        while (page.hasNextPage()) {\n            page = await page.getNextPage();\n            yield page;\n        }\n    }\n    async *[(_AbstractPage_client = new WeakMap(), Symbol.asyncIterator)]() {\n        for await (const page of this.iterPages()) {\n            for (const item of page.getPaginatedItems()) {\n                yield item;\n            }\n        }\n    }\n}\n/**\n * This subclass of Promise will resolve to an instantiated Page once the request completes.\n *\n * It also implements AsyncIterable to allow auto-paginating iteration on an unawaited list call, eg:\n *\n *    for await (const item of client.items.list()) {\n *      console.log(item)\n *    }\n */\nexport class PagePromise extends APIPromise {\n    constructor(client, request, Page) {\n        super(request, async (props) => new Page(client, props.response, await defaultParseResponse(props), props.options));\n    }\n    /**\n     * Allow auto-paginating iteration on an unawaited list call, eg:\n     *\n     *    for await (const item of client.items.list()) {\n     *      console.log(item)\n     *    }\n     */\n    async *[Symbol.asyncIterator]() {\n        const page = await this;\n        for await (const item of page) {\n            yield item;\n        }\n    }\n}\nexport const createResponseHeaders = (headers) => {\n    return new Proxy(Object.fromEntries(\n    // @ts-ignore\n    headers.entries()), {\n        get(target, name) {\n            const key = name.toString();\n            return target[key.toLowerCase()] || target[key];\n        },\n    });\n};\n// This is required so that we can determine if a given object matches the RequestOptions\n// type at runtime. While this requires duplication, it is enforced by the TypeScript\n// compiler such that any missing / extraneous keys will cause an error.\nconst requestOptionsKeys = {\n    method: true,\n    path: true,\n    query: true,\n    body: true,\n    headers: true,\n    maxRetries: true,\n    stream: true,\n    timeout: true,\n    httpAgent: true,\n    signal: true,\n    idempotencyKey: true,\n    __metadata: true,\n    __binaryRequest: true,\n    __binaryResponse: true,\n    __streamClass: true,\n};\nexport const isRequestOptions = (obj) => {\n    return (typeof obj === 'object' &&\n        obj !== null &&\n        !isEmptyObj(obj) &&\n        Object.keys(obj).every((k) => hasOwn(requestOptionsKeys, k)));\n};\nconst getPlatformProperties = () => {\n    if (typeof Deno !== 'undefined' && Deno.build != null) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(Deno.build.os),\n            'X-Stainless-Arch': normalizeArch(Deno.build.arch),\n            'X-Stainless-Runtime': 'deno',\n            'X-Stainless-Runtime-Version': typeof Deno.version === 'string' ? Deno.version : Deno.version?.deno ?? 'unknown',\n        };\n    }\n    if (typeof EdgeRuntime !== 'undefined') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': `other:${EdgeRuntime}`,\n            'X-Stainless-Runtime': 'edge',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    // Check if Node.js\n    if (Object.prototype.toString.call(typeof process !== 'undefined' ? process : 0) === '[object process]') {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': normalizePlatform(process.platform),\n            'X-Stainless-Arch': normalizeArch(process.arch),\n            'X-Stainless-Runtime': 'node',\n            'X-Stainless-Runtime-Version': process.version,\n        };\n    }\n    const browserInfo = getBrowserInfo();\n    if (browserInfo) {\n        return {\n            'X-Stainless-Lang': 'js',\n            'X-Stainless-Package-Version': VERSION,\n            'X-Stainless-OS': 'Unknown',\n            'X-Stainless-Arch': 'unknown',\n            'X-Stainless-Runtime': `browser:${browserInfo.browser}`,\n            'X-Stainless-Runtime-Version': browserInfo.version,\n        };\n    }\n    // TODO add support for Cloudflare workers, etc.\n    return {\n        'X-Stainless-Lang': 'js',\n        'X-Stainless-Package-Version': VERSION,\n        'X-Stainless-OS': 'Unknown',\n        'X-Stainless-Arch': 'unknown',\n        'X-Stainless-Runtime': 'unknown',\n        'X-Stainless-Runtime-Version': 'unknown',\n    };\n};\n// Note: modified from https://github.com/JS-DevTools/host-environment/blob/b1ab79ecde37db5d6e163c050e54fe7d287d7c92/src/isomorphic.browser.ts\nfunction getBrowserInfo() {\n    if (typeof navigator === 'undefined' || !navigator) {\n        return null;\n    }\n    // NOTE: The order matters here!\n    const browserPatterns = [\n        { key: 'edge', pattern: /Edge(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /MSIE(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'ie', pattern: /Trident(?:.*rv\\:(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'chrome', pattern: /Chrome(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'firefox', pattern: /Firefox(?:\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?/ },\n        { key: 'safari', pattern: /(?:Version\\W+(\\d+)\\.(\\d+)(?:\\.(\\d+))?)?(?:\\W+Mobile\\S*)?\\W+Safari/ },\n    ];\n    // Find the FIRST matching browser\n    for (const { key, pattern } of browserPatterns) {\n        const match = pattern.exec(navigator.userAgent);\n        if (match) {\n            const major = match[1] || 0;\n            const minor = match[2] || 0;\n            const patch = match[3] || 0;\n            return { browser: key, version: `${major}.${minor}.${patch}` };\n        }\n    }\n    return null;\n}\nconst normalizeArch = (arch) => {\n    // Node docs:\n    // - https://nodejs.org/api/process.html#processarch\n    // Deno docs:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    if (arch === 'x32')\n        return 'x32';\n    if (arch === 'x86_64' || arch === 'x64')\n        return 'x64';\n    if (arch === 'arm')\n        return 'arm';\n    if (arch === 'aarch64' || arch === 'arm64')\n        return 'arm64';\n    if (arch)\n        return `other:${arch}`;\n    return 'unknown';\n};\nconst normalizePlatform = (platform) => {\n    // Node platforms:\n    // - https://nodejs.org/api/process.html#processplatform\n    // Deno platforms:\n    // - https://doc.deno.land/deno/stable/~/Deno.build\n    // - https://github.com/denoland/deno/issues/14799\n    platform = platform.toLowerCase();\n    // NOTE: this iOS check is untested and may not work\n    // Node does not work natively on IOS, there is a fork at\n    // https://github.com/nodejs-mobile/nodejs-mobile\n    // however it is unknown at the time of writing how to detect if it is running\n    if (platform.includes('ios'))\n        return 'iOS';\n    if (platform === 'android')\n        return 'Android';\n    if (platform === 'darwin')\n        return 'MacOS';\n    if (platform === 'win32')\n        return 'Windows';\n    if (platform === 'freebsd')\n        return 'FreeBSD';\n    if (platform === 'openbsd')\n        return 'OpenBSD';\n    if (platform === 'linux')\n        return 'Linux';\n    if (platform)\n        return `Other:${platform}`;\n    return 'Unknown';\n};\nlet _platformHeaders;\nconst getPlatformHeaders = () => {\n    return (_platformHeaders ?? (_platformHeaders = getPlatformProperties()));\n};\nexport const safeJSON = (text) => {\n    try {\n        return JSON.parse(text);\n    }\n    catch (err) {\n        return undefined;\n    }\n};\n// https://url.spec.whatwg.org/#url-scheme-string\nconst startsWithSchemeRegexp = /^[a-z][a-z0-9+.-]*:/i;\nconst isAbsoluteURL = (url) => {\n    return startsWithSchemeRegexp.test(url);\n};\nexport const sleep = (ms) => new Promise((resolve) => setTimeout(resolve, ms));\nconst validatePositiveInteger = (name, n) => {\n    if (typeof n !== 'number' || !Number.isInteger(n)) {\n        throw new OpenAIError(`${name} must be an integer`);\n    }\n    if (n < 0) {\n        throw new OpenAIError(`${name} must be a positive integer`);\n    }\n    return n;\n};\nexport const castToError = (err) => {\n    if (err instanceof Error)\n        return err;\n    if (typeof err === 'object' && err !== null) {\n        try {\n            return new Error(JSON.stringify(err));\n        }\n        catch { }\n    }\n    return new Error(err);\n};\nexport const ensurePresent = (value) => {\n    if (value == null)\n        throw new OpenAIError(`Expected a value to be given but received ${value} instead.`);\n    return value;\n};\n/**\n * Read an environment variable.\n *\n * Trims beginning and trailing whitespace.\n *\n * Will return undefined if the environment variable doesn't exist or cannot be accessed.\n */\nexport const readEnv = (env) => {\n    if (typeof process !== 'undefined') {\n        return process.env?.[env]?.trim() ?? undefined;\n    }\n    if (typeof Deno !== 'undefined') {\n        return Deno.env?.get?.(env)?.trim();\n    }\n    return undefined;\n};\nexport const coerceInteger = (value) => {\n    if (typeof value === 'number')\n        return Math.round(value);\n    if (typeof value === 'string')\n        return parseInt(value, 10);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceFloat = (value) => {\n    if (typeof value === 'number')\n        return value;\n    if (typeof value === 'string')\n        return parseFloat(value);\n    throw new OpenAIError(`Could not coerce ${value} (type: ${typeof value}) into a number`);\n};\nexport const coerceBoolean = (value) => {\n    if (typeof value === 'boolean')\n        return value;\n    if (typeof value === 'string')\n        return value === 'true';\n    return Boolean(value);\n};\nexport const maybeCoerceInteger = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceInteger(value);\n};\nexport const maybeCoerceFloat = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceFloat(value);\n};\nexport const maybeCoerceBoolean = (value) => {\n    if (value === undefined) {\n        return undefined;\n    }\n    return coerceBoolean(value);\n};\n// https://stackoverflow.com/a/34491287\nexport function isEmptyObj(obj) {\n    if (!obj)\n        return true;\n    for (const _k in obj)\n        return false;\n    return true;\n}\n// https://eslint.org/docs/latest/rules/no-prototype-builtins\nexport function hasOwn(obj, key) {\n    return Object.prototype.hasOwnProperty.call(obj, key);\n}\n/**\n * Copies headers from \"newHeaders\" onto \"targetHeaders\",\n * using lower-case for all properties,\n * ignoring any keys with undefined values,\n * and deleting any keys with null values.\n */\nfunction applyHeadersMut(targetHeaders, newHeaders) {\n    for (const k in newHeaders) {\n        if (!hasOwn(newHeaders, k))\n            continue;\n        const lowerKey = k.toLowerCase();\n        if (!lowerKey)\n            continue;\n        const val = newHeaders[k];\n        if (val === null) {\n            delete targetHeaders[lowerKey];\n        }\n        else if (val !== undefined) {\n            targetHeaders[lowerKey] = val;\n        }\n    }\n}\nconst SENSITIVE_HEADERS = new Set(['authorization', 'api-key']);\nexport function debug(action, ...args) {\n    if (typeof process !== 'undefined' && process?.env?.['DEBUG'] === 'true') {\n        const modifiedArgs = args.map((arg) => {\n            if (!arg) {\n                return arg;\n            }\n            // Check for sensitive headers in request body 'headers' object\n            if (arg['headers']) {\n                // clone so we don't mutate\n                const modifiedArg = { ...arg, headers: { ...arg['headers'] } };\n                for (const header in arg['headers']) {\n                    if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n                        modifiedArg['headers'][header] = 'REDACTED';\n                    }\n                }\n                return modifiedArg;\n            }\n            let modifiedArg = null;\n            // Check for sensitive headers in headers object\n            for (const header in arg) {\n                if (SENSITIVE_HEADERS.has(header.toLowerCase())) {\n                    // avoid making a copy until we need to\n                    modifiedArg ?? (modifiedArg = { ...arg });\n                    modifiedArg[header] = 'REDACTED';\n                }\n            }\n            return modifiedArg ?? arg;\n        });\n        console.log(`OpenAI:DEBUG:${action}`, ...modifiedArgs);\n    }\n}\n/**\n * https://stackoverflow.com/a/2117523\n */\nconst uuid4 = () => {\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, (c) => {\n        const r = (Math.random() * 16) | 0;\n        const v = c === 'x' ? r : (r & 0x3) | 0x8;\n        return v.toString(16);\n    });\n};\nexport const isRunningInBrowser = () => {\n    return (\n    // @ts-ignore\n    typeof window !== 'undefined' &&\n        // @ts-ignore\n        typeof window.document !== 'undefined' &&\n        // @ts-ignore\n        typeof navigator !== 'undefined');\n};\nexport const isHeadersProtocol = (headers) => {\n    return typeof headers?.get === 'function';\n};\nexport const getRequiredHeader = (headers, header) => {\n    const foundHeader = getHeader(headers, header);\n    if (foundHeader === undefined) {\n        throw new Error(`Could not find ${header} header`);\n    }\n    return foundHeader;\n};\nexport const getHeader = (headers, header) => {\n    const lowerCasedHeader = header.toLowerCase();\n    if (isHeadersProtocol(headers)) {\n        // to deal with the case where the header looks like Stainless-Event-Id\n        const intercapsHeader = header[0]?.toUpperCase() +\n            header.substring(1).replace(/([^\\w])(\\w)/g, (_m, g1, g2) => g1 + g2.toUpperCase());\n        for (const key of [header, lowerCasedHeader, header.toUpperCase(), intercapsHeader]) {\n            const value = headers.get(key);\n            if (value) {\n                return value;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(headers)) {\n        if (key.toLowerCase() === lowerCasedHeader) {\n            if (Array.isArray(value)) {\n                if (value.length <= 1)\n                    return value[0];\n                console.warn(`Received ${value.length} entries for the ${header} header, using the first entry.`);\n                return value[0];\n            }\n            return value;\n        }\n    }\n    return undefined;\n};\n/**\n * Encodes a string to Base64 format.\n */\nexport const toBase64 = (str) => {\n    if (!str)\n        return '';\n    if (typeof Buffer !== 'undefined') {\n        return Buffer.from(str).toString('base64');\n    }\n    if (typeof btoa !== 'undefined') {\n        return btoa(str);\n    }\n    throw new OpenAIError('Cannot generate b64 string; Expected `Buffer` or `btoa` to be defined');\n};\nexport function isObj(obj) {\n    return obj != null && typeof obj === 'object' && !Array.isArray(obj);\n}\n//# sourceMappingURL=core.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { AbstractPage } from \"./core.mjs\";\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class Page extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.object = body.object;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    /**\n     * This page represents a response that isn't actually paginated at the API level\n     * so there will never be any next page params.\n     */\n    nextPageParams() {\n        return null;\n    }\n    nextPageInfo() {\n        return null;\n    }\n}\nexport class CursorPage extends AbstractPage {\n    constructor(client, response, body, options) {\n        super(client, response, body, options);\n        this.data = body.data || [];\n        this.has_more = body.has_more || false;\n    }\n    getPaginatedItems() {\n        return this.data ?? [];\n    }\n    hasNextPage() {\n        if (this.has_more === false) {\n            return false;\n        }\n        return super.hasNextPage();\n    }\n    // @deprecated Please use `nextPageInfo()` instead\n    nextPageParams() {\n        const info = this.nextPageInfo();\n        if (!info)\n            return null;\n        if ('params' in info)\n            return info.params;\n        const params = Object.fromEntries(info.url.searchParams);\n        if (!Object.keys(params).length)\n            return null;\n        return params;\n    }\n    nextPageInfo() {\n        const data = this.getPaginatedItems();\n        if (!data.length) {\n            return null;\n        }\n        const id = data[data.length - 1]?.id;\n        if (!id) {\n            return null;\n        }\n        return { params: { after: id } };\n    }\n}\n//# sourceMappingURL=pagination.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nexport class APIResource {\n    constructor(client) {\n        this._client = client;\n    }\n}\n//# sourceMappingURL=resource.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { ChatCompletionStoreMessagesPage } from \"./completions.mjs\";\nexport class Messages extends APIResource {\n    list(completionId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(completionId, {}, query);\n        }\n        return this._client.getAPIList(`/chat/completions/${completionId}/messages`, ChatCompletionStoreMessagesPage, { query, ...options });\n    }\n}\nexport { ChatCompletionStoreMessagesPage };\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages } from \"./messages.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Completions extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/chat/completions', { body, ...options, stream: body.stream ?? false });\n    }\n    /**\n     * Get a stored chat completion. Only Chat Completions that have been created with\n     * the `store` parameter set to `true` will be returned.\n     */\n    retrieve(completionId, options) {\n        return this._client.get(`/chat/completions/${completionId}`, options);\n    }\n    /**\n     * Modify a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be modified. Currently, the only\n     * supported modification is to update the `metadata` field.\n     */\n    update(completionId, body, options) {\n        return this._client.post(`/chat/completions/${completionId}`, { body, ...options });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/chat/completions', ChatCompletionsPage, { query, ...options });\n    }\n    /**\n     * Delete a stored chat completion. Only Chat Completions that have been created\n     * with the `store` parameter set to `true` can be deleted.\n     */\n    del(completionId, options) {\n        return this._client.delete(`/chat/completions/${completionId}`, options);\n    }\n}\nexport class ChatCompletionsPage extends CursorPage {\n}\nexport class ChatCompletionStoreMessagesPage extends CursorPage {\n}\nCompletions.ChatCompletionsPage = ChatCompletionsPage;\nCompletions.Messages = Messages;\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions/completions.mjs\";\nimport { ChatCompletionsPage, Completions, } from \"./completions/completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\nChat.Completions = Completions;\nChat.ChatCompletionsPage = ChatCompletionsPage;\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nexport class Speech extends APIResource {\n    /**\n     * Generates audio from the input text.\n     */\n    create(body, options) {\n        return this._client.post('/audio/speech', {\n            body,\n            ...options,\n            headers: { Accept: 'application/octet-stream', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n}\n//# sourceMappingURL=speech.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Transcriptions extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/transcriptions', Core.multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }));\n    }\n}\n//# sourceMappingURL=transcriptions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Translations extends APIResource {\n    create(body, options) {\n        return this._client.post('/audio/translations', Core.multipartFormRequestOptions({ body, ...options, __metadata: { model: body.model } }));\n    }\n}\n//# sourceMappingURL=translations.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as SpeechAPI from \"./speech.mjs\";\nimport { Speech } from \"./speech.mjs\";\nimport * as TranscriptionsAPI from \"./transcriptions.mjs\";\nimport { Transcriptions, } from \"./transcriptions.mjs\";\nimport * as TranslationsAPI from \"./translations.mjs\";\nimport { Translations, } from \"./translations.mjs\";\nexport class Audio extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.transcriptions = new TranscriptionsAPI.Transcriptions(this._client);\n        this.translations = new TranslationsAPI.Translations(this._client);\n        this.speech = new SpeechAPI.Speech(this._client);\n    }\n}\nAudio.Transcriptions = Transcriptions;\nAudio.Translations = Translations;\nAudio.Speech = Speech;\n//# sourceMappingURL=audio.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Batches extends APIResource {\n    /**\n     * Creates and executes a batch from an uploaded file of requests\n     */\n    create(body, options) {\n        return this._client.post('/batches', { body, ...options });\n    }\n    /**\n     * Retrieves a batch.\n     */\n    retrieve(batchId, options) {\n        return this._client.get(`/batches/${batchId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/batches', BatchesPage, { query, ...options });\n    }\n    /**\n     * Cancels an in-progress batch. The batch will be in status `cancelling` for up to\n     * 10 minutes, before changing to `cancelled`, where it will have partial results\n     * (if any) available in the output file.\n     */\n    cancel(batchId, options) {\n        return this._client.post(`/batches/${batchId}/cancel`, options);\n    }\n}\nexport class BatchesPage extends CursorPage {\n}\nBatches.BatchesPage = BatchesPage;\n//# sourceMappingURL=batches.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Assistants extends APIResource {\n    /**\n     * Create an assistant with a model and instructions.\n     */\n    create(body, options) {\n        return this._client.post('/assistants', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves an assistant.\n     */\n    retrieve(assistantId, options) {\n        return this._client.get(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies an assistant.\n     */\n    update(assistantId, body, options) {\n        return this._client.post(`/assistants/${assistantId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/assistants', AssistantsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete an assistant.\n     */\n    del(assistantId, options) {\n        return this._client.delete(`/assistants/${assistantId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class AssistantsPage extends CursorPage {\n}\nAssistants.AssistantsPage = AssistantsPage;\n//# sourceMappingURL=assistants.mjs.map","export function isRunnableFunctionWithParse(fn) {\n    return typeof fn.parse === 'function';\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n *\n * @deprecated - please use ParsingToolFunction instead.\n */\nexport class ParsingFunction {\n    constructor(input) {\n        this.function = input.function;\n        this.parse = input.parse;\n        this.parameters = input.parameters;\n        this.description = input.description;\n        this.name = input.name;\n    }\n}\n/**\n * This is helper class for passing a `function` and `parse` where the `function`\n * argument type matches the `parse` return type.\n */\nexport class ParsingToolFunction {\n    constructor(input) {\n        this.type = 'function';\n        this.function = input;\n    }\n}\n//# sourceMappingURL=RunnableFunction.mjs.map","export const isAssistantMessage = (message) => {\n    return message?.role === 'assistant';\n};\nexport const isFunctionMessage = (message) => {\n    return message?.role === 'function';\n};\nexport const isToolMessage = (message) => {\n    return message?.role === 'tool';\n};\nexport function isPresent(obj) {\n    return obj != null;\n}\n//# sourceMappingURL=chatCompletionUtils.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _EventStream_instances, _EventStream_connectedPromise, _EventStream_resolveConnectedPromise, _EventStream_rejectConnectedPromise, _EventStream_endPromise, _EventStream_resolveEndPromise, _EventStream_rejectEndPromise, _EventStream_listeners, _EventStream_ended, _EventStream_errored, _EventStream_aborted, _EventStream_catchingPromiseCreated, _EventStream_handleError;\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nexport class EventStream {\n    constructor() {\n        _EventStream_instances.add(this);\n        this.controller = new AbortController();\n        _EventStream_connectedPromise.set(this, void 0);\n        _EventStream_resolveConnectedPromise.set(this, () => { });\n        _EventStream_rejectConnectedPromise.set(this, () => { });\n        _EventStream_endPromise.set(this, void 0);\n        _EventStream_resolveEndPromise.set(this, () => { });\n        _EventStream_rejectEndPromise.set(this, () => { });\n        _EventStream_listeners.set(this, {});\n        _EventStream_ended.set(this, false);\n        _EventStream_errored.set(this, false);\n        _EventStream_aborted.set(this, false);\n        _EventStream_catchingPromiseCreated.set(this, false);\n        __classPrivateFieldSet(this, _EventStream_connectedPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveConnectedPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectConnectedPromise, reject, \"f\");\n        }), \"f\");\n        __classPrivateFieldSet(this, _EventStream_endPromise, new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_resolveEndPromise, resolve, \"f\");\n            __classPrivateFieldSet(this, _EventStream_rejectEndPromise, reject, \"f\");\n        }), \"f\");\n        // Don't let these promises cause unhandled rejection errors.\n        // we will manually cause an unhandled rejection error later\n        // if the user hasn't registered any error listener or called\n        // any promise-returning method.\n        __classPrivateFieldGet(this, _EventStream_connectedPromise, \"f\").catch(() => { });\n        __classPrivateFieldGet(this, _EventStream_endPromise, \"f\").catch(() => { });\n    }\n    _run(executor) {\n        // Unfortunately if we call `executor()` immediately we get runtime errors about\n        // references to `this` before the `super()` constructor call returns.\n        setTimeout(() => {\n            executor().then(() => {\n                this._emitFinal();\n                this._emit('end');\n            }, __classPrivateFieldGet(this, _EventStream_instances, \"m\", _EventStream_handleError).bind(this));\n        }, 0);\n    }\n    _connected() {\n        if (this.ended)\n            return;\n        __classPrivateFieldGet(this, _EventStream_resolveConnectedPromise, \"f\").call(this);\n        this._emit('connect');\n    }\n    get ended() {\n        return __classPrivateFieldGet(this, _EventStream_ended, \"f\");\n    }\n    get errored() {\n        return __classPrivateFieldGet(this, _EventStream_errored, \"f\");\n    }\n    get aborted() {\n        return __classPrivateFieldGet(this, _EventStream_aborted, \"f\");\n    }\n    abort() {\n        this.controller.abort();\n    }\n    /**\n     * Adds the listener function to the end of the listeners array for the event.\n     * No checks are made to see if the listener has already been added. Multiple calls passing\n     * the same combination of event and listener will result in the listener being added, and\n     * called, multiple times.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    on(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener });\n        return this;\n    }\n    /**\n     * Removes the specified listener from the listener array for the event.\n     * off() will remove, at most, one instance of a listener from the listener array. If any single\n     * listener has been added multiple times to the listener array for the specified event, then\n     * off() must be called multiple times to remove each instance.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    off(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (!listeners)\n            return this;\n        const index = listeners.findIndex((l) => l.listener === listener);\n        if (index >= 0)\n            listeners.splice(index, 1);\n        return this;\n    }\n    /**\n     * Adds a one-time listener function for the event. The next time the event is triggered,\n     * this listener is removed and then invoked.\n     * @returns this ChatCompletionStream, so that calls can be chained\n     */\n    once(event, listener) {\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] || (__classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = []);\n        listeners.push({ listener, once: true });\n        return this;\n    }\n    /**\n     * This is similar to `.once()`, but returns a Promise that resolves the next time\n     * the event is triggered, instead of calling a listener callback.\n     * @returns a Promise that resolves the next time given event is triggered,\n     * or rejects if an error is emitted.  (If you request the 'error' event,\n     * returns a promise that resolves with the error).\n     *\n     * Example:\n     *\n     *   const message = await stream.emitted('message') // rejects if the stream errors\n     */\n    emitted(event) {\n        return new Promise((resolve, reject) => {\n            __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n            if (event !== 'error')\n                this.once('error', reject);\n            this.once(event, resolve);\n        });\n    }\n    async done() {\n        __classPrivateFieldSet(this, _EventStream_catchingPromiseCreated, true, \"f\");\n        await __classPrivateFieldGet(this, _EventStream_endPromise, \"f\");\n    }\n    _emit(event, ...args) {\n        // make sure we don't emit any events after end\n        if (__classPrivateFieldGet(this, _EventStream_ended, \"f\")) {\n            return;\n        }\n        if (event === 'end') {\n            __classPrivateFieldSet(this, _EventStream_ended, true, \"f\");\n            __classPrivateFieldGet(this, _EventStream_resolveEndPromise, \"f\").call(this);\n        }\n        const listeners = __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event];\n        if (listeners) {\n            __classPrivateFieldGet(this, _EventStream_listeners, \"f\")[event] = listeners.filter((l) => !l.once);\n            listeners.forEach(({ listener }) => listener(...args));\n        }\n        if (event === 'abort') {\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n            return;\n        }\n        if (event === 'error') {\n            // NOTE: _emit('error', error) should only be called from #handleError().\n            const error = args[0];\n            if (!__classPrivateFieldGet(this, _EventStream_catchingPromiseCreated, \"f\") && !listeners?.length) {\n                // Trigger an unhandled rejection if the user hasn't registered any error handlers.\n                // If you are seeing stack traces here, make sure to handle errors via either:\n                // - runner.on('error', () => ...)\n                // - await runner.done()\n                // - await runner.finalChatCompletion()\n                // - etc.\n                Promise.reject(error);\n            }\n            __classPrivateFieldGet(this, _EventStream_rejectConnectedPromise, \"f\").call(this, error);\n            __classPrivateFieldGet(this, _EventStream_rejectEndPromise, \"f\").call(this, error);\n            this._emit('end');\n        }\n    }\n    _emitFinal() { }\n}\n_EventStream_connectedPromise = new WeakMap(), _EventStream_resolveConnectedPromise = new WeakMap(), _EventStream_rejectConnectedPromise = new WeakMap(), _EventStream_endPromise = new WeakMap(), _EventStream_resolveEndPromise = new WeakMap(), _EventStream_rejectEndPromise = new WeakMap(), _EventStream_listeners = new WeakMap(), _EventStream_ended = new WeakMap(), _EventStream_errored = new WeakMap(), _EventStream_aborted = new WeakMap(), _EventStream_catchingPromiseCreated = new WeakMap(), _EventStream_instances = new WeakSet(), _EventStream_handleError = function _EventStream_handleError(error) {\n    __classPrivateFieldSet(this, _EventStream_errored, true, \"f\");\n    if (error instanceof Error && error.name === 'AbortError') {\n        error = new APIUserAbortError();\n    }\n    if (error instanceof APIUserAbortError) {\n        __classPrivateFieldSet(this, _EventStream_aborted, true, \"f\");\n        return this._emit('abort', error);\n    }\n    if (error instanceof OpenAIError) {\n        return this._emit('error', error);\n    }\n    if (error instanceof Error) {\n        const openAIError = new OpenAIError(error.message);\n        // @ts-ignore\n        openAIError.cause = error;\n        return this._emit('error', openAIError);\n    }\n    return this._emit('error', new OpenAIError(String(error)));\n};\n//# sourceMappingURL=EventStream.mjs.map","import { ContentFilterFinishReasonError, LengthFinishReasonError, OpenAIError } from \"../error.mjs\";\nexport function makeParseableResponseFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function makeParseableTextFormat(response_format, parser) {\n    const obj = { ...response_format };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-response-format',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableResponseFormat(response_format) {\n    return response_format?.['$brand'] === 'auto-parseable-response-format';\n}\nexport function makeParseableTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nexport function maybeParseChatCompletion(completion, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...completion,\n            choices: completion.choices.map((choice) => ({\n                ...choice,\n                message: {\n                    ...choice.message,\n                    parsed: null,\n                    ...(choice.message.tool_calls ?\n                        {\n                            tool_calls: choice.message.tool_calls,\n                        }\n                        : undefined),\n                },\n            })),\n        };\n    }\n    return parseChatCompletion(completion, params);\n}\nexport function parseChatCompletion(completion, params) {\n    const choices = completion.choices.map((choice) => {\n        if (choice.finish_reason === 'length') {\n            throw new LengthFinishReasonError();\n        }\n        if (choice.finish_reason === 'content_filter') {\n            throw new ContentFilterFinishReasonError();\n        }\n        return {\n            ...choice,\n            message: {\n                ...choice.message,\n                ...(choice.message.tool_calls ?\n                    {\n                        tool_calls: choice.message.tool_calls?.map((toolCall) => parseToolCall(params, toolCall)) ?? undefined,\n                    }\n                    : undefined),\n                parsed: choice.message.content && !choice.message.refusal ?\n                    parseResponseFormat(params, choice.message.content)\n                    : null,\n            },\n        };\n    });\n    return { ...completion, choices };\n}\nfunction parseResponseFormat(params, content) {\n    if (params.response_format?.type !== 'json_schema') {\n        return null;\n    }\n    if (params.response_format?.type === 'json_schema') {\n        if ('$parseRaw' in params.response_format) {\n            const response_format = params.response_format;\n            return response_format.$parseRaw(content);\n        }\n        return JSON.parse(content);\n    }\n    return null;\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return {\n        ...toolCall,\n        function: {\n            ...toolCall.function,\n            parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.function.arguments)\n                : inputTool?.function.strict ? JSON.parse(toolCall.function.arguments)\n                    : null,\n        },\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = params.tools?.find((inputTool) => inputTool.function?.name === toolCall.function.name);\n    return isAutoParsableTool(inputTool) || inputTool?.function.strict || false;\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.response_format)) {\n        return true;\n    }\n    return (params.tools?.some((t) => isAutoParsableTool(t) || (t.type === 'function' && t.function.strict === true)) ?? false);\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _AbstractChatCompletionRunner_instances, _AbstractChatCompletionRunner_getFinalContent, _AbstractChatCompletionRunner_getFinalMessage, _AbstractChatCompletionRunner_getFinalFunctionCall, _AbstractChatCompletionRunner_getFinalFunctionCallResult, _AbstractChatCompletionRunner_calculateTotalUsage, _AbstractChatCompletionRunner_validateParams, _AbstractChatCompletionRunner_stringifyFunctionCallResult;\nimport { OpenAIError } from \"../error.mjs\";\nimport { isRunnableFunctionWithParse, } from \"./RunnableFunction.mjs\";\nimport { isAssistantMessage, isFunctionMessage, isToolMessage } from \"./chatCompletionUtils.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nimport { isAutoParsableTool, parseChatCompletion } from \"../lib/parser.mjs\";\nconst DEFAULT_MAX_CHAT_COMPLETIONS = 10;\nexport class AbstractChatCompletionRunner extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AbstractChatCompletionRunner_instances.add(this);\n        this._chatCompletions = [];\n        this.messages = [];\n    }\n    _addChatCompletion(chatCompletion) {\n        this._chatCompletions.push(chatCompletion);\n        this._emit('chatCompletion', chatCompletion);\n        const message = chatCompletion.choices[0]?.message;\n        if (message)\n            this._addMessage(message);\n        return chatCompletion;\n    }\n    _addMessage(message, emit = true) {\n        if (!('content' in message))\n            message.content = null;\n        this.messages.push(message);\n        if (emit) {\n            this._emit('message', message);\n            if ((isFunctionMessage(message) || isToolMessage(message)) && message.content) {\n                // Note, this assumes that {role: 'tool', content: …} is always the result of a call of tool of type=function.\n                this._emit('functionCallResult', message.content);\n            }\n            else if (isAssistantMessage(message) && message.function_call) {\n                this._emit('functionCall', message.function_call);\n            }\n            else if (isAssistantMessage(message) && message.tool_calls) {\n                for (const tool_call of message.tool_calls) {\n                    if (tool_call.type === 'function') {\n                        this._emit('functionCall', tool_call.function);\n                    }\n                }\n            }\n        }\n    }\n    /**\n     * @returns a promise that resolves with the final ChatCompletion, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletion.\n     */\n    async finalChatCompletion() {\n        await this.done();\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (!completion)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return completion;\n    }\n    /**\n     * @returns a promise that resolves with the content of the final ChatCompletionMessage, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalContent() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the the final assistant ChatCompletionMessage response,\n     * or rejects if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalMessage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n    }\n    /**\n     * @returns a promise that resolves with the content of the final FunctionCall, or rejects\n     * if an error occurred or the stream ended prematurely without producing a ChatCompletionMessage.\n     */\n    async finalFunctionCall() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n    }\n    async finalFunctionCallResult() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n    }\n    async totalUsage() {\n        await this.done();\n        return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this);\n    }\n    allChatCompletions() {\n        return [...this._chatCompletions];\n    }\n    _emitFinal() {\n        const completion = this._chatCompletions[this._chatCompletions.length - 1];\n        if (completion)\n            this._emit('finalChatCompletion', completion);\n        const finalMessage = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this);\n        if (finalMessage)\n            this._emit('finalMessage', finalMessage);\n        const finalContent = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalContent).call(this);\n        if (finalContent)\n            this._emit('finalContent', finalContent);\n        const finalFunctionCall = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCall).call(this);\n        if (finalFunctionCall)\n            this._emit('finalFunctionCall', finalFunctionCall);\n        const finalFunctionCallResult = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalFunctionCallResult).call(this);\n        if (finalFunctionCallResult != null)\n            this._emit('finalFunctionCallResult', finalFunctionCallResult);\n        if (this._chatCompletions.some((c) => c.usage)) {\n            this._emit('totalUsage', __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_calculateTotalUsage).call(this));\n        }\n    }\n    async _createChatCompletion(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_validateParams).call(this, params);\n        const chatCompletion = await client.chat.completions.create({ ...params, stream: false }, { ...options, signal: this.controller.signal });\n        this._connected();\n        return this._addChatCompletion(parseChatCompletion(chatCompletion, params));\n    }\n    async _runChatCompletion(client, params, options) {\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        return await this._createChatCompletion(client, params, options);\n    }\n    async _runFunctions(client, params, options) {\n        const role = 'function';\n        const { function_call = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof function_call !== 'string' && function_call?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        const functionsByName = {};\n        for (const f of params.functions) {\n            functionsByName[f.name || f.function.name] = f;\n        }\n        const functions = params.functions.map((f) => ({\n            name: f.name || f.function.name,\n            parameters: f.parameters,\n            description: f.description,\n        }));\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                function_call,\n                functions,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.function_call)\n                return;\n            const { name, arguments: args } = message.function_call;\n            const fn = functionsByName[name];\n            if (!fn) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. Available options are: ${functions\n                    .map((f) => JSON.stringify(f.name))\n                    .join(', ')}. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                const content = `Invalid function_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                this._addMessage({ role, name, content });\n                continue;\n            }\n            let parsed;\n            try {\n                parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n            }\n            catch (error) {\n                this._addMessage({\n                    role,\n                    name,\n                    content: error instanceof Error ? error.message : String(error),\n                });\n                continue;\n            }\n            // @ts-expect-error it can't rule out `never` type.\n            const rawContent = await fn.function(parsed, this);\n            const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n            this._addMessage({ role, name, content });\n            if (singleFunctionToCall)\n                return;\n        }\n    }\n    async _runTools(client, params, options) {\n        const role = 'tool';\n        const { tool_choice = 'auto', stream, ...restParams } = params;\n        const singleFunctionToCall = typeof tool_choice !== 'string' && tool_choice?.function?.name;\n        const { maxChatCompletions = DEFAULT_MAX_CHAT_COMPLETIONS } = options || {};\n        // TODO(someday): clean this logic up\n        const inputTools = params.tools.map((tool) => {\n            if (isAutoParsableTool(tool)) {\n                if (!tool.$callback) {\n                    throw new OpenAIError('Tool given to `.runTools()` that does not have an associated function');\n                }\n                return {\n                    type: 'function',\n                    function: {\n                        function: tool.$callback,\n                        name: tool.function.name,\n                        description: tool.function.description || '',\n                        parameters: tool.function.parameters,\n                        parse: tool.$parseRaw,\n                        strict: true,\n                    },\n                };\n            }\n            return tool;\n        });\n        const functionsByName = {};\n        for (const f of inputTools) {\n            if (f.type === 'function') {\n                functionsByName[f.function.name || f.function.function.name] = f.function;\n            }\n        }\n        const tools = 'tools' in params ?\n            inputTools.map((t) => t.type === 'function' ?\n                {\n                    type: 'function',\n                    function: {\n                        name: t.function.name || t.function.function.name,\n                        parameters: t.function.parameters,\n                        description: t.function.description,\n                        strict: t.function.strict,\n                    },\n                }\n                : t)\n            : undefined;\n        for (const message of params.messages) {\n            this._addMessage(message, false);\n        }\n        for (let i = 0; i < maxChatCompletions; ++i) {\n            const chatCompletion = await this._createChatCompletion(client, {\n                ...restParams,\n                tool_choice,\n                tools,\n                messages: [...this.messages],\n            }, options);\n            const message = chatCompletion.choices[0]?.message;\n            if (!message) {\n                throw new OpenAIError(`missing message in ChatCompletion response`);\n            }\n            if (!message.tool_calls?.length) {\n                return;\n            }\n            for (const tool_call of message.tool_calls) {\n                if (tool_call.type !== 'function')\n                    continue;\n                const tool_call_id = tool_call.id;\n                const { name, arguments: args } = tool_call.function;\n                const fn = functionsByName[name];\n                if (!fn) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. Available options are: ${Object.keys(functionsByName)\n                        .map((name) => JSON.stringify(name))\n                        .join(', ')}. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                else if (singleFunctionToCall && singleFunctionToCall !== name) {\n                    const content = `Invalid tool_call: ${JSON.stringify(name)}. ${JSON.stringify(singleFunctionToCall)} requested. Please try again`;\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                let parsed;\n                try {\n                    parsed = isRunnableFunctionWithParse(fn) ? await fn.parse(args) : args;\n                }\n                catch (error) {\n                    const content = error instanceof Error ? error.message : String(error);\n                    this._addMessage({ role, tool_call_id, content });\n                    continue;\n                }\n                // @ts-expect-error it can't rule out `never` type.\n                const rawContent = await fn.function(parsed, this);\n                const content = __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_stringifyFunctionCallResult).call(this, rawContent);\n                this._addMessage({ role, tool_call_id, content });\n                if (singleFunctionToCall) {\n                    return;\n                }\n            }\n        }\n        return;\n    }\n}\n_AbstractChatCompletionRunner_instances = new WeakSet(), _AbstractChatCompletionRunner_getFinalContent = function _AbstractChatCompletionRunner_getFinalContent() {\n    return __classPrivateFieldGet(this, _AbstractChatCompletionRunner_instances, \"m\", _AbstractChatCompletionRunner_getFinalMessage).call(this).content ?? null;\n}, _AbstractChatCompletionRunner_getFinalMessage = function _AbstractChatCompletionRunner_getFinalMessage() {\n    let i = this.messages.length;\n    while (i-- > 0) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message)) {\n            const { function_call, ...rest } = message;\n            // TODO: support audio here\n            const ret = {\n                ...rest,\n                content: message.content ?? null,\n                refusal: message.refusal ?? null,\n            };\n            if (function_call) {\n                ret.function_call = function_call;\n            }\n            return ret;\n        }\n    }\n    throw new OpenAIError('stream ended without producing a ChatCompletionMessage with role=assistant');\n}, _AbstractChatCompletionRunner_getFinalFunctionCall = function _AbstractChatCompletionRunner_getFinalFunctionCall() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isAssistantMessage(message) && message?.function_call) {\n            return message.function_call;\n        }\n        if (isAssistantMessage(message) && message?.tool_calls?.length) {\n            return message.tool_calls.at(-1)?.function;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_getFinalFunctionCallResult = function _AbstractChatCompletionRunner_getFinalFunctionCallResult() {\n    for (let i = this.messages.length - 1; i >= 0; i--) {\n        const message = this.messages[i];\n        if (isFunctionMessage(message) && message.content != null) {\n            return message.content;\n        }\n        if (isToolMessage(message) &&\n            message.content != null &&\n            typeof message.content === 'string' &&\n            this.messages.some((x) => x.role === 'assistant' &&\n                x.tool_calls?.some((y) => y.type === 'function' && y.id === message.tool_call_id))) {\n            return message.content;\n        }\n    }\n    return;\n}, _AbstractChatCompletionRunner_calculateTotalUsage = function _AbstractChatCompletionRunner_calculateTotalUsage() {\n    const total = {\n        completion_tokens: 0,\n        prompt_tokens: 0,\n        total_tokens: 0,\n    };\n    for (const { usage } of this._chatCompletions) {\n        if (usage) {\n            total.completion_tokens += usage.completion_tokens;\n            total.prompt_tokens += usage.prompt_tokens;\n            total.total_tokens += usage.total_tokens;\n        }\n    }\n    return total;\n}, _AbstractChatCompletionRunner_validateParams = function _AbstractChatCompletionRunner_validateParams(params) {\n    if (params.n != null && params.n > 1) {\n        throw new OpenAIError('ChatCompletion convenience helpers only support n=1 at this time. To use n>1, please use chat.completions.create() directly.');\n    }\n}, _AbstractChatCompletionRunner_stringifyFunctionCallResult = function _AbstractChatCompletionRunner_stringifyFunctionCallResult(rawContent) {\n    return (typeof rawContent === 'string' ? rawContent\n        : rawContent === undefined ? 'undefined'\n            : JSON.stringify(rawContent));\n};\n//# sourceMappingURL=AbstractChatCompletionRunner.mjs.map","import { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { isAssistantMessage } from \"./chatCompletionUtils.mjs\";\nexport class ChatCompletionRunner extends AbstractChatCompletionRunner {\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionRunner();\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n    _addMessage(message, emit = true) {\n        super._addMessage(message, emit);\n        if (isAssistantMessage(message) && message.content) {\n            this._emit('content', message.content);\n        }\n    }\n}\n//# sourceMappingURL=ChatCompletionRunner.mjs.map","const STR = 0b000000001;\nconst NUM = 0b000000010;\nconst ARR = 0b000000100;\nconst OBJ = 0b000001000;\nconst NULL = 0b000010000;\nconst BOOL = 0b000100000;\nconst NAN = 0b001000000;\nconst INFINITY = 0b010000000;\nconst MINUS_INFINITY = 0b100000000;\nconst INF = INFINITY | MINUS_INFINITY;\nconst SPECIAL = NULL | BOOL | INF | NAN;\nconst ATOM = STR | NUM | SPECIAL;\nconst COLLECTION = ARR | OBJ;\nconst ALL = ATOM | COLLECTION;\nconst Allow = {\n    STR,\n    NUM,\n    ARR,\n    OBJ,\n    NULL,\n    BOOL,\n    NAN,\n    INFINITY,\n    MINUS_INFINITY,\n    INF,\n    SPECIAL,\n    ATOM,\n    COLLECTION,\n    ALL,\n};\n// The JSON string segment was unable to be parsed completely\nclass PartialJSON extends Error {\n}\nclass MalformedJSON extends Error {\n}\n/**\n * Parse incomplete JSON\n * @param {string} jsonString Partial JSON to be parsed\n * @param {number} allowPartial Specify what types are allowed to be partial, see {@link Allow} for details\n * @returns The parsed JSON\n * @throws {PartialJSON} If the JSON is incomplete (related to the `allow` parameter)\n * @throws {MalformedJSON} If the JSON is malformed\n */\nfunction parseJSON(jsonString, allowPartial = Allow.ALL) {\n    if (typeof jsonString !== 'string') {\n        throw new TypeError(`expecting str, got ${typeof jsonString}`);\n    }\n    if (!jsonString.trim()) {\n        throw new Error(`${jsonString} is empty`);\n    }\n    return _parseJSON(jsonString.trim(), allowPartial);\n}\nconst _parseJSON = (jsonString, allow) => {\n    const length = jsonString.length;\n    let index = 0;\n    const markPartialJSON = (msg) => {\n        throw new PartialJSON(`${msg} at position ${index}`);\n    };\n    const throwMalformedError = (msg) => {\n        throw new MalformedJSON(`${msg} at position ${index}`);\n    };\n    const parseAny = () => {\n        skipBlank();\n        if (index >= length)\n            markPartialJSON('Unexpected end of input');\n        if (jsonString[index] === '\"')\n            return parseStr();\n        if (jsonString[index] === '{')\n            return parseObj();\n        if (jsonString[index] === '[')\n            return parseArr();\n        if (jsonString.substring(index, index + 4) === 'null' ||\n            (Allow.NULL & allow && length - index < 4 && 'null'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return null;\n        }\n        if (jsonString.substring(index, index + 4) === 'true' ||\n            (Allow.BOOL & allow && length - index < 4 && 'true'.startsWith(jsonString.substring(index)))) {\n            index += 4;\n            return true;\n        }\n        if (jsonString.substring(index, index + 5) === 'false' ||\n            (Allow.BOOL & allow && length - index < 5 && 'false'.startsWith(jsonString.substring(index)))) {\n            index += 5;\n            return false;\n        }\n        if (jsonString.substring(index, index + 8) === 'Infinity' ||\n            (Allow.INFINITY & allow && length - index < 8 && 'Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 8;\n            return Infinity;\n        }\n        if (jsonString.substring(index, index + 9) === '-Infinity' ||\n            (Allow.MINUS_INFINITY & allow &&\n                1 < length - index &&\n                length - index < 9 &&\n                '-Infinity'.startsWith(jsonString.substring(index)))) {\n            index += 9;\n            return -Infinity;\n        }\n        if (jsonString.substring(index, index + 3) === 'NaN' ||\n            (Allow.NAN & allow && length - index < 3 && 'NaN'.startsWith(jsonString.substring(index)))) {\n            index += 3;\n            return NaN;\n        }\n        return parseNum();\n    };\n    const parseStr = () => {\n        const start = index;\n        let escape = false;\n        index++; // skip initial quote\n        while (index < length && (jsonString[index] !== '\"' || (escape && jsonString[index - 1] === '\\\\'))) {\n            escape = jsonString[index] === '\\\\' ? !escape : false;\n            index++;\n        }\n        if (jsonString.charAt(index) == '\"') {\n            try {\n                return JSON.parse(jsonString.substring(start, ++index - Number(escape)));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n        else if (Allow.STR & allow) {\n            try {\n                return JSON.parse(jsonString.substring(start, index - Number(escape)) + '\"');\n            }\n            catch (e) {\n                // SyntaxError: Invalid escape sequence\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('\\\\')) + '\"');\n            }\n        }\n        markPartialJSON('Unterminated string literal');\n    };\n    const parseObj = () => {\n        index++; // skip initial brace\n        skipBlank();\n        const obj = {};\n        try {\n            while (jsonString[index] !== '}') {\n                skipBlank();\n                if (index >= length && Allow.OBJ & allow)\n                    return obj;\n                const key = parseStr();\n                skipBlank();\n                index++; // skip colon\n                try {\n                    const value = parseAny();\n                    Object.defineProperty(obj, key, { value, writable: true, enumerable: true, configurable: true });\n                }\n                catch (e) {\n                    if (Allow.OBJ & allow)\n                        return obj;\n                    else\n                        throw e;\n                }\n                skipBlank();\n                if (jsonString[index] === ',')\n                    index++; // skip comma\n            }\n        }\n        catch (e) {\n            if (Allow.OBJ & allow)\n                return obj;\n            else\n                markPartialJSON(\"Expected '}' at end of object\");\n        }\n        index++; // skip final brace\n        return obj;\n    };\n    const parseArr = () => {\n        index++; // skip initial bracket\n        const arr = [];\n        try {\n            while (jsonString[index] !== ']') {\n                arr.push(parseAny());\n                skipBlank();\n                if (jsonString[index] === ',') {\n                    index++; // skip comma\n                }\n            }\n        }\n        catch (e) {\n            if (Allow.ARR & allow) {\n                return arr;\n            }\n            markPartialJSON(\"Expected ']' at end of array\");\n        }\n        index++; // skip final bracket\n        return arr;\n    };\n    const parseNum = () => {\n        if (index === 0) {\n            if (jsonString === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString);\n            }\n            catch (e) {\n                if (Allow.NUM & allow) {\n                    try {\n                        if ('.' === jsonString[jsonString.length - 1])\n                            return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('.')));\n                        return JSON.parse(jsonString.substring(0, jsonString.lastIndexOf('e')));\n                    }\n                    catch (e) { }\n                }\n                throwMalformedError(String(e));\n            }\n        }\n        const start = index;\n        if (jsonString[index] === '-')\n            index++;\n        while (jsonString[index] && !',]}'.includes(jsonString[index]))\n            index++;\n        if (index == length && !(Allow.NUM & allow))\n            markPartialJSON('Unterminated number literal');\n        try {\n            return JSON.parse(jsonString.substring(start, index));\n        }\n        catch (e) {\n            if (jsonString.substring(start, index) === '-' && Allow.NUM & allow)\n                markPartialJSON(\"Not sure what '-' is\");\n            try {\n                return JSON.parse(jsonString.substring(start, jsonString.lastIndexOf('e')));\n            }\n            catch (e) {\n                throwMalformedError(String(e));\n            }\n        }\n    };\n    const skipBlank = () => {\n        while (index < length && ' \\n\\r\\t'.includes(jsonString[index])) {\n            index++;\n        }\n    };\n    return parseAny();\n};\n// using this function with malformed JSON is undefined behavior\nconst partialParse = (input) => parseJSON(input, Allow.ALL ^ Allow.NUM);\nexport { partialParse, PartialJSON, MalformedJSON };\n//# sourceMappingURL=parser.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ChatCompletionStream_instances, _ChatCompletionStream_params, _ChatCompletionStream_choiceEventStates, _ChatCompletionStream_currentChatCompletionSnapshot, _ChatCompletionStream_beginRequest, _ChatCompletionStream_getChoiceEventState, _ChatCompletionStream_addChunk, _ChatCompletionStream_emitToolCallDoneEvent, _ChatCompletionStream_emitContentDoneEvents, _ChatCompletionStream_endRequest, _ChatCompletionStream_getAutoParseableResponseFormat, _ChatCompletionStream_accumulateChatCompletion;\nimport { OpenAIError, APIUserAbortError, LengthFinishReasonError, ContentFilterFinishReasonError, } from \"../error.mjs\";\nimport { AbstractChatCompletionRunner, } from \"./AbstractChatCompletionRunner.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { hasAutoParseableInput, isAutoParsableResponseFormat, isAutoParsableTool, maybeParseChatCompletion, shouldParseToolCall, } from \"../lib/parser.mjs\";\nimport { partialParse } from \"../_vendor/partial-json-parser/parser.mjs\";\nexport class ChatCompletionStream extends AbstractChatCompletionRunner {\n    constructor(params) {\n        super();\n        _ChatCompletionStream_instances.add(this);\n        _ChatCompletionStream_params.set(this, void 0);\n        _ChatCompletionStream_choiceEventStates.set(this, void 0);\n        _ChatCompletionStream_currentChatCompletionSnapshot.set(this, void 0);\n        __classPrivateFieldSet(this, _ChatCompletionStream_params, params, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n    }\n    get currentChatCompletionSnapshot() {\n        return __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n    }\n    /**\n     * Intended for use on the frontend, consuming a stream produced with\n     * `.toReadableStream()` on the backend.\n     *\n     * Note that messages sent to the model do not appear in `.on('message')`\n     * in this context.\n     */\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStream(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    static createChatCompletion(client, params, options) {\n        const runner = new ChatCompletionStream(params);\n        runner._run(() => runner._runChatCompletion(client, { ...params, stream: true }, { ...options, headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' } }));\n        return runner;\n    }\n    async _createChatCompletion(client, params, options) {\n        super._createChatCompletion;\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        const stream = await client.chat.completions.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const chunk of stream) {\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_beginRequest).call(this);\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        let chatId;\n        for await (const chunk of stream) {\n            if (chatId && chatId !== chunk.id) {\n                // A new request has been made.\n                this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n            }\n            __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_addChunk).call(this, chunk);\n            chatId = chunk.id;\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addChatCompletion(__classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_endRequest).call(this));\n    }\n    [(_ChatCompletionStream_params = new WeakMap(), _ChatCompletionStream_choiceEventStates = new WeakMap(), _ChatCompletionStream_currentChatCompletionSnapshot = new WeakMap(), _ChatCompletionStream_instances = new WeakSet(), _ChatCompletionStream_beginRequest = function _ChatCompletionStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n    }, _ChatCompletionStream_getChoiceEventState = function _ChatCompletionStream_getChoiceEventState(choice) {\n        let state = __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index];\n        if (state) {\n            return state;\n        }\n        state = {\n            content_done: false,\n            refusal_done: false,\n            logprobs_content_done: false,\n            logprobs_refusal_done: false,\n            done_tool_calls: new Set(),\n            current_tool_call_index: null,\n        };\n        __classPrivateFieldGet(this, _ChatCompletionStream_choiceEventStates, \"f\")[choice.index] = state;\n        return state;\n    }, _ChatCompletionStream_addChunk = function _ChatCompletionStream_addChunk(chunk) {\n        if (this.ended)\n            return;\n        const completion = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_accumulateChatCompletion).call(this, chunk);\n        this._emit('chunk', chunk, completion);\n        for (const choice of chunk.choices) {\n            const choiceSnapshot = completion.choices[choice.index];\n            if (choice.delta.content != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.content) {\n                this._emit('content', choice.delta.content, choiceSnapshot.message.content);\n                this._emit('content.delta', {\n                    delta: choice.delta.content,\n                    snapshot: choiceSnapshot.message.content,\n                    parsed: choiceSnapshot.message.parsed,\n                });\n            }\n            if (choice.delta.refusal != null &&\n                choiceSnapshot.message?.role === 'assistant' &&\n                choiceSnapshot.message?.refusal) {\n                this._emit('refusal.delta', {\n                    delta: choice.delta.refusal,\n                    snapshot: choiceSnapshot.message.refusal,\n                });\n            }\n            if (choice.logprobs?.content != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.content.delta', {\n                    content: choice.logprobs?.content,\n                    snapshot: choiceSnapshot.logprobs?.content ?? [],\n                });\n            }\n            if (choice.logprobs?.refusal != null && choiceSnapshot.message?.role === 'assistant') {\n                this._emit('logprobs.refusal.delta', {\n                    refusal: choice.logprobs?.refusal,\n                    snapshot: choiceSnapshot.logprobs?.refusal ?? [],\n                });\n            }\n            const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n            if (choiceSnapshot.finish_reason) {\n                __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                if (state.current_tool_call_index != null) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                }\n            }\n            for (const toolCall of choice.delta.tool_calls ?? []) {\n                if (state.current_tool_call_index !== toolCall.index) {\n                    __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitContentDoneEvents).call(this, choiceSnapshot);\n                    // new tool call started, the previous one is done\n                    if (state.current_tool_call_index != null) {\n                        __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_emitToolCallDoneEvent).call(this, choiceSnapshot, state.current_tool_call_index);\n                    }\n                }\n                state.current_tool_call_index = toolCall.index;\n            }\n            for (const toolCallDelta of choice.delta.tool_calls ?? []) {\n                const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallDelta.index];\n                if (!toolCallSnapshot?.type) {\n                    continue;\n                }\n                if (toolCallSnapshot?.type === 'function') {\n                    this._emit('tool_calls.function.arguments.delta', {\n                        name: toolCallSnapshot.function?.name,\n                        index: toolCallDelta.index,\n                        arguments: toolCallSnapshot.function.arguments,\n                        parsed_arguments: toolCallSnapshot.function.parsed_arguments,\n                        arguments_delta: toolCallDelta.function?.arguments ?? '',\n                    });\n                }\n                else {\n                    assertNever(toolCallSnapshot?.type);\n                }\n            }\n        }\n    }, _ChatCompletionStream_emitToolCallDoneEvent = function _ChatCompletionStream_emitToolCallDoneEvent(choiceSnapshot, toolCallIndex) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (state.done_tool_calls.has(toolCallIndex)) {\n            // we've already fired the done event\n            return;\n        }\n        const toolCallSnapshot = choiceSnapshot.message.tool_calls?.[toolCallIndex];\n        if (!toolCallSnapshot) {\n            throw new Error('no tool call snapshot');\n        }\n        if (!toolCallSnapshot.type) {\n            throw new Error('tool call snapshot missing `type`');\n        }\n        if (toolCallSnapshot.type === 'function') {\n            const inputTool = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.tools?.find((tool) => tool.type === 'function' && tool.function.name === toolCallSnapshot.function.name);\n            this._emit('tool_calls.function.arguments.done', {\n                name: toolCallSnapshot.function.name,\n                index: toolCallIndex,\n                arguments: toolCallSnapshot.function.arguments,\n                parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCallSnapshot.function.arguments)\n                    : inputTool?.function.strict ? JSON.parse(toolCallSnapshot.function.arguments)\n                        : null,\n            });\n        }\n        else {\n            assertNever(toolCallSnapshot.type);\n        }\n    }, _ChatCompletionStream_emitContentDoneEvents = function _ChatCompletionStream_emitContentDoneEvents(choiceSnapshot) {\n        const state = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getChoiceEventState).call(this, choiceSnapshot);\n        if (choiceSnapshot.message.content && !state.content_done) {\n            state.content_done = true;\n            const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this);\n            this._emit('content.done', {\n                content: choiceSnapshot.message.content,\n                parsed: responseFormat ? responseFormat.$parseRaw(choiceSnapshot.message.content) : null,\n            });\n        }\n        if (choiceSnapshot.message.refusal && !state.refusal_done) {\n            state.refusal_done = true;\n            this._emit('refusal.done', { refusal: choiceSnapshot.message.refusal });\n        }\n        if (choiceSnapshot.logprobs?.content && !state.logprobs_content_done) {\n            state.logprobs_content_done = true;\n            this._emit('logprobs.content.done', { content: choiceSnapshot.logprobs.content });\n        }\n        if (choiceSnapshot.logprobs?.refusal && !state.logprobs_refusal_done) {\n            state.logprobs_refusal_done = true;\n            this._emit('logprobs.refusal.done', { refusal: choiceSnapshot.logprobs.refusal });\n        }\n    }, _ChatCompletionStream_endRequest = function _ChatCompletionStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any chunks`);\n        }\n        __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, undefined, \"f\");\n        __classPrivateFieldSet(this, _ChatCompletionStream_choiceEventStates, [], \"f\");\n        return finalizeChatCompletion(snapshot, __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"));\n    }, _ChatCompletionStream_getAutoParseableResponseFormat = function _ChatCompletionStream_getAutoParseableResponseFormat() {\n        const responseFormat = __classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\")?.response_format;\n        if (isAutoParsableResponseFormat(responseFormat)) {\n            return responseFormat;\n        }\n        return null;\n    }, _ChatCompletionStream_accumulateChatCompletion = function _ChatCompletionStream_accumulateChatCompletion(chunk) {\n        var _a, _b, _c, _d;\n        let snapshot = __classPrivateFieldGet(this, _ChatCompletionStream_currentChatCompletionSnapshot, \"f\");\n        const { choices, ...rest } = chunk;\n        if (!snapshot) {\n            snapshot = __classPrivateFieldSet(this, _ChatCompletionStream_currentChatCompletionSnapshot, {\n                ...rest,\n                choices: [],\n            }, \"f\");\n        }\n        else {\n            Object.assign(snapshot, rest);\n        }\n        for (const { delta, finish_reason, index, logprobs = null, ...other } of chunk.choices) {\n            let choice = snapshot.choices[index];\n            if (!choice) {\n                choice = snapshot.choices[index] = { finish_reason, index, message: {}, logprobs, ...other };\n            }\n            if (logprobs) {\n                if (!choice.logprobs) {\n                    choice.logprobs = Object.assign({}, logprobs);\n                }\n                else {\n                    const { content, refusal, ...rest } = logprobs;\n                    assertIsEmpty(rest);\n                    Object.assign(choice.logprobs, rest);\n                    if (content) {\n                        (_a = choice.logprobs).content ?? (_a.content = []);\n                        choice.logprobs.content.push(...content);\n                    }\n                    if (refusal) {\n                        (_b = choice.logprobs).refusal ?? (_b.refusal = []);\n                        choice.logprobs.refusal.push(...refusal);\n                    }\n                }\n            }\n            if (finish_reason) {\n                choice.finish_reason = finish_reason;\n                if (__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\") && hasAutoParseableInput(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"))) {\n                    if (finish_reason === 'length') {\n                        throw new LengthFinishReasonError();\n                    }\n                    if (finish_reason === 'content_filter') {\n                        throw new ContentFilterFinishReasonError();\n                    }\n                }\n            }\n            Object.assign(choice, other);\n            if (!delta)\n                continue; // Shouldn't happen; just in case.\n            const { content, refusal, function_call, role, tool_calls, ...rest } = delta;\n            assertIsEmpty(rest);\n            Object.assign(choice.message, rest);\n            if (refusal) {\n                choice.message.refusal = (choice.message.refusal || '') + refusal;\n            }\n            if (role)\n                choice.message.role = role;\n            if (function_call) {\n                if (!choice.message.function_call) {\n                    choice.message.function_call = function_call;\n                }\n                else {\n                    if (function_call.name)\n                        choice.message.function_call.name = function_call.name;\n                    if (function_call.arguments) {\n                        (_c = choice.message.function_call).arguments ?? (_c.arguments = '');\n                        choice.message.function_call.arguments += function_call.arguments;\n                    }\n                }\n            }\n            if (content) {\n                choice.message.content = (choice.message.content || '') + content;\n                if (!choice.message.refusal && __classPrivateFieldGet(this, _ChatCompletionStream_instances, \"m\", _ChatCompletionStream_getAutoParseableResponseFormat).call(this)) {\n                    choice.message.parsed = partialParse(choice.message.content);\n                }\n            }\n            if (tool_calls) {\n                if (!choice.message.tool_calls)\n                    choice.message.tool_calls = [];\n                for (const { index, id, type, function: fn, ...rest } of tool_calls) {\n                    const tool_call = ((_d = choice.message.tool_calls)[index] ?? (_d[index] = {}));\n                    Object.assign(tool_call, rest);\n                    if (id)\n                        tool_call.id = id;\n                    if (type)\n                        tool_call.type = type;\n                    if (fn)\n                        tool_call.function ?? (tool_call.function = { name: fn.name ?? '', arguments: '' });\n                    if (fn?.name)\n                        tool_call.function.name = fn.name;\n                    if (fn?.arguments) {\n                        tool_call.function.arguments += fn.arguments;\n                        if (shouldParseToolCall(__classPrivateFieldGet(this, _ChatCompletionStream_params, \"f\"), tool_call)) {\n                            tool_call.function.parsed_arguments = partialParse(tool_call.function.arguments);\n                        }\n                    }\n                }\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('chunk', (chunk) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(chunk);\n            }\n            else {\n                pushQueue.push(chunk);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n}\nfunction finalizeChatCompletion(snapshot, params) {\n    const { id, choices, created, model, system_fingerprint, ...rest } = snapshot;\n    const completion = {\n        ...rest,\n        id,\n        choices: choices.map(({ message, finish_reason, index, logprobs, ...choiceRest }) => {\n            if (!finish_reason) {\n                throw new OpenAIError(`missing finish_reason for choice ${index}`);\n            }\n            const { content = null, function_call, tool_calls, ...messageRest } = message;\n            const role = message.role; // this is what we expect; in theory it could be different which would make our types a slight lie but would be fine.\n            if (!role) {\n                throw new OpenAIError(`missing role for choice ${index}`);\n            }\n            if (function_call) {\n                const { arguments: args, name } = function_call;\n                if (args == null) {\n                    throw new OpenAIError(`missing function_call.arguments for choice ${index}`);\n                }\n                if (!name) {\n                    throw new OpenAIError(`missing function_call.name for choice ${index}`);\n                }\n                return {\n                    ...choiceRest,\n                    message: {\n                        content,\n                        function_call: { arguments: args, name },\n                        role,\n                        refusal: message.refusal ?? null,\n                    },\n                    finish_reason,\n                    index,\n                    logprobs,\n                };\n            }\n            if (tool_calls) {\n                return {\n                    ...choiceRest,\n                    index,\n                    finish_reason,\n                    logprobs,\n                    message: {\n                        ...messageRest,\n                        role,\n                        content,\n                        refusal: message.refusal ?? null,\n                        tool_calls: tool_calls.map((tool_call, i) => {\n                            const { function: fn, type, id, ...toolRest } = tool_call;\n                            const { arguments: args, name, ...fnRest } = fn || {};\n                            if (id == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].id\\n${str(snapshot)}`);\n                            }\n                            if (type == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].type\\n${str(snapshot)}`);\n                            }\n                            if (name == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.name\\n${str(snapshot)}`);\n                            }\n                            if (args == null) {\n                                throw new OpenAIError(`missing choices[${index}].tool_calls[${i}].function.arguments\\n${str(snapshot)}`);\n                            }\n                            return { ...toolRest, id, type, function: { ...fnRest, name, arguments: args } };\n                        }),\n                    },\n                };\n            }\n            return {\n                ...choiceRest,\n                message: { ...messageRest, content, role, refusal: message.refusal ?? null },\n                finish_reason,\n                index,\n                logprobs,\n            };\n        }),\n        created,\n        model,\n        object: 'chat.completion',\n        ...(system_fingerprint ? { system_fingerprint } : {}),\n    };\n    return maybeParseChatCompletion(completion, params);\n}\nfunction str(x) {\n    return JSON.stringify(x);\n}\n/**\n * Ensures the given argument is an empty object, useful for\n * asserting that all known properties on an object have been\n * destructured.\n */\nfunction assertIsEmpty(obj) {\n    return;\n}\nfunction assertNever(_x) { }\n//# sourceMappingURL=ChatCompletionStream.mjs.map","import { ChatCompletionStream } from \"./ChatCompletionStream.mjs\";\nexport class ChatCompletionStreamingRunner extends ChatCompletionStream {\n    static fromReadableStream(stream) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    /** @deprecated - please use `runTools` instead. */\n    static runFunctions(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(null);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runFunctions' },\n        };\n        runner._run(() => runner._runFunctions(client, params, opts));\n        return runner;\n    }\n    static runTools(client, params, options) {\n        const runner = new ChatCompletionStreamingRunner(\n        // @ts-expect-error TODO these types are incompatible\n        params);\n        const opts = {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'runTools' },\n        };\n        runner._run(() => runner._runTools(client, params, opts));\n        return runner;\n    }\n}\n//# sourceMappingURL=ChatCompletionStreamingRunner.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { ChatCompletionRunner } from \"../../../lib/ChatCompletionRunner.mjs\";\nimport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nimport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nimport { parseChatCompletion, validateInputTools } from \"../../../lib/parser.mjs\";\nexport { ChatCompletionStreamingRunner, } from \"../../../lib/ChatCompletionStreamingRunner.mjs\";\nexport { ParsingFunction, ParsingToolFunction, } from \"../../../lib/RunnableFunction.mjs\";\nexport { ChatCompletionStream } from \"../../../lib/ChatCompletionStream.mjs\";\nexport { ChatCompletionRunner, } from \"../../../lib/ChatCompletionRunner.mjs\";\nexport class Completions extends APIResource {\n    parse(body, options) {\n        validateInputTools(body.tools);\n        return this._client.chat.completions\n            .create(body, {\n            ...options,\n            headers: {\n                ...options?.headers,\n                'X-Stainless-Helper-Method': 'beta.chat.completions.parse',\n            },\n        })\n            ._thenUnwrap((completion) => parseChatCompletion(completion, body));\n    }\n    runFunctions(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runFunctions(this._client, body, options);\n        }\n        return ChatCompletionRunner.runFunctions(this._client, body, options);\n    }\n    runTools(body, options) {\n        if (body.stream) {\n            return ChatCompletionStreamingRunner.runTools(this._client, body, options);\n        }\n        return ChatCompletionRunner.runTools(this._client, body, options);\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ChatCompletionStream.createChatCompletion(this._client, body, options);\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as CompletionsAPI from \"./completions.mjs\";\nexport class Chat extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.completions = new CompletionsAPI.Completions(this._client);\n    }\n}\n(function (Chat) {\n    Chat.Completions = CompletionsAPI.Completions;\n})(Chat || (Chat = {}));\n//# sourceMappingURL=chat.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nexport class Sessions extends APIResource {\n    /**\n     * Create an ephemeral API token for use in client-side applications with the\n     * Realtime API. Can be configured with the same session parameters as the\n     * `session.update` client event.\n     *\n     * It responds with a session object, plus a `client_secret` key which contains a\n     * usable ephemeral API token that can be used to authenticate browser clients for\n     * the Realtime API.\n     */\n    create(body, options) {\n        return this._client.post('/realtime/sessions', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\n//# sourceMappingURL=sessions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport * as SessionsAPI from \"./sessions.mjs\";\nimport { Sessions, } from \"./sessions.mjs\";\nexport class Realtime extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.sessions = new SessionsAPI.Sessions(this._client);\n    }\n}\nRealtime.Sessions = Sessions;\n//# sourceMappingURL=realtime.mjs.map","var __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar _AssistantStream_instances, _AssistantStream_events, _AssistantStream_runStepSnapshots, _AssistantStream_messageSnapshots, _AssistantStream_messageSnapshot, _AssistantStream_finalRun, _AssistantStream_currentContentIndex, _AssistantStream_currentContent, _AssistantStream_currentToolCallIndex, _AssistantStream_currentToolCall, _AssistantStream_currentEvent, _AssistantStream_currentRunSnapshot, _AssistantStream_currentRunStepSnapshot, _AssistantStream_addEvent, _AssistantStream_endRequest, _AssistantStream_handleMessage, _AssistantStream_handleRunStep, _AssistantStream_handleEvent, _AssistantStream_accumulateRunStep, _AssistantStream_accumulateMessage, _AssistantStream_accumulateContent, _AssistantStream_handleRun;\nimport * as Core from \"../core.mjs\";\nimport { Stream } from \"../streaming.mjs\";\nimport { APIUserAbortError, OpenAIError } from \"../error.mjs\";\nimport { EventStream } from \"./EventStream.mjs\";\nexport class AssistantStream extends EventStream {\n    constructor() {\n        super(...arguments);\n        _AssistantStream_instances.add(this);\n        //Track all events in a single list for reference\n        _AssistantStream_events.set(this, []);\n        //Used to accumulate deltas\n        //We are accumulating many types so the value here is not strict\n        _AssistantStream_runStepSnapshots.set(this, {});\n        _AssistantStream_messageSnapshots.set(this, {});\n        _AssistantStream_messageSnapshot.set(this, void 0);\n        _AssistantStream_finalRun.set(this, void 0);\n        _AssistantStream_currentContentIndex.set(this, void 0);\n        _AssistantStream_currentContent.set(this, void 0);\n        _AssistantStream_currentToolCallIndex.set(this, void 0);\n        _AssistantStream_currentToolCall.set(this, void 0);\n        //For current snapshot methods\n        _AssistantStream_currentEvent.set(this, void 0);\n        _AssistantStream_currentRunSnapshot.set(this, void 0);\n        _AssistantStream_currentRunStepSnapshot.set(this, void 0);\n    }\n    [(_AssistantStream_events = new WeakMap(), _AssistantStream_runStepSnapshots = new WeakMap(), _AssistantStream_messageSnapshots = new WeakMap(), _AssistantStream_messageSnapshot = new WeakMap(), _AssistantStream_finalRun = new WeakMap(), _AssistantStream_currentContentIndex = new WeakMap(), _AssistantStream_currentContent = new WeakMap(), _AssistantStream_currentToolCallIndex = new WeakMap(), _AssistantStream_currentToolCall = new WeakMap(), _AssistantStream_currentEvent = new WeakMap(), _AssistantStream_currentRunSnapshot = new WeakMap(), _AssistantStream_currentRunStepSnapshot = new WeakMap(), _AssistantStream_instances = new WeakSet(), Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        //Catch all for passing along all events\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((chunk) => (chunk ? { value: chunk, done: false } : { value: undefined, done: true }));\n                }\n                const chunk = pushQueue.shift();\n                return { value: chunk, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    static fromReadableStream(stream) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._fromReadableStream(stream));\n        return runner;\n    }\n    async _fromReadableStream(readableStream, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        this._connected();\n        const stream = Stream.fromReadableStream(readableStream, this.controller);\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    toReadableStream() {\n        const stream = new Stream(this[Symbol.asyncIterator].bind(this), this.controller);\n        return stream.toReadableStream();\n    }\n    static createToolAssistantStream(threadId, runId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runToolAssistantStream(threadId, runId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createToolAssistantStream(run, threadId, runId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.submitToolOutputs(threadId, runId, body, {\n            ...options,\n            signal: this.controller.signal,\n        });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static createThreadAssistantStream(params, thread, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._threadAssistantStream(params, thread, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    static createAssistantStream(threadId, runs, params, options) {\n        const runner = new AssistantStream();\n        runner._run(() => runner._runAssistantStream(threadId, runs, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    currentEvent() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentEvent, \"f\");\n    }\n    currentRun() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunSnapshot, \"f\");\n    }\n    currentMessageSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\");\n    }\n    currentRunStepSnapshot() {\n        return __classPrivateFieldGet(this, _AssistantStream_currentRunStepSnapshot, \"f\");\n    }\n    async finalRunSteps() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\"));\n    }\n    async finalMessages() {\n        await this.done();\n        return Object.values(__classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\"));\n    }\n    async finalRun() {\n        await this.done();\n        if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n            throw Error('Final run was not received.');\n        return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n    }\n    async _createThreadAssistantStream(thread, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await thread.createAndRun(body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    async _createAssistantStream(run, threadId, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        const body = { ...params, stream: true };\n        const stream = await run.create(threadId, body, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return this._addRun(__classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_endRequest).call(this));\n    }\n    static accumulateDelta(acc, delta) {\n        for (const [key, deltaValue] of Object.entries(delta)) {\n            if (!acc.hasOwnProperty(key)) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            let accValue = acc[key];\n            if (accValue === null || accValue === undefined) {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // We don't accumulate these special properties\n            if (key === 'index' || key === 'type') {\n                acc[key] = deltaValue;\n                continue;\n            }\n            // Type-specific accumulation logic\n            if (typeof accValue === 'string' && typeof deltaValue === 'string') {\n                accValue += deltaValue;\n            }\n            else if (typeof accValue === 'number' && typeof deltaValue === 'number') {\n                accValue += deltaValue;\n            }\n            else if (Core.isObj(accValue) && Core.isObj(deltaValue)) {\n                accValue = this.accumulateDelta(accValue, deltaValue);\n            }\n            else if (Array.isArray(accValue) && Array.isArray(deltaValue)) {\n                if (accValue.every((x) => typeof x === 'string' || typeof x === 'number')) {\n                    accValue.push(...deltaValue); // Use spread syntax for efficient addition\n                    continue;\n                }\n                for (const deltaEntry of deltaValue) {\n                    if (!Core.isObj(deltaEntry)) {\n                        throw new Error(`Expected array delta entry to be an object but got: ${deltaEntry}`);\n                    }\n                    const index = deltaEntry['index'];\n                    if (index == null) {\n                        console.error(deltaEntry);\n                        throw new Error('Expected array delta entry to have an `index` property');\n                    }\n                    if (typeof index !== 'number') {\n                        throw new Error(`Expected array delta entry \\`index\\` property to be a number but got ${index}`);\n                    }\n                    const accEntry = accValue[index];\n                    if (accEntry == null) {\n                        accValue.push(deltaEntry);\n                    }\n                    else {\n                        accValue[index] = this.accumulateDelta(accEntry, deltaEntry);\n                    }\n                }\n                continue;\n            }\n            else {\n                throw Error(`Unhandled record type: ${key}, deltaValue: ${deltaValue}, accValue: ${accValue}`);\n            }\n            acc[key] = accValue;\n        }\n        return acc;\n    }\n    _addRun(run) {\n        return run;\n    }\n    async _threadAssistantStream(params, thread, options) {\n        return await this._createThreadAssistantStream(thread, params, options);\n    }\n    async _runAssistantStream(threadId, runs, params, options) {\n        return await this._createAssistantStream(runs, threadId, params, options);\n    }\n    async _runToolAssistantStream(threadId, runId, runs, params, options) {\n        return await this._createToolAssistantStream(runs, threadId, runId, params, options);\n    }\n}\n_AssistantStream_addEvent = function _AssistantStream_addEvent(event) {\n    if (this.ended)\n        return;\n    __classPrivateFieldSet(this, _AssistantStream_currentEvent, event, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleEvent).call(this, event);\n    switch (event.event) {\n        case 'thread.created':\n            //No action on this event.\n            break;\n        case 'thread.run.created':\n        case 'thread.run.queued':\n        case 'thread.run.in_progress':\n        case 'thread.run.requires_action':\n        case 'thread.run.completed':\n        case 'thread.run.incomplete':\n        case 'thread.run.failed':\n        case 'thread.run.cancelling':\n        case 'thread.run.cancelled':\n        case 'thread.run.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRun).call(this, event);\n            break;\n        case 'thread.run.step.created':\n        case 'thread.run.step.in_progress':\n        case 'thread.run.step.delta':\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleRunStep).call(this, event);\n            break;\n        case 'thread.message.created':\n        case 'thread.message.in_progress':\n        case 'thread.message.delta':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_handleMessage).call(this, event);\n            break;\n        case 'error':\n            //This is included for completeness, but errors are processed in the SSE event processing so this should not occur\n            throw new Error('Encountered an error event in event processing - errors should be processed earlier');\n        default:\n            assertNever(event);\n    }\n}, _AssistantStream_endRequest = function _AssistantStream_endRequest() {\n    if (this.ended) {\n        throw new OpenAIError(`stream has ended, this shouldn't happen`);\n    }\n    if (!__classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\"))\n        throw Error('Final run has not been received');\n    return __classPrivateFieldGet(this, _AssistantStream_finalRun, \"f\");\n}, _AssistantStream_handleMessage = function _AssistantStream_handleMessage(event) {\n    const [accumulatedMessage, newContent] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateMessage).call(this, event, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n    __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, accumulatedMessage, \"f\");\n    __classPrivateFieldGet(this, _AssistantStream_messageSnapshots, \"f\")[accumulatedMessage.id] = accumulatedMessage;\n    for (const content of newContent) {\n        const snapshotContent = accumulatedMessage.content[content.index];\n        if (snapshotContent?.type == 'text') {\n            this._emit('textCreated', snapshotContent.text);\n        }\n    }\n    switch (event.event) {\n        case 'thread.message.created':\n            this._emit('messageCreated', event.data);\n            break;\n        case 'thread.message.in_progress':\n            break;\n        case 'thread.message.delta':\n            this._emit('messageDelta', event.data.delta, accumulatedMessage);\n            if (event.data.delta.content) {\n                for (const content of event.data.delta.content) {\n                    //If it is text delta, emit a text delta event\n                    if (content.type == 'text' && content.text) {\n                        let textDelta = content.text;\n                        let snapshot = accumulatedMessage.content[content.index];\n                        if (snapshot && snapshot.type == 'text') {\n                            this._emit('textDelta', textDelta, snapshot.text);\n                        }\n                        else {\n                            throw Error('The snapshot associated with this text delta is not text or missing');\n                        }\n                    }\n                    if (content.index != __classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")) {\n                        //See if we have in progress content\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\")) {\n                            switch (__classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").type) {\n                                case 'text':\n                                    this._emit('textDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                                case 'image_file':\n                                    this._emit('imageFileDone', __classPrivateFieldGet(this, _AssistantStream_currentContent, \"f\").image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                                    break;\n                            }\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentContentIndex, content.index, \"f\");\n                    }\n                    __classPrivateFieldSet(this, _AssistantStream_currentContent, accumulatedMessage.content[content.index], \"f\");\n                }\n            }\n            break;\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //We emit the latest content we were working on on completion (including incomplete)\n            if (__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\") !== undefined) {\n                const currentContent = event.data.content[__classPrivateFieldGet(this, _AssistantStream_currentContentIndex, \"f\")];\n                if (currentContent) {\n                    switch (currentContent.type) {\n                        case 'image_file':\n                            this._emit('imageFileDone', currentContent.image_file, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                        case 'text':\n                            this._emit('textDone', currentContent.text, __classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\"));\n                            break;\n                    }\n                }\n            }\n            if (__classPrivateFieldGet(this, _AssistantStream_messageSnapshot, \"f\")) {\n                this._emit('messageDone', event.data);\n            }\n            __classPrivateFieldSet(this, _AssistantStream_messageSnapshot, undefined, \"f\");\n    }\n}, _AssistantStream_handleRunStep = function _AssistantStream_handleRunStep(event) {\n    const accumulatedRunStep = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateRunStep).call(this, event);\n    __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, accumulatedRunStep, \"f\");\n    switch (event.event) {\n        case 'thread.run.step.created':\n            this._emit('runStepCreated', event.data);\n            break;\n        case 'thread.run.step.delta':\n            const delta = event.data.delta;\n            if (delta.step_details &&\n                delta.step_details.type == 'tool_calls' &&\n                delta.step_details.tool_calls &&\n                accumulatedRunStep.step_details.type == 'tool_calls') {\n                for (const toolCall of delta.step_details.tool_calls) {\n                    if (toolCall.index == __classPrivateFieldGet(this, _AssistantStream_currentToolCallIndex, \"f\")) {\n                        this._emit('toolCallDelta', toolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index]);\n                    }\n                    else {\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                            this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                        }\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCallIndex, toolCall.index, \"f\");\n                        __classPrivateFieldSet(this, _AssistantStream_currentToolCall, accumulatedRunStep.step_details.tool_calls[toolCall.index], \"f\");\n                        if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"))\n                            this._emit('toolCallCreated', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    }\n                }\n            }\n            this._emit('runStepDelta', event.data.delta, accumulatedRunStep);\n            break;\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n            __classPrivateFieldSet(this, _AssistantStream_currentRunStepSnapshot, undefined, \"f\");\n            const details = event.data.step_details;\n            if (details.type == 'tool_calls') {\n                if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                    this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                    __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n                }\n            }\n            this._emit('runStepDone', event.data, accumulatedRunStep);\n            break;\n        case 'thread.run.step.in_progress':\n            break;\n    }\n}, _AssistantStream_handleEvent = function _AssistantStream_handleEvent(event) {\n    __classPrivateFieldGet(this, _AssistantStream_events, \"f\").push(event);\n    this._emit('event', event);\n}, _AssistantStream_accumulateRunStep = function _AssistantStream_accumulateRunStep(event) {\n    switch (event.event) {\n        case 'thread.run.step.created':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            return event.data;\n        case 'thread.run.step.delta':\n            let snapshot = __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n            if (!snapshot) {\n                throw Error('Received a RunStepDelta before creation of a snapshot');\n            }\n            let data = event.data;\n            if (data.delta) {\n                const accumulated = AssistantStream.accumulateDelta(snapshot, data.delta);\n                __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = accumulated;\n            }\n            return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n        case 'thread.run.step.completed':\n        case 'thread.run.step.failed':\n        case 'thread.run.step.cancelled':\n        case 'thread.run.step.expired':\n        case 'thread.run.step.in_progress':\n            __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id] = event.data;\n            break;\n    }\n    if (__classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id])\n        return __classPrivateFieldGet(this, _AssistantStream_runStepSnapshots, \"f\")[event.data.id];\n    throw new Error('No snapshot available');\n}, _AssistantStream_accumulateMessage = function _AssistantStream_accumulateMessage(event, snapshot) {\n    let newContent = [];\n    switch (event.event) {\n        case 'thread.message.created':\n            //On creation the snapshot is just the initial message\n            return [event.data, newContent];\n        case 'thread.message.delta':\n            if (!snapshot) {\n                throw Error('Received a delta with no existing snapshot (there should be one from message creation)');\n            }\n            let data = event.data;\n            //If this delta does not have content, nothing to process\n            if (data.delta.content) {\n                for (const contentElement of data.delta.content) {\n                    if (contentElement.index in snapshot.content) {\n                        let currentContent = snapshot.content[contentElement.index];\n                        snapshot.content[contentElement.index] = __classPrivateFieldGet(this, _AssistantStream_instances, \"m\", _AssistantStream_accumulateContent).call(this, contentElement, currentContent);\n                    }\n                    else {\n                        snapshot.content[contentElement.index] = contentElement;\n                        // This is a new element\n                        newContent.push(contentElement);\n                    }\n                }\n            }\n            return [snapshot, newContent];\n        case 'thread.message.in_progress':\n        case 'thread.message.completed':\n        case 'thread.message.incomplete':\n            //No changes on other thread events\n            if (snapshot) {\n                return [snapshot, newContent];\n            }\n            else {\n                throw Error('Received thread message event with no existing snapshot');\n            }\n    }\n    throw Error('Tried to accumulate a non-message event');\n}, _AssistantStream_accumulateContent = function _AssistantStream_accumulateContent(contentElement, currentContent) {\n    return AssistantStream.accumulateDelta(currentContent, contentElement);\n}, _AssistantStream_handleRun = function _AssistantStream_handleRun(event) {\n    __classPrivateFieldSet(this, _AssistantStream_currentRunSnapshot, event.data, \"f\");\n    switch (event.event) {\n        case 'thread.run.created':\n            break;\n        case 'thread.run.queued':\n            break;\n        case 'thread.run.in_progress':\n            break;\n        case 'thread.run.requires_action':\n        case 'thread.run.cancelled':\n        case 'thread.run.failed':\n        case 'thread.run.completed':\n        case 'thread.run.expired':\n            __classPrivateFieldSet(this, _AssistantStream_finalRun, event.data, \"f\");\n            if (__classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\")) {\n                this._emit('toolCallDone', __classPrivateFieldGet(this, _AssistantStream_currentToolCall, \"f\"));\n                __classPrivateFieldSet(this, _AssistantStream_currentToolCall, undefined, \"f\");\n            }\n            break;\n        case 'thread.run.cancelling':\n            break;\n    }\n};\nfunction assertNever(_x) { }\n//# sourceMappingURL=AssistantStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Messages extends APIResource {\n    /**\n     * Create a message.\n     */\n    create(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieve a message.\n     */\n    retrieve(threadId, messageId, options) {\n        return this._client.get(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a message.\n     */\n    update(threadId, messageId, body, options) {\n        return this._client.post(`/threads/${threadId}/messages/${messageId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/messages`, MessagesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Deletes a message.\n     */\n    del(threadId, messageId, options) {\n        return this._client.delete(`/threads/${threadId}/messages/${messageId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class MessagesPage extends CursorPage {\n}\nMessages.MessagesPage = MessagesPage;\n//# sourceMappingURL=messages.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Steps extends APIResource {\n    retrieve(threadId, runId, stepId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(threadId, runId, stepId, {}, query);\n        }\n        return this._client.get(`/threads/${threadId}/runs/${runId}/steps/${stepId}`, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, runId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, runId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs/${runId}/steps`, RunStepsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class RunStepsPage extends CursorPage {\n}\nSteps.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=steps.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../../core.mjs\";\nimport { AssistantStream } from \"../../../../lib/AssistantStream.mjs\";\nimport { sleep } from \"../../../../core.mjs\";\nimport * as StepsAPI from \"./steps.mjs\";\nimport { RunStepsPage, Steps, } from \"./steps.mjs\";\nimport { CursorPage } from \"../../../../pagination.mjs\";\nexport class Runs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.steps = new StepsAPI.Steps(this._client);\n    }\n    create(threadId, params, options) {\n        const { include, ...body } = params;\n        return this._client.post(`/threads/${threadId}/runs`, {\n            query: { include },\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: params.stream ?? false,\n        });\n    }\n    /**\n     * Retrieves a run.\n     */\n    retrieve(threadId, runId, options) {\n        return this._client.get(`/threads/${threadId}/runs/${runId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a run.\n     */\n    update(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(threadId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(threadId, {}, query);\n        }\n        return this._client.getAPIList(`/threads/${threadId}/runs`, RunsPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancels a run that is `in_progress`.\n     */\n    cancel(threadId, runId, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * A helper to create a run an poll for a terminal state. More information on Run\n     * lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndPoll(threadId, body, options) {\n        const run = await this.create(threadId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Create a Run stream\n     *\n     * @deprecated use `stream` instead\n     */\n    createAndStream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    /**\n     * A helper to poll a run status until it reaches a terminal state. More\n     * information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async poll(threadId, runId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: run, response } = await this.retrieve(threadId, runId, {\n                ...options,\n                headers: { ...options?.headers, ...headers },\n            }).withResponse();\n            switch (run.status) {\n                //If we are in any sort of intermediate state we poll\n                case 'queued':\n                case 'in_progress':\n                case 'cancelling':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                //We return the run in any terminal state.\n                case 'requires_action':\n                case 'incomplete':\n                case 'cancelled':\n                case 'completed':\n                case 'failed':\n                case 'expired':\n                    return run;\n            }\n        }\n    }\n    /**\n     * Create a Run stream\n     */\n    stream(threadId, body, options) {\n        return AssistantStream.createAssistantStream(threadId, this._client.beta.threads.runs, body, options);\n    }\n    submitToolOutputs(threadId, runId, body, options) {\n        return this._client.post(`/threads/${threadId}/runs/${runId}/submit_tool_outputs`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to submit a tool output to a run and poll for a terminal run state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async submitToolOutputsAndPoll(threadId, runId, body, options) {\n        const run = await this.submitToolOutputs(threadId, runId, body, options);\n        return await this.poll(threadId, run.id, options);\n    }\n    /**\n     * Submit the tool outputs from a previous run and stream the run to a terminal\n     * state. More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    submitToolOutputsStream(threadId, runId, body, options) {\n        return AssistantStream.createToolAssistantStream(threadId, runId, this._client.beta.threads.runs, body, options);\n    }\n}\nexport class RunsPage extends CursorPage {\n}\nRuns.RunsPage = RunsPage;\nRuns.Steps = Steps;\nRuns.RunStepsPage = RunStepsPage;\n//# sourceMappingURL=runs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { AssistantStream } from \"../../../lib/AssistantStream.mjs\";\nimport * as MessagesAPI from \"./messages.mjs\";\nimport { Messages, MessagesPage, } from \"./messages.mjs\";\nimport * as RunsAPI from \"./runs/runs.mjs\";\nimport { Runs, RunsPage, } from \"./runs/runs.mjs\";\nexport class Threads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.runs = new RunsAPI.Runs(this._client);\n        this.messages = new MessagesAPI.Messages(this._client);\n    }\n    create(body = {}, options) {\n        if (isRequestOptions(body)) {\n            return this.create({}, body);\n        }\n        return this._client.post('/threads', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a thread.\n     */\n    retrieve(threadId, options) {\n        return this._client.get(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a thread.\n     */\n    update(threadId, body, options) {\n        return this._client.post(`/threads/${threadId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a thread.\n     */\n    del(threadId, options) {\n        return this._client.delete(`/threads/${threadId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    createAndRun(body, options) {\n        return this._client.post('/threads/runs', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n            stream: body.stream ?? false,\n        });\n    }\n    /**\n     * A helper to create a thread, start a run and then poll for a terminal state.\n     * More information on Run lifecycles can be found here:\n     * https://platform.openai.com/docs/assistants/how-it-works/runs-and-run-steps\n     */\n    async createAndRunPoll(body, options) {\n        const run = await this.createAndRun(body, options);\n        return await this.runs.poll(run.thread_id, run.id, options);\n    }\n    /**\n     * Create a thread and stream the run back\n     */\n    createAndRunStream(body, options) {\n        return AssistantStream.createThreadAssistantStream(body, this._client.beta.threads, options);\n    }\n}\nThreads.Runs = Runs;\nThreads.RunsPage = RunsPage;\nThreads.Messages = Messages;\nThreads.MessagesPage = MessagesPage;\n//# sourceMappingURL=threads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as AssistantsAPI from \"./assistants.mjs\";\nimport * as ChatAPI from \"./chat/chat.mjs\";\nimport { Assistants, AssistantsPage, } from \"./assistants.mjs\";\nimport * as RealtimeAPI from \"./realtime/realtime.mjs\";\nimport { Realtime } from \"./realtime/realtime.mjs\";\nimport * as ThreadsAPI from \"./threads/threads.mjs\";\nimport { Threads, } from \"./threads/threads.mjs\";\nimport { Chat } from \"./chat/chat.mjs\";\nexport class Beta extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.realtime = new RealtimeAPI.Realtime(this._client);\n        this.chat = new ChatAPI.Chat(this._client);\n        this.assistants = new AssistantsAPI.Assistants(this._client);\n        this.threads = new ThreadsAPI.Threads(this._client);\n    }\n}\nBeta.Realtime = Realtime;\nBeta.Assistants = Assistants;\nBeta.AssistantsPage = AssistantsPage;\nBeta.Threads = Threads;\n//# sourceMappingURL=beta.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Completions extends APIResource {\n    create(body, options) {\n        return this._client.post('/completions', { body, ...options, stream: body.stream ?? false });\n    }\n}\n//# sourceMappingURL=completions.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Embeddings extends APIResource {\n    /**\n     * Creates an embedding vector representing the input text.\n     */\n    create(body, options) {\n        return this._client.post('/embeddings', { body, ...options });\n    }\n}\n//# sourceMappingURL=embeddings.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { isRequestOptions } from \"../core.mjs\";\nimport { sleep } from \"../core.mjs\";\nimport { APIConnectionTimeoutError } from \"../error.mjs\";\nimport * as Core from \"../core.mjs\";\nimport { CursorPage } from \"../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Upload a file that can be used across various endpoints. Individual files can be\n     * up to 512 MB, and the size of all files uploaded by one organization can be up\n     * to 100 GB.\n     *\n     * The Assistants API supports files up to 2 million tokens and of specific file\n     * types. See the\n     * [Assistants Tools guide](https://platform.openai.com/docs/assistants/tools) for\n     * details.\n     *\n     * The Fine-tuning API only supports `.jsonl` files. The input also has certain\n     * required formats for fine-tuning\n     * [chat](https://platform.openai.com/docs/api-reference/fine-tuning/chat-input) or\n     * [completions](https://platform.openai.com/docs/api-reference/fine-tuning/completions-input)\n     * models.\n     *\n     * The Batch API only supports `.jsonl` files up to 200 MB in size. The input also\n     * has a specific required\n     * [format](https://platform.openai.com/docs/api-reference/batch/request-input).\n     *\n     * Please [contact us](https://help.openai.com/) if you need to increase these\n     * storage limits.\n     */\n    create(body, options) {\n        return this._client.post('/files', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Returns information about a specific file.\n     */\n    retrieve(fileId, options) {\n        return this._client.get(`/files/${fileId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/files', FileObjectsPage, { query, ...options });\n    }\n    /**\n     * Delete a file.\n     */\n    del(fileId, options) {\n        return this._client.delete(`/files/${fileId}`, options);\n    }\n    /**\n     * Returns the contents of the specified file.\n     */\n    content(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, {\n            ...options,\n            headers: { Accept: 'application/binary', ...options?.headers },\n            __binaryResponse: true,\n        });\n    }\n    /**\n     * Returns the contents of the specified file.\n     *\n     * @deprecated The `.content()` method should be used instead\n     */\n    retrieveContent(fileId, options) {\n        return this._client.get(`/files/${fileId}/content`, options);\n    }\n    /**\n     * Waits for the given file to be processed, default timeout is 30 mins.\n     */\n    async waitForProcessing(id, { pollInterval = 5000, maxWait = 30 * 60 * 1000 } = {}) {\n        const TERMINAL_STATES = new Set(['processed', 'error', 'deleted']);\n        const start = Date.now();\n        let file = await this.retrieve(id);\n        while (!file.status || !TERMINAL_STATES.has(file.status)) {\n            await sleep(pollInterval);\n            file = await this.retrieve(id);\n            if (Date.now() - start > maxWait) {\n                throw new APIConnectionTimeoutError({\n                    message: `Giving up on waiting for file ${id} to finish processing after ${maxWait} milliseconds.`,\n                });\n            }\n        }\n        return file;\n    }\n}\nexport class FileObjectsPage extends CursorPage {\n}\nFiles.FileObjectsPage = FileObjectsPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Checkpoints extends APIResource {\n    list(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/checkpoints`, FineTuningJobCheckpointsPage, { query, ...options });\n    }\n}\nexport class FineTuningJobCheckpointsPage extends CursorPage {\n}\nCheckpoints.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=checkpoints.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../../resource.mjs\";\nimport { isRequestOptions } from \"../../../core.mjs\";\nimport * as CheckpointsAPI from \"./checkpoints.mjs\";\nimport { Checkpoints, FineTuningJobCheckpointsPage, } from \"./checkpoints.mjs\";\nimport { CursorPage } from \"../../../pagination.mjs\";\nexport class Jobs extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.checkpoints = new CheckpointsAPI.Checkpoints(this._client);\n    }\n    /**\n     * Creates a fine-tuning job which begins the process of creating a new model from\n     * a given dataset.\n     *\n     * Response includes details of the enqueued job including job status and the name\n     * of the fine-tuned models once complete.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    create(body, options) {\n        return this._client.post('/fine_tuning/jobs', { body, ...options });\n    }\n    /**\n     * Get info about a fine-tuning job.\n     *\n     * [Learn more about fine-tuning](https://platform.openai.com/docs/guides/fine-tuning)\n     */\n    retrieve(fineTuningJobId, options) {\n        return this._client.get(`/fine_tuning/jobs/${fineTuningJobId}`, options);\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/fine_tuning/jobs', FineTuningJobsPage, { query, ...options });\n    }\n    /**\n     * Immediately cancel a fine-tune job.\n     */\n    cancel(fineTuningJobId, options) {\n        return this._client.post(`/fine_tuning/jobs/${fineTuningJobId}/cancel`, options);\n    }\n    listEvents(fineTuningJobId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listEvents(fineTuningJobId, {}, query);\n        }\n        return this._client.getAPIList(`/fine_tuning/jobs/${fineTuningJobId}/events`, FineTuningJobEventsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport class FineTuningJobsPage extends CursorPage {\n}\nexport class FineTuningJobEventsPage extends CursorPage {\n}\nJobs.FineTuningJobsPage = FineTuningJobsPage;\nJobs.FineTuningJobEventsPage = FineTuningJobEventsPage;\nJobs.Checkpoints = Checkpoints;\nJobs.FineTuningJobCheckpointsPage = FineTuningJobCheckpointsPage;\n//# sourceMappingURL=jobs.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as JobsAPI from \"./jobs/jobs.mjs\";\nimport { FineTuningJobEventsPage, FineTuningJobsPage, Jobs, } from \"./jobs/jobs.mjs\";\nexport class FineTuning extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.jobs = new JobsAPI.Jobs(this._client);\n    }\n}\nFineTuning.Jobs = Jobs;\nFineTuning.FineTuningJobsPage = FineTuningJobsPage;\nFineTuning.FineTuningJobEventsPage = FineTuningJobEventsPage;\n//# sourceMappingURL=fine-tuning.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport * as Core from \"../core.mjs\";\nexport class Images extends APIResource {\n    /**\n     * Creates a variation of a given image.\n     */\n    createVariation(body, options) {\n        return this._client.post('/images/variations', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an edited or extended image given an original image and a prompt.\n     */\n    edit(body, options) {\n        return this._client.post('/images/edits', Core.multipartFormRequestOptions({ body, ...options }));\n    }\n    /**\n     * Creates an image given a prompt.\n     */\n    generate(body, options) {\n        return this._client.post('/images/generations', { body, ...options });\n    }\n}\n//# sourceMappingURL=images.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nimport { Page } from \"../pagination.mjs\";\nexport class Models extends APIResource {\n    /**\n     * Retrieves a model instance, providing basic information about the model such as\n     * the owner and permissioning.\n     */\n    retrieve(model, options) {\n        return this._client.get(`/models/${model}`, options);\n    }\n    /**\n     * Lists the currently available models, and provides basic information about each\n     * one such as the owner and availability.\n     */\n    list(options) {\n        return this._client.getAPIList('/models', ModelsPage, options);\n    }\n    /**\n     * Delete a fine-tuned model. You must have the Owner role in your organization to\n     * delete a model.\n     */\n    del(model, options) {\n        return this._client.delete(`/models/${model}`, options);\n    }\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class ModelsPage extends Page {\n}\nModels.ModelsPage = ModelsPage;\n//# sourceMappingURL=models.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../resource.mjs\";\nexport class Moderations extends APIResource {\n    /**\n     * Classifies if text and/or image inputs are potentially harmful. Learn more in\n     * the [moderation guide](https://platform.openai.com/docs/guides/moderation).\n     */\n    create(body, options) {\n        return this._client.post('/moderations', { body, ...options });\n    }\n}\n//# sourceMappingURL=moderations.mjs.map","import { OpenAIError } from \"../error.mjs\";\nimport { isAutoParsableResponseFormat } from \"../lib/parser.mjs\";\nexport function maybeParseResponse(response, params) {\n    if (!params || !hasAutoParseableInput(params)) {\n        return {\n            ...response,\n            output_parsed: null,\n            output: response.output.map((item) => {\n                if (item.type === 'function_call') {\n                    return {\n                        ...item,\n                        parsed_arguments: null,\n                    };\n                }\n                if (item.type === 'message') {\n                    return {\n                        ...item,\n                        content: item.content.map((content) => ({\n                            ...content,\n                            parsed: null,\n                        })),\n                    };\n                }\n                else {\n                    return item;\n                }\n            }),\n        };\n    }\n    return parseResponse(response, params);\n}\nexport function parseResponse(response, params) {\n    const output = response.output.map((item) => {\n        if (item.type === 'function_call') {\n            return {\n                ...item,\n                parsed_arguments: parseToolCall(params, item),\n            };\n        }\n        if (item.type === 'message') {\n            const content = item.content.map((content) => {\n                if (content.type === 'output_text') {\n                    return {\n                        ...content,\n                        parsed: parseTextFormat(params, content.text),\n                    };\n                }\n                return content;\n            });\n            return {\n                ...item,\n                content,\n            };\n        }\n        return item;\n    });\n    const parsed = Object.assign({}, response, { output });\n    if (!Object.getOwnPropertyDescriptor(response, 'output_text')) {\n        addOutputText(parsed);\n    }\n    Object.defineProperty(parsed, 'output_parsed', {\n        enumerable: true,\n        get() {\n            for (const output of parsed.output) {\n                if (output.type !== 'message') {\n                    continue;\n                }\n                for (const content of output.content) {\n                    if (content.type === 'output_text' && content.parsed !== null) {\n                        return content.parsed;\n                    }\n                }\n            }\n            return null;\n        },\n    });\n    return parsed;\n}\nfunction parseTextFormat(params, content) {\n    if (params.text?.format?.type !== 'json_schema') {\n        return null;\n    }\n    if ('$parseRaw' in params.text?.format) {\n        const text_format = params.text?.format;\n        return text_format.$parseRaw(content);\n    }\n    return JSON.parse(content);\n}\nexport function hasAutoParseableInput(params) {\n    if (isAutoParsableResponseFormat(params.text?.format)) {\n        return true;\n    }\n    return false;\n}\nexport function makeParseableResponseTool(tool, { parser, callback, }) {\n    const obj = { ...tool };\n    Object.defineProperties(obj, {\n        $brand: {\n            value: 'auto-parseable-tool',\n            enumerable: false,\n        },\n        $parseRaw: {\n            value: parser,\n            enumerable: false,\n        },\n        $callback: {\n            value: callback,\n            enumerable: false,\n        },\n    });\n    return obj;\n}\nexport function isAutoParsableTool(tool) {\n    return tool?.['$brand'] === 'auto-parseable-tool';\n}\nfunction getInputToolByName(input_tools, name) {\n    return input_tools.find((tool) => tool.type === 'function' && tool.name === name);\n}\nfunction parseToolCall(params, toolCall) {\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return {\n        ...toolCall,\n        ...toolCall,\n        parsed_arguments: isAutoParsableTool(inputTool) ? inputTool.$parseRaw(toolCall.arguments)\n            : inputTool?.strict ? JSON.parse(toolCall.arguments)\n                : null,\n    };\n}\nexport function shouldParseToolCall(params, toolCall) {\n    if (!params) {\n        return false;\n    }\n    const inputTool = getInputToolByName(params.tools ?? [], toolCall.name);\n    return isAutoParsableTool(inputTool) || inputTool?.strict || false;\n}\nexport function validateInputTools(tools) {\n    for (const tool of tools ?? []) {\n        if (tool.type !== 'function') {\n            throw new OpenAIError(`Currently only \\`function\\` tool types support auto-parsing; Received \\`${tool.type}\\``);\n        }\n        if (tool.function.strict !== true) {\n            throw new OpenAIError(`The \\`${tool.function.name}\\` tool is not marked with \\`strict: true\\`. Only strict function tools can be auto-parsed`);\n        }\n    }\n}\nexport function addOutputText(rsp) {\n    const texts = [];\n    for (const output of rsp.output) {\n        if (output.type !== 'message') {\n            continue;\n        }\n        for (const content of output.content) {\n            if (content.type === 'output_text') {\n                texts.push(content.text);\n            }\n        }\n    }\n    rsp.output_text = texts.join('');\n}\n//# sourceMappingURL=ResponsesParser.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { ResponseItemsPage } from \"./responses.mjs\";\nexport class InputItems extends APIResource {\n    list(responseId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(responseId, {}, query);\n        }\n        return this._client.getAPIList(`/responses/${responseId}/input_items`, ResponseItemsPage, {\n            query,\n            ...options,\n        });\n    }\n}\nexport { ResponseItemsPage };\n//# sourceMappingURL=input-items.mjs.map","var __classPrivateFieldSet = (this && this.__classPrivateFieldSet) || function (receiver, state, value, kind, f) {\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n};\nvar __classPrivateFieldGet = (this && this.__classPrivateFieldGet) || function (receiver, state, kind, f) {\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n};\nvar _ResponseStream_instances, _ResponseStream_params, _ResponseStream_currentResponseSnapshot, _ResponseStream_finalResponse, _ResponseStream_beginRequest, _ResponseStream_addEvent, _ResponseStream_endRequest, _ResponseStream_accumulateResponse;\nimport { APIUserAbortError, OpenAIError } from \"../../error.mjs\";\nimport { EventStream } from \"../EventStream.mjs\";\nimport { maybeParseResponse } from \"../ResponsesParser.mjs\";\nexport class ResponseStream extends EventStream {\n    constructor(params) {\n        super();\n        _ResponseStream_instances.add(this);\n        _ResponseStream_params.set(this, void 0);\n        _ResponseStream_currentResponseSnapshot.set(this, void 0);\n        _ResponseStream_finalResponse.set(this, void 0);\n        __classPrivateFieldSet(this, _ResponseStream_params, params, \"f\");\n    }\n    static createResponse(client, params, options) {\n        const runner = new ResponseStream(params);\n        runner._run(() => runner._createResponse(client, params, {\n            ...options,\n            headers: { ...options?.headers, 'X-Stainless-Helper-Method': 'stream' },\n        }));\n        return runner;\n    }\n    async _createResponse(client, params, options) {\n        const signal = options?.signal;\n        if (signal) {\n            if (signal.aborted)\n                this.controller.abort();\n            signal.addEventListener('abort', () => this.controller.abort());\n        }\n        __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_beginRequest).call(this);\n        const stream = await client.responses.create({ ...params, stream: true }, { ...options, signal: this.controller.signal });\n        this._connected();\n        for await (const event of stream) {\n            __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_addEvent).call(this, event);\n        }\n        if (stream.controller.signal?.aborted) {\n            throw new APIUserAbortError();\n        }\n        return __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_endRequest).call(this);\n    }\n    [(_ResponseStream_params = new WeakMap(), _ResponseStream_currentResponseSnapshot = new WeakMap(), _ResponseStream_finalResponse = new WeakMap(), _ResponseStream_instances = new WeakSet(), _ResponseStream_beginRequest = function _ResponseStream_beginRequest() {\n        if (this.ended)\n            return;\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n    }, _ResponseStream_addEvent = function _ResponseStream_addEvent(event) {\n        if (this.ended)\n            return;\n        const response = __classPrivateFieldGet(this, _ResponseStream_instances, \"m\", _ResponseStream_accumulateResponse).call(this, event);\n        this._emit('event', event);\n        switch (event.type) {\n            case 'response.output_text.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    this._emit('response.output_text.delta', {\n                        ...event,\n                        snapshot: content.text,\n                    });\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = response.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    this._emit('response.function_call_arguments.delta', {\n                        ...event,\n                        snapshot: output.arguments,\n                    });\n                }\n                break;\n            }\n            default:\n                // @ts-ignore\n                this._emit(event.type, event);\n                break;\n        }\n    }, _ResponseStream_endRequest = function _ResponseStream_endRequest() {\n        if (this.ended) {\n            throw new OpenAIError(`stream has ended, this shouldn't happen`);\n        }\n        const snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            throw new OpenAIError(`request ended without sending any events`);\n        }\n        __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, undefined, \"f\");\n        const parsedResponse = finalizeResponse(snapshot, __classPrivateFieldGet(this, _ResponseStream_params, \"f\"));\n        __classPrivateFieldSet(this, _ResponseStream_finalResponse, parsedResponse, \"f\");\n        return parsedResponse;\n    }, _ResponseStream_accumulateResponse = function _ResponseStream_accumulateResponse(event) {\n        let snapshot = __classPrivateFieldGet(this, _ResponseStream_currentResponseSnapshot, \"f\");\n        if (!snapshot) {\n            if (event.type !== 'response.created') {\n                throw new OpenAIError(`When snapshot hasn't been set yet, expected 'response.created' event, got ${event.type}`);\n            }\n            snapshot = __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n            return snapshot;\n        }\n        switch (event.type) {\n            case 'response.output_item.added': {\n                snapshot.output.push(event.item);\n                break;\n            }\n            case 'response.content_part.added': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    output.content.push(event.part);\n                }\n                break;\n            }\n            case 'response.output_text.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'message') {\n                    const content = output.content[event.content_index];\n                    if (!content) {\n                        throw new OpenAIError(`missing content at index ${event.content_index}`);\n                    }\n                    if (content.type !== 'output_text') {\n                        throw new OpenAIError(`expected content to be 'output_text', got ${content.type}`);\n                    }\n                    content.text += event.delta;\n                }\n                break;\n            }\n            case 'response.function_call_arguments.delta': {\n                const output = snapshot.output[event.output_index];\n                if (!output) {\n                    throw new OpenAIError(`missing output at index ${event.output_index}`);\n                }\n                if (output.type === 'function_call') {\n                    output.arguments += event.delta;\n                }\n                break;\n            }\n            case 'response.completed': {\n                __classPrivateFieldSet(this, _ResponseStream_currentResponseSnapshot, event.response, \"f\");\n                break;\n            }\n        }\n        return snapshot;\n    }, Symbol.asyncIterator)]() {\n        const pushQueue = [];\n        const readQueue = [];\n        let done = false;\n        this.on('event', (event) => {\n            const reader = readQueue.shift();\n            if (reader) {\n                reader.resolve(event);\n            }\n            else {\n                pushQueue.push(event);\n            }\n        });\n        this.on('end', () => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.resolve(undefined);\n            }\n            readQueue.length = 0;\n        });\n        this.on('abort', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        this.on('error', (err) => {\n            done = true;\n            for (const reader of readQueue) {\n                reader.reject(err);\n            }\n            readQueue.length = 0;\n        });\n        return {\n            next: async () => {\n                if (!pushQueue.length) {\n                    if (done) {\n                        return { value: undefined, done: true };\n                    }\n                    return new Promise((resolve, reject) => readQueue.push({ resolve, reject })).then((event) => (event ? { value: event, done: false } : { value: undefined, done: true }));\n                }\n                const event = pushQueue.shift();\n                return { value: event, done: false };\n            },\n            return: async () => {\n                this.abort();\n                return { value: undefined, done: true };\n            },\n        };\n    }\n    /**\n     * @returns a promise that resolves with the final Response, or rejects\n     * if an error occurred or the stream ended prematurely without producing a REsponse.\n     */\n    async finalResponse() {\n        await this.done();\n        const response = __classPrivateFieldGet(this, _ResponseStream_finalResponse, \"f\");\n        if (!response)\n            throw new OpenAIError('stream ended without producing a ChatCompletion');\n        return response;\n    }\n}\nfunction finalizeResponse(snapshot, params) {\n    return maybeParseResponse(snapshot, params);\n}\n//# sourceMappingURL=ResponseStream.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { parseResponse, addOutputText, } from \"../../lib/ResponsesParser.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { APIResource } from \"../../resource.mjs\";\nimport * as InputItemsAPI from \"./input-items.mjs\";\nimport { InputItems } from \"./input-items.mjs\";\nimport { ResponseStream } from \"../../lib/responses/ResponseStream.mjs\";\nimport { CursorPage } from \"../../pagination.mjs\";\nexport class Responses extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.inputItems = new InputItemsAPI.InputItems(this._client);\n    }\n    create(body, options) {\n        return this._client.post('/responses', { body, ...options, stream: body.stream ?? false })._thenUnwrap((rsp) => {\n            if ('object' in rsp && rsp.object === 'response') {\n                addOutputText(rsp);\n            }\n            return rsp;\n        });\n    }\n    retrieve(responseId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.retrieve(responseId, {}, query);\n        }\n        return this._client.get(`/responses/${responseId}`, { query, ...options });\n    }\n    /**\n     * Deletes a model response with the given ID.\n     */\n    del(responseId, options) {\n        return this._client.delete(`/responses/${responseId}`, {\n            ...options,\n            headers: { Accept: '*/*', ...options?.headers },\n        });\n    }\n    parse(body, options) {\n        return this._client.responses\n            .create(body, options)\n            ._thenUnwrap((response) => parseResponse(response, body));\n    }\n    /**\n     * Creates a chat completion stream\n     */\n    stream(body, options) {\n        return ResponseStream.createResponse(this._client, body, options);\n    }\n}\nexport class ResponseItemsPage extends CursorPage {\n}\nResponses.InputItems = InputItems;\n//# sourceMappingURL=responses.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as Core from \"../../core.mjs\";\nexport class Parts extends APIResource {\n    /**\n     * Adds a\n     * [Part](https://platform.openai.com/docs/api-reference/uploads/part-object) to an\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object.\n     * A Part represents a chunk of bytes from the file you are trying to upload.\n     *\n     * Each Part can be at most 64 MB, and you can add Parts until you hit the Upload\n     * maximum of 8 GB.\n     *\n     * It is possible to add multiple Parts in parallel. You can decide the intended\n     * order of the Parts when you\n     * [complete the Upload](https://platform.openai.com/docs/api-reference/uploads/complete).\n     */\n    create(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/parts`, Core.multipartFormRequestOptions({ body, ...options }));\n    }\n}\n//# sourceMappingURL=parts.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport * as PartsAPI from \"./parts.mjs\";\nimport { Parts } from \"./parts.mjs\";\nexport class Uploads extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.parts = new PartsAPI.Parts(this._client);\n    }\n    /**\n     * Creates an intermediate\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object) object\n     * that you can add\n     * [Parts](https://platform.openai.com/docs/api-reference/uploads/part-object) to.\n     * Currently, an Upload can accept at most 8 GB in total and expires after an hour\n     * after you create it.\n     *\n     * Once you complete the Upload, we will create a\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * contains all the parts you uploaded. This File is usable in the rest of our\n     * platform as a regular File object.\n     *\n     * For certain `purpose` values, the correct `mime_type` must be specified. Please\n     * refer to documentation for the\n     * [supported MIME types for your use case](https://platform.openai.com/docs/assistants/tools/file-search#supported-files).\n     *\n     * For guidance on the proper filename extensions for each purpose, please follow\n     * the documentation on\n     * [creating a File](https://platform.openai.com/docs/api-reference/files/create).\n     */\n    create(body, options) {\n        return this._client.post('/uploads', { body, ...options });\n    }\n    /**\n     * Cancels the Upload. No Parts may be added after an Upload is cancelled.\n     */\n    cancel(uploadId, options) {\n        return this._client.post(`/uploads/${uploadId}/cancel`, options);\n    }\n    /**\n     * Completes the\n     * [Upload](https://platform.openai.com/docs/api-reference/uploads/object).\n     *\n     * Within the returned Upload object, there is a nested\n     * [File](https://platform.openai.com/docs/api-reference/files/object) object that\n     * is ready to use in the rest of the platform.\n     *\n     * You can specify the order of the Parts by passing in an ordered list of the Part\n     * IDs.\n     *\n     * The number of bytes uploaded upon completion must match the number of bytes\n     * initially specified when creating the Upload object. No Parts may be added after\n     * an Upload is completed.\n     */\n    complete(uploadId, body, options) {\n        return this._client.post(`/uploads/${uploadId}/complete`, { body, ...options });\n    }\n}\nUploads.Parts = Parts;\n//# sourceMappingURL=uploads.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { sleep, isRequestOptions } from \"../../core.mjs\";\nimport { CursorPage, Page } from \"../../pagination.mjs\";\nexport class Files extends APIResource {\n    /**\n     * Create a vector store file by attaching a\n     * [File](https://platform.openai.com/docs/api-reference/files) to a\n     * [vector store](https://platform.openai.com/docs/api-reference/vector-stores/object).\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/files`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file.\n     */\n    retrieve(vectorStoreId, fileId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Update attributes on a vector store file.\n     */\n    update(vectorStoreId, fileId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(vectorStoreId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list(vectorStoreId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files`, VectorStoreFilesPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store file. This will remove the file from the vector store but\n     * the file itself will not be deleted. To delete the file, use the\n     * [delete file](https://platform.openai.com/docs/api-reference/files/delete)\n     * endpoint.\n     */\n    del(vectorStoreId, fileId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}/files/${fileId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Attach a file to the given vector store and wait for it to be processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const file = await this.create(vectorStoreId, body, options);\n        return await this.poll(vectorStoreId, file.id, options);\n    }\n    /**\n     * Wait for the vector store file to finish processing.\n     *\n     * Note: this will return even if the file failed to process, you need to check\n     * file.last_error and file.status to handle these cases\n     */\n    async poll(vectorStoreId, fileId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const fileResponse = await this.retrieve(vectorStoreId, fileId, {\n                ...options,\n                headers,\n            }).withResponse();\n            const file = fileResponse.data;\n            switch (file.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = fileResponse.response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'completed':\n                    return file;\n            }\n        }\n    }\n    /**\n     * Upload a file to the `files` API and then attach it to the given vector store.\n     *\n     * Note the file will be asynchronously processed (you can use the alternative\n     * polling helper method to wait for processing to complete).\n     */\n    async upload(vectorStoreId, file, options) {\n        const fileInfo = await this._client.files.create({ file: file, purpose: 'assistants' }, options);\n        return this.create(vectorStoreId, { file_id: fileInfo.id }, options);\n    }\n    /**\n     * Add a file to a vector store and poll until processing is complete.\n     */\n    async uploadAndPoll(vectorStoreId, file, options) {\n        const fileInfo = await this.upload(vectorStoreId, file, options);\n        return await this.poll(vectorStoreId, fileInfo.id, options);\n    }\n    /**\n     * Retrieve the parsed contents of a vector store file.\n     */\n    content(vectorStoreId, fileId, options) {\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/files/${fileId}/content`, FileContentResponsesPage, { ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } });\n    }\n}\nexport class VectorStoreFilesPage extends CursorPage {\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class FileContentResponsesPage extends Page {\n}\nFiles.VectorStoreFilesPage = VectorStoreFilesPage;\nFiles.FileContentResponsesPage = FileContentResponsesPage;\n//# sourceMappingURL=files.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport { sleep } from \"../../core.mjs\";\nimport { allSettledWithThrow } from \"../../lib/Util.mjs\";\nimport { VectorStoreFilesPage } from \"./files.mjs\";\nexport class FileBatches extends APIResource {\n    /**\n     * Create a vector store file batch.\n     */\n    create(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store file batch.\n     */\n    retrieve(vectorStoreId, batchId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}/file_batches/${batchId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Cancel a vector store file batch. This attempts to cancel the processing of\n     * files in this batch as soon as possible.\n     */\n    cancel(vectorStoreId, batchId, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/cancel`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Create a vector store batch and poll until all files have been processed.\n     */\n    async createAndPoll(vectorStoreId, body, options) {\n        const batch = await this.create(vectorStoreId, body);\n        return await this.poll(vectorStoreId, batch.id, options);\n    }\n    listFiles(vectorStoreId, batchId, query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.listFiles(vectorStoreId, batchId, {}, query);\n        }\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/file_batches/${batchId}/files`, VectorStoreFilesPage, { query, ...options, headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers } });\n    }\n    /**\n     * Wait for the given file batch to be processed.\n     *\n     * Note: this will return even if one of the files failed to process, you need to\n     * check batch.file_counts.failed_count to handle this case.\n     */\n    async poll(vectorStoreId, batchId, options) {\n        const headers = { ...options?.headers, 'X-Stainless-Poll-Helper': 'true' };\n        if (options?.pollIntervalMs) {\n            headers['X-Stainless-Custom-Poll-Interval'] = options.pollIntervalMs.toString();\n        }\n        while (true) {\n            const { data: batch, response } = await this.retrieve(vectorStoreId, batchId, {\n                ...options,\n                headers,\n            }).withResponse();\n            switch (batch.status) {\n                case 'in_progress':\n                    let sleepInterval = 5000;\n                    if (options?.pollIntervalMs) {\n                        sleepInterval = options.pollIntervalMs;\n                    }\n                    else {\n                        const headerInterval = response.headers.get('openai-poll-after-ms');\n                        if (headerInterval) {\n                            const headerIntervalMs = parseInt(headerInterval);\n                            if (!isNaN(headerIntervalMs)) {\n                                sleepInterval = headerIntervalMs;\n                            }\n                        }\n                    }\n                    await sleep(sleepInterval);\n                    break;\n                case 'failed':\n                case 'cancelled':\n                case 'completed':\n                    return batch;\n            }\n        }\n    }\n    /**\n     * Uploads the given files concurrently and then creates a vector store file batch.\n     *\n     * The concurrency limit is configurable using the `maxConcurrency` parameter.\n     */\n    async uploadAndPoll(vectorStoreId, { files, fileIds = [] }, options) {\n        if (files == null || files.length == 0) {\n            throw new Error(`No \\`files\\` provided to process. If you've already uploaded files you should use \\`.createAndPoll()\\` instead`);\n        }\n        const configuredConcurrency = options?.maxConcurrency ?? 5;\n        // We cap the number of workers at the number of files (so we don't start any unnecessary workers)\n        const concurrencyLimit = Math.min(configuredConcurrency, files.length);\n        const client = this._client;\n        const fileIterator = files.values();\n        const allFileIds = [...fileIds];\n        // This code is based on this design. The libraries don't accommodate our environment limits.\n        // https://stackoverflow.com/questions/40639432/what-is-the-best-way-to-limit-concurrency-when-using-es6s-promise-all\n        async function processFiles(iterator) {\n            for (let item of iterator) {\n                const fileObj = await client.files.create({ file: item, purpose: 'assistants' }, options);\n                allFileIds.push(fileObj.id);\n            }\n        }\n        // Start workers to process results\n        const workers = Array(concurrencyLimit).fill(fileIterator).map(processFiles);\n        // Wait for all processing to complete.\n        await allSettledWithThrow(workers);\n        return await this.createAndPoll(vectorStoreId, {\n            file_ids: allFileIds,\n        });\n    }\n}\nexport { VectorStoreFilesPage };\n//# sourceMappingURL=file-batches.mjs.map","/**\n * Like `Promise.allSettled()` but throws an error if any promises are rejected.\n */\nexport const allSettledWithThrow = async (promises) => {\n    const results = await Promise.allSettled(promises);\n    const rejected = results.filter((result) => result.status === 'rejected');\n    if (rejected.length) {\n        for (const result of rejected) {\n            console.error(result.reason);\n        }\n        throw new Error(`${rejected.length} promise(s) failed - see the above errors`);\n    }\n    // Note: TS was complaining about using `.filter().map()` here for some reason\n    const values = [];\n    for (const result of results) {\n        if (result.status === 'fulfilled') {\n            values.push(result.value);\n        }\n    }\n    return values;\n};\n//# sourceMappingURL=Util.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nimport { APIResource } from \"../../resource.mjs\";\nimport { isRequestOptions } from \"../../core.mjs\";\nimport * as FileBatchesAPI from \"./file-batches.mjs\";\nimport { FileBatches, } from \"./file-batches.mjs\";\nimport * as FilesAPI from \"./files.mjs\";\nimport { FileContentResponsesPage, Files, VectorStoreFilesPage, } from \"./files.mjs\";\nimport { CursorPage, Page } from \"../../pagination.mjs\";\nexport class VectorStores extends APIResource {\n    constructor() {\n        super(...arguments);\n        this.files = new FilesAPI.Files(this._client);\n        this.fileBatches = new FileBatchesAPI.FileBatches(this._client);\n    }\n    /**\n     * Create a vector store.\n     */\n    create(body, options) {\n        return this._client.post('/vector_stores', {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Retrieves a vector store.\n     */\n    retrieve(vectorStoreId, options) {\n        return this._client.get(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Modifies a vector store.\n     */\n    update(vectorStoreId, body, options) {\n        return this._client.post(`/vector_stores/${vectorStoreId}`, {\n            body,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    list(query = {}, options) {\n        if (isRequestOptions(query)) {\n            return this.list({}, query);\n        }\n        return this._client.getAPIList('/vector_stores', VectorStoresPage, {\n            query,\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Delete a vector store.\n     */\n    del(vectorStoreId, options) {\n        return this._client.delete(`/vector_stores/${vectorStoreId}`, {\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n    /**\n     * Search a vector store for relevant chunks based on a query and file attributes\n     * filter.\n     */\n    search(vectorStoreId, body, options) {\n        return this._client.getAPIList(`/vector_stores/${vectorStoreId}/search`, VectorStoreSearchResponsesPage, {\n            body,\n            method: 'post',\n            ...options,\n            headers: { 'OpenAI-Beta': 'assistants=v2', ...options?.headers },\n        });\n    }\n}\nexport class VectorStoresPage extends CursorPage {\n}\n/**\n * Note: no pagination actually occurs yet, this is for forwards-compatibility.\n */\nexport class VectorStoreSearchResponsesPage extends Page {\n}\nVectorStores.VectorStoresPage = VectorStoresPage;\nVectorStores.VectorStoreSearchResponsesPage = VectorStoreSearchResponsesPage;\nVectorStores.Files = Files;\nVectorStores.VectorStoreFilesPage = VectorStoreFilesPage;\nVectorStores.FileContentResponsesPage = FileContentResponsesPage;\nVectorStores.FileBatches = FileBatches;\n//# sourceMappingURL=vector-stores.mjs.map","// File generated from our OpenAPI spec by Stainless. See CONTRIBUTING.md for details.\nvar _a;\nimport * as qs from \"./internal/qs/index.mjs\";\nimport * as Core from \"./core.mjs\";\nimport * as Errors from \"./error.mjs\";\nimport * as Pagination from \"./pagination.mjs\";\nimport * as Uploads from \"./uploads.mjs\";\nimport * as API from \"./resources/index.mjs\";\nimport { Batches, BatchesPage, } from \"./resources/batches.mjs\";\nimport { Completions, } from \"./resources/completions.mjs\";\nimport { Embeddings, } from \"./resources/embeddings.mjs\";\nimport { FileObjectsPage, Files, } from \"./resources/files.mjs\";\nimport { Images, } from \"./resources/images.mjs\";\nimport { Models, ModelsPage } from \"./resources/models.mjs\";\nimport { Moderations, } from \"./resources/moderations.mjs\";\nimport { Audio } from \"./resources/audio/audio.mjs\";\nimport { Beta } from \"./resources/beta/beta.mjs\";\nimport { Chat } from \"./resources/chat/chat.mjs\";\nimport { FineTuning } from \"./resources/fine-tuning/fine-tuning.mjs\";\nimport { Responses } from \"./resources/responses/responses.mjs\";\nimport { Uploads as UploadsAPIUploads, } from \"./resources/uploads/uploads.mjs\";\nimport { VectorStoreSearchResponsesPage, VectorStores, VectorStoresPage, } from \"./resources/vector-stores/vector-stores.mjs\";\nimport { ChatCompletionsPage, } from \"./resources/chat/completions/completions.mjs\";\n/**\n * API Client for interfacing with the OpenAI API.\n */\nexport class OpenAI extends Core.APIClient {\n    /**\n     * API Client for interfacing with the OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiKey=process.env['OPENAI_API_KEY'] ?? undefined]\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string | null | undefined} [opts.project=process.env['OPENAI_PROJECT_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL'] ?? https://api.openai.com/v1] - Override the default base URL for the API.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('OPENAI_API_KEY'), organization = Core.readEnv('OPENAI_ORG_ID') ?? null, project = Core.readEnv('OPENAI_PROJECT_ID') ?? null, ...opts } = {}) {\n        if (apiKey === undefined) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_KEY environment variable is missing or empty; either provide it, or instantiate the OpenAI client with an apiKey option, like new OpenAI({ apiKey: 'My API Key' }).\");\n        }\n        const options = {\n            apiKey,\n            organization,\n            project,\n            ...opts,\n            baseURL: baseURL || `https://api.openai.com/v1`,\n        };\n        if (!options.dangerouslyAllowBrowser && Core.isRunningInBrowser()) {\n            throw new Errors.OpenAIError(\"It looks like you're running in a browser-like environment.\\n\\nThis is disabled by default, as it risks exposing your secret API credentials to attackers.\\nIf you understand the risks and have appropriate mitigations in place,\\nyou can set the `dangerouslyAllowBrowser` option to `true`, e.g.,\\n\\nnew OpenAI({ apiKey, dangerouslyAllowBrowser: true });\\n\\nhttps://help.openai.com/en/articles/5112595-best-practices-for-api-key-safety\\n\");\n        }\n        super({\n            baseURL: options.baseURL,\n            timeout: options.timeout ?? 600000 /* 10 minutes */,\n            httpAgent: options.httpAgent,\n            maxRetries: options.maxRetries,\n            fetch: options.fetch,\n        });\n        this.completions = new API.Completions(this);\n        this.chat = new API.Chat(this);\n        this.embeddings = new API.Embeddings(this);\n        this.files = new API.Files(this);\n        this.images = new API.Images(this);\n        this.audio = new API.Audio(this);\n        this.moderations = new API.Moderations(this);\n        this.models = new API.Models(this);\n        this.fineTuning = new API.FineTuning(this);\n        this.vectorStores = new API.VectorStores(this);\n        this.beta = new API.Beta(this);\n        this.batches = new API.Batches(this);\n        this.uploads = new API.Uploads(this);\n        this.responses = new API.Responses(this);\n        this._options = options;\n        this.apiKey = apiKey;\n        this.organization = organization;\n        this.project = project;\n    }\n    defaultQuery() {\n        return this._options.defaultQuery;\n    }\n    defaultHeaders(opts) {\n        return {\n            ...super.defaultHeaders(opts),\n            'OpenAI-Organization': this.organization,\n            'OpenAI-Project': this.project,\n            ...this._options.defaultHeaders,\n        };\n    }\n    authHeaders(opts) {\n        return { Authorization: `Bearer ${this.apiKey}` };\n    }\n    stringifyQuery(query) {\n        return qs.stringify(query, { arrayFormat: 'brackets' });\n    }\n}\n_a = OpenAI;\nOpenAI.OpenAI = _a;\nOpenAI.DEFAULT_TIMEOUT = 600000; // 10 minutes\nOpenAI.OpenAIError = Errors.OpenAIError;\nOpenAI.APIError = Errors.APIError;\nOpenAI.APIConnectionError = Errors.APIConnectionError;\nOpenAI.APIConnectionTimeoutError = Errors.APIConnectionTimeoutError;\nOpenAI.APIUserAbortError = Errors.APIUserAbortError;\nOpenAI.NotFoundError = Errors.NotFoundError;\nOpenAI.ConflictError = Errors.ConflictError;\nOpenAI.RateLimitError = Errors.RateLimitError;\nOpenAI.BadRequestError = Errors.BadRequestError;\nOpenAI.AuthenticationError = Errors.AuthenticationError;\nOpenAI.InternalServerError = Errors.InternalServerError;\nOpenAI.PermissionDeniedError = Errors.PermissionDeniedError;\nOpenAI.UnprocessableEntityError = Errors.UnprocessableEntityError;\nOpenAI.toFile = Uploads.toFile;\nOpenAI.fileFromPath = Uploads.fileFromPath;\nOpenAI.Completions = Completions;\nOpenAI.Chat = Chat;\nOpenAI.ChatCompletionsPage = ChatCompletionsPage;\nOpenAI.Embeddings = Embeddings;\nOpenAI.Files = Files;\nOpenAI.FileObjectsPage = FileObjectsPage;\nOpenAI.Images = Images;\nOpenAI.Audio = Audio;\nOpenAI.Moderations = Moderations;\nOpenAI.Models = Models;\nOpenAI.ModelsPage = ModelsPage;\nOpenAI.FineTuning = FineTuning;\nOpenAI.VectorStores = VectorStores;\nOpenAI.VectorStoresPage = VectorStoresPage;\nOpenAI.VectorStoreSearchResponsesPage = VectorStoreSearchResponsesPage;\nOpenAI.Beta = Beta;\nOpenAI.Batches = Batches;\nOpenAI.BatchesPage = BatchesPage;\nOpenAI.Uploads = UploadsAPIUploads;\nOpenAI.Responses = Responses;\n/** API Client for interfacing with the Azure OpenAI API. */\nexport class AzureOpenAI extends OpenAI {\n    /**\n     * API Client for interfacing with the Azure OpenAI API.\n     *\n     * @param {string | undefined} [opts.apiVersion=process.env['OPENAI_API_VERSION'] ?? undefined]\n     * @param {string | undefined} [opts.endpoint=process.env['AZURE_OPENAI_ENDPOINT'] ?? undefined] - Your Azure endpoint, including the resource, e.g. `https://example-resource.azure.openai.com/`\n     * @param {string | undefined} [opts.apiKey=process.env['AZURE_OPENAI_API_KEY'] ?? undefined]\n     * @param {string | undefined} opts.deployment - A model deployment, if given, sets the base client URL to include `/deployments/{deployment}`.\n     * @param {string | null | undefined} [opts.organization=process.env['OPENAI_ORG_ID'] ?? null]\n     * @param {string} [opts.baseURL=process.env['OPENAI_BASE_URL']] - Sets the base URL for the API, e.g. `https://example-resource.azure.openai.com/openai/`.\n     * @param {number} [opts.timeout=10 minutes] - The maximum amount of time (in milliseconds) the client will wait for a response before timing out.\n     * @param {number} [opts.httpAgent] - An HTTP agent used to manage HTTP(s) connections.\n     * @param {Core.Fetch} [opts.fetch] - Specify a custom `fetch` function implementation.\n     * @param {number} [opts.maxRetries=2] - The maximum number of times the client will retry a request.\n     * @param {Core.Headers} opts.defaultHeaders - Default headers to include with every request to the API.\n     * @param {Core.DefaultQuery} opts.defaultQuery - Default query parameters to include with every request to the API.\n     * @param {boolean} [opts.dangerouslyAllowBrowser=false] - By default, client-side use of this library is not allowed, as it risks exposing your secret API credentials to attackers.\n     */\n    constructor({ baseURL = Core.readEnv('OPENAI_BASE_URL'), apiKey = Core.readEnv('AZURE_OPENAI_API_KEY'), apiVersion = Core.readEnv('OPENAI_API_VERSION'), endpoint, deployment, azureADTokenProvider, dangerouslyAllowBrowser, ...opts } = {}) {\n        if (!apiVersion) {\n            throw new Errors.OpenAIError(\"The OPENAI_API_VERSION environment variable is missing or empty; either provide it, or instantiate the AzureOpenAI client with an apiVersion option, like new AzureOpenAI({ apiVersion: 'My API Version' }).\");\n        }\n        if (typeof azureADTokenProvider === 'function') {\n            dangerouslyAllowBrowser = true;\n        }\n        if (!azureADTokenProvider && !apiKey) {\n            throw new Errors.OpenAIError('Missing credentials. Please pass one of `apiKey` and `azureADTokenProvider`, or set the `AZURE_OPENAI_API_KEY` environment variable.');\n        }\n        if (azureADTokenProvider && apiKey) {\n            throw new Errors.OpenAIError('The `apiKey` and `azureADTokenProvider` arguments are mutually exclusive; only one can be passed at a time.');\n        }\n        // define a sentinel value to avoid any typing issues\n        apiKey ?? (apiKey = API_KEY_SENTINEL);\n        opts.defaultQuery = { ...opts.defaultQuery, 'api-version': apiVersion };\n        if (!baseURL) {\n            if (!endpoint) {\n                endpoint = process.env['AZURE_OPENAI_ENDPOINT'];\n            }\n            if (!endpoint) {\n                throw new Errors.OpenAIError('Must provide one of the `baseURL` or `endpoint` arguments, or the `AZURE_OPENAI_ENDPOINT` environment variable');\n            }\n            baseURL = `${endpoint}/openai`;\n        }\n        else {\n            if (endpoint) {\n                throw new Errors.OpenAIError('baseURL and endpoint are mutually exclusive');\n            }\n        }\n        super({\n            apiKey,\n            baseURL,\n            ...opts,\n            ...(dangerouslyAllowBrowser !== undefined ? { dangerouslyAllowBrowser } : {}),\n        });\n        this.apiVersion = '';\n        this._azureADTokenProvider = azureADTokenProvider;\n        this.apiVersion = apiVersion;\n        this.deploymentName = deployment;\n    }\n    buildRequest(options, props = {}) {\n        if (_deployments_endpoints.has(options.path) && options.method === 'post' && options.body !== undefined) {\n            if (!Core.isObj(options.body)) {\n                throw new Error('Expected request body to be an object');\n            }\n            const model = this.deploymentName || options.body['model'] || options.__metadata?.['model'];\n            if (model !== undefined && !this.baseURL.includes('/deployments')) {\n                options.path = `/deployments/${model}${options.path}`;\n            }\n        }\n        return super.buildRequest(options, props);\n    }\n    async _getAzureADToken() {\n        if (typeof this._azureADTokenProvider === 'function') {\n            const token = await this._azureADTokenProvider();\n            if (!token || typeof token !== 'string') {\n                throw new Errors.OpenAIError(`Expected 'azureADTokenProvider' argument to return a string but it returned ${token}`);\n            }\n            return token;\n        }\n        return undefined;\n    }\n    authHeaders(opts) {\n        return {};\n    }\n    async prepareOptions(opts) {\n        /**\n         * The user should provide a bearer token provider if they want\n         * to use Azure AD authentication. The user shouldn't set the\n         * Authorization header manually because the header is overwritten\n         * with the Azure AD token if a bearer token provider is provided.\n         */\n        if (opts.headers?.['api-key']) {\n            return super.prepareOptions(opts);\n        }\n        const token = await this._getAzureADToken();\n        opts.headers ?? (opts.headers = {});\n        if (token) {\n            opts.headers['Authorization'] = `Bearer ${token}`;\n        }\n        else if (this.apiKey !== API_KEY_SENTINEL) {\n            opts.headers['api-key'] = this.apiKey;\n        }\n        else {\n            throw new Errors.OpenAIError('Unable to handle auth');\n        }\n        return super.prepareOptions(opts);\n    }\n}\nconst _deployments_endpoints = new Set([\n    '/completions',\n    '/chat/completions',\n    '/embeddings',\n    '/audio/transcriptions',\n    '/audio/translations',\n    '/audio/speech',\n    '/images/generations',\n]);\nconst API_KEY_SENTINEL = '<Missing Key>';\nexport { toFile, fileFromPath } from \"./uploads.mjs\";\nexport { OpenAIError, APIError, APIConnectionError, APIConnectionTimeoutError, APIUserAbortError, NotFoundError, ConflictError, RateLimitError, BadRequestError, AuthenticationError, InternalServerError, PermissionDeniedError, UnprocessableEntityError, } from \"./error.mjs\";\nexport default OpenAI;\n//# sourceMappingURL=index.mjs.map",null,null,null,null,null,null],"names":["globalData","actualMode","inputsCheckbox","modes","document","querySelector","querySelectorAll","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","SuppressedError","default_format","formatters","RFC1738","v","String","replace","RFC3986","is_array","Array","isArray","hex_table","array","i","push","toString","toUpperCase","limit","maybe_map","val","fn","mapped","length","has","Object","prototype","hasOwnProperty","array_prefix_generators","brackets","prefix","comma","indices","key","repeat","push_to_array","arr","value_or_array","to_ISO","Date","toISOString","defaults","addQueryPrefix","allowDots","allowEmptyArrays","arrayFormat","charset","charsetSentinel","delimiter","encode","encodeDotInKeys","encoder","str","_defaultEncoder","_kind","format","string","Symbol","call","escape","$0","parseInt","slice","out","j","segment","c","charCodeAt","charAt","join","encodeValuesOnly","formatter","serializeDate","date","skipNulls","strictNullHandling","sentinel","inner_stringify","object","generateArrayPrefix","commaRoundTrip","filter","sort","sideChannel","obj","tmp_sc","find_flag","get","pos","RangeError","constructor","isBuffer","is_buffer","key_value","values","obj_keys","keys","encoded_prefix","adjusted_prefix","encoded_key","key_prefix","set","valueSideChannel","WeakMap","stringify","opts","options","TypeError","normalize_stringify_options","joined","VERSION","kind","fetch","FormData","File","ReadableStream","getMultipartRequestOptions","getDefaultAgent","fileFromPath","isFsReadStream","auto","MultipartBody","body","this","toStringTag","shims.kind","shims","Error","shims.setShims","manuallyImported","recommendation","_fetch","_Request","_Response","_Headers","Request","Response","Headers","error","message","Blob","async","form","url","auto.getRuntime","OpenAIError","APIError","status","headers","super","makeMessage","request_id","data","code","param","type","msg","JSON","generate","errorResponse","APIConnectionError","cause","castToError","BadRequestError","AuthenticationError","PermissionDeniedError","NotFoundError","ConflictError","UnprocessableEntityError","RateLimitError","InternalServerError","APIUserAbortError","undefined","APIConnectionTimeoutError","LengthFinishReasonError","ContentFilterFinishReasonError","_LineDecoder_carriageReturnIndex","__classPrivateFieldSet","receiver","state","f","__classPrivateFieldGet","LineDecoder","buffer","Uint8Array","decode","chunk","binaryChunk","ArrayBuffer","TextEncoder","newData","lines","patternIndex","findNewlineIndex","carriage","index","decodeText","endIndex","preceding","line","bytes","Buffer","from","name","TextDecoder","textDecoder","flush","startIndex","findDoubleNewlineIndex","ReadableStreamToAsyncIterable","stream","asyncIterator","reader","getReader","read","releaseLock","cancelPromise","cancel","NEWLINE_CHARS","Set","NEWLINE_REGEXP","Stream","iterator","controller","fromSSEResponse","response","consumed","sse","abort","sseDecoder","SSEDecoder","lineDecoder","iter","sseChunk","iterSSEChunks","_iterSSEMessages","startsWith","event","parse","console","raw","fromReadableStream","readableStream","iterLines","tee","left","right","teeIterator","queue","shift","toReadableStream","self","start","pull","ctrl","close","enqueue","err","return","chunks","endsWith","substring","fieldname","_","indexOf","partition","isResponseLike","blob","isFileLike","lastModified","isBlobLike","size","text","arrayBuffer","toFile","URL","pathname","split","pop","bits","parts","isView","isAsyncIterableIterator","props","getOwnPropertyNames","map","p","propsForError","getBytes","getStringFromMaybeBuffer","filename","path","getName","x","isMultipartBody","multipartFormRequestOptions","createForm","all","entries","addFormValue","append","isUploadable","file","entry","prop","_AbstractPage_client","defaultParseResponse","debug","__streamClass","__binaryResponse","contentType","mediaType","trim","includes","json","_addRequestID","defineProperty","enumerable","APIPromise","responsePromise","parseResponse","_thenUnwrap","transform","asResponse","withResponse","parsedPromise","onfulfilled","onrejected","catch","onfinally","finally","APIClient","baseURL","maxRetries","timeout","httpAgent","overriddenFetch","validatePositiveInteger","authHeaders","defaultHeaders","Accept","getUserAgent","getPlatformHeaders","validateHeaders","customHeaders","defaultIdempotencyKey","uuid4","methodRequest","post","patch","put","method","request","DataView","getAPIList","Page","requestAPIList","calculateContentLength","byteLength","buildRequest","retryCount","query","__binaryRequest","contentLength","buildURL","minAgentTimeout","idempotencyHeader","idempotencyKey","req","buildHeaders","agent","signal","reqHeaders","applyHeadersMut","shimsKind","getHeader","prepareOptions","prepareRequest","parseHeaders","fromEntries","header","makeStatusError","remainingRetries","makeRequest","optionsInput","retriesRemaining","aborted","AbortController","fetchWithTimeout","retryRequest","responseHeaders","createResponseHeaders","ok","shouldRetry","errText","errJSON","safeJSON","errMessage","PagePromise","isAbsoluteURL","defaultQuery","isEmptyObj","search","stringifyQuery","encodeURIComponent","init","ms","addEventListener","setTimeout","fetchOptions","clearTimeout","shouldRetryHeader","timeoutMillis","retryAfterMillisHeader","timeoutMs","parseFloat","Number","isNaN","retryAfterHeader","timeoutSeconds","now","calculateDefaultRetryTimeoutMillis","sleep","numRetries","Math","min","pow","random","AbstractPage","client","hasNextPage","getPaginatedItems","nextPageInfo","getNextPage","nextInfo","nextOptions","params","searchParams","iterPages","page","item","Proxy","target","toLowerCase","requestOptionsKeys","__metadata","isRequestOptions","every","k","hasOwn","getPlatformProperties","Deno","build","normalizePlatform","os","normalizeArch","arch","version","deno","EdgeRuntime","process","platform","browserInfo","navigator","browserPatterns","pattern","match","exec","userAgent","browser","getBrowserInfo","_platformHeaders","startsWithSchemeRegexp","test","n","isInteger","readEnv","env","_k","targetHeaders","newHeaders","lowerKey","SENSITIVE_HEADERS","action","args","modifiedArgs","arg","modifiedArg","log","r","lowerCasedHeader","isHeadersProtocol","intercapsHeader","_m","g1","g2","warn","isObj","nextPageParams","CursorPage","has_more","info","id","after","APIResource","_client","list","completionId","ChatCompletionStoreMessagesPage","arguments","messages","MessagesAPI.Messages","create","retrieve","update","ChatCompletionsPage","del","delete","Completions$2","Messages","completions","CompletionsAPI.Completions","Chat$1","Completions","Speech","Transcriptions","Core.multipartFormRequestOptions","model","Translations","Audio","transcriptions","TranscriptionsAPI.Transcriptions","translations","TranslationsAPI.Translations","speech","SpeechAPI.Speech","Batches","batchId","BatchesPage","Assistants","assistantId","AssistantsPage","isRunnableFunctionWithParse","isAssistantMessage","role","isFunctionMessage","isToolMessage","_EventStream_instances","_EventStream_connectedPromise","_EventStream_resolveConnectedPromise","_EventStream_rejectConnectedPromise","_EventStream_endPromise","_EventStream_resolveEndPromise","_EventStream_rejectEndPromise","_EventStream_listeners","_EventStream_ended","_EventStream_errored","_EventStream_aborted","_EventStream_catchingPromiseCreated","_EventStream_handleError","EventStream","add","_run","executor","_emitFinal","_emit","bind","_connected","ended","errored","on","listener","off","listeners","findIndex","l","splice","once","emitted","forEach","isAutoParsableResponseFormat","response_format","isAutoParsableTool","tool","parseChatCompletion","completion","choices","choice","finish_reason","tool_calls","toolCall","inputTool","tools","find","function","parsed_arguments","$parseRaw","strict","parseToolCall","parsed","content","refusal","parseResponseFormat","shouldParseToolCall","hasAutoParseableInput","some","t","WeakSet","openAIError","_AbstractChatCompletionRunner_instances","_AbstractChatCompletionRunner_getFinalContent","_AbstractChatCompletionRunner_getFinalMessage","_AbstractChatCompletionRunner_getFinalFunctionCall","_AbstractChatCompletionRunner_getFinalFunctionCallResult","_AbstractChatCompletionRunner_calculateTotalUsage","_AbstractChatCompletionRunner_validateParams","_AbstractChatCompletionRunner_stringifyFunctionCallResult","DEFAULT_MAX_CHAT_COMPLETIONS","AbstractChatCompletionRunner","_chatCompletions","_addChatCompletion","chatCompletion","_addMessage","emit","function_call","tool_call","finalChatCompletion","finalContent","finalMessage","finalFunctionCall","finalFunctionCallResult","totalUsage","allChatCompletions","usage","_createChatCompletion","chat","_runChatCompletion","_runFunctions","restParams","singleFunctionToCall","maxChatCompletions","functionsByName","functions","parameters","description","rawContent","_runTools","tool_choice","inputTools","$callback","tool_call_id","rest","ret","at","y","total","completion_tokens","prompt_tokens","total_tokens","ChatCompletionRunner","runFunctions","runner","runTools","Allow","ATOM","PartialJSON","MalformedJSON","_parseJSON","jsonString","allow","markPartialJSON","throwMalformedError","parseAny","skipBlank","parseStr","parseObj","parseArr","Infinity","NaN","parseNum","lastIndexOf","writable","configurable","partialParse","input","allowPartial","parseJSON","_ChatCompletionStream_instances","_ChatCompletionStream_params","_ChatCompletionStream_choiceEventStates","_ChatCompletionStream_currentChatCompletionSnapshot","_ChatCompletionStream_beginRequest","_ChatCompletionStream_getChoiceEventState","_ChatCompletionStream_addChunk","_ChatCompletionStream_emitToolCallDoneEvent","_ChatCompletionStream_emitContentDoneEvents","_ChatCompletionStream_endRequest","_ChatCompletionStream_getAutoParseableResponseFormat","_ChatCompletionStream_accumulateChatCompletion","ChatCompletionStream","currentChatCompletionSnapshot","_fromReadableStream","createChatCompletion","chatId","content_done","refusal_done","logprobs_content_done","logprobs_refusal_done","done_tool_calls","current_tool_call_index","choiceSnapshot","delta","snapshot","logprobs","toolCallDelta","toolCallSnapshot","arguments_delta","toolCallIndex","responseFormat","created","system_fingerprint","choiceRest","messageRest","toolRest","fnRest","maybeParseChatCompletion","finalizeChatCompletion","_a","_b","_c","_d","assign","other","pushQueue","readQueue","ChatCompletionStreamingRunner","validateInputTools","Chat","Sessions","Realtime","sessions","SessionsAPI.Sessions","_AssistantStream_instances","_AssistantStream_events","_AssistantStream_runStepSnapshots","_AssistantStream_messageSnapshots","_AssistantStream_messageSnapshot","_AssistantStream_finalRun","_AssistantStream_currentContentIndex","_AssistantStream_currentContent","_AssistantStream_currentToolCallIndex","_AssistantStream_currentToolCall","_AssistantStream_currentEvent","_AssistantStream_currentRunSnapshot","_AssistantStream_currentRunStepSnapshot","_AssistantStream_addEvent","_AssistantStream_endRequest","_AssistantStream_handleMessage","_AssistantStream_handleRunStep","_AssistantStream_handleEvent","_AssistantStream_accumulateRunStep","_AssistantStream_accumulateMessage","_AssistantStream_accumulateContent","_AssistantStream_handleRun","AssistantStream","_addRun","createToolAssistantStream","threadId","runId","runs","_runToolAssistantStream","_createToolAssistantStream","run","submitToolOutputs","createThreadAssistantStream","thread","_threadAssistantStream","createAssistantStream","_runAssistantStream","currentEvent","currentRun","currentMessageSnapshot","currentRunStepSnapshot","finalRunSteps","finalMessages","finalRun","_createThreadAssistantStream","createAndRun","_createAssistantStream","accumulateDelta","acc","deltaValue","accValue","Core.isObj","deltaEntry","accEntry","accumulatedMessage","newContent","snapshotContent","textDelta","image_file","currentContent","accumulatedRunStep","step_details","accumulated","contentElement","messageId","MessagesPage","Steps","stepId","RunStepsPage","Runs","steps","StepsAPI.Steps","include","RunsPage","createAndPoll","poll","createAndStream","beta","threads","pollIntervalMs","sleepInterval","headerInterval","headerIntervalMs","submitToolOutputsAndPoll","submitToolOutputsStream","Threads","RunsAPI.Runs","createAndRunPoll","thread_id","createAndRunStream","Beta","realtime","RealtimeAPI.Realtime","ChatAPI.Chat","assistants","AssistantsAPI.Assistants","ThreadsAPI.Threads","Embeddings","fileId","FileObjectsPage","retrieveContent","waitForProcessing","pollInterval","maxWait","TERMINAL_STATES","Files$1","Checkpoints","fineTuningJobId","FineTuningJobCheckpointsPage","Jobs","checkpoints","CheckpointsAPI.Checkpoints","FineTuningJobsPage","listEvents","FineTuningJobEventsPage","FineTuning","jobs","JobsAPI.Jobs","Images","createVariation","edit","Models","ModelsPage","Moderations","maybeParseResponse","output_parsed","output","parseTextFormat","getOwnPropertyDescriptor","addOutputText","text_format","input_tools","rsp","texts","output_text","InputItems","responseId","ResponseItemsPage","_ResponseStream_instances","_ResponseStream_params","_ResponseStream_currentResponseSnapshot","_ResponseStream_finalResponse","_ResponseStream_beginRequest","_ResponseStream_addEvent","_ResponseStream_endRequest","_ResponseStream_accumulateResponse","ResponseStream","createResponse","_createResponse","responses","output_index","content_index","parsedResponse","finalizeResponse","part","finalResponse","Responses","inputItems","InputItemsAPI.InputItems","Parts","uploadId","Uploads","PartsAPI.Parts","complete","Files","vectorStoreId","VectorStoreFilesPage","fileResponse","upload","fileInfo","files","purpose","file_id","uploadAndPoll","FileContentResponsesPage","FileBatches","batch","listFiles","fileIds","configuredConcurrency","maxConcurrency","concurrencyLimit","fileIterator","allFileIds","workers","fill","fileObj","promises","results","allSettled","reason","allSettledWithThrow","file_ids","VectorStores","FilesAPI.Files","fileBatches","FileBatchesAPI.FileBatches","VectorStoresPage","VectorStoreSearchResponsesPage","OpenAI","Core.APIClient","Core.readEnv","apiKey","organization","project","Errors.OpenAIError","dangerouslyAllowBrowser","window","API.Completions","API.Chat","embeddings","API.Embeddings","API.Files","images","API.Images","audio","API.Audio","moderations","API.Moderations","models","API.Models","fineTuning","API.FineTuning","vectorStores","API.VectorStores","API.Beta","batches","API.Batches","uploads","API.Uploads","API.Responses","_options","Authorization","qs.stringify","showMessage","isError","isInfinite","style","color","textContent","display","DEFAULT_TIMEOUT","Errors.APIError","Errors.APIConnectionError","Errors.APIConnectionTimeoutError","Errors.APIUserAbortError","Errors.NotFoundError","Errors.ConflictError","Errors.RateLimitError","Errors.BadRequestError","Errors.AuthenticationError","Errors.InternalServerError","Errors.PermissionDeniedError","Errors.UnprocessableEntityError","Uploads.toFile","Uploads.fileFromPath","UploadsAPIUploads","apiKeySelector","inputModel","modelsList","imagesIntegrationLine","baseURLSelector","checkCanIncludeImages","versionNumber","isCurrentVersionSupportingImages","innerHTML","a","b","localeCompare","opt","createElement","appendChild","toExcludes","disabledForThisMode","autocomplete","clipboard","handleModeChange","needDisable","dontNeedDisable","parentElement","button","mode","classList","remove","CURRENT_VERSION","versionDisplay","setVersion","isCurrent","link","href","rel","createTextNode","lastVersion","getLastVersion","lastVertionSplitted","currentVersionSplitted","minVersionLength","notifyUpdate","settings","advencedSettings","switchSettings","preventDefault","saveBtn","inputsText","maxTokens","selector","logs","title","cursor","typing","mouseover","infinite","history","includeImages","element","checked","chrome","storage","sync","moodleGPT","config"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65]}